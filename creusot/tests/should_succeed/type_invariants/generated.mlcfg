
module Core_Option_Option_Type
  type t_option 't =
    | C_None
    | C_Some 't
    
end
module Generated_List_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  type t_list 't =
    | C_List 't (Core_Option_Option_Type.t_option (t_list 't))
    
end
module CreusotContracts_Invariant_Inv_Stub
  type t
  predicate inv (_x : t)
end
module CreusotContracts_Invariant_Inv_Interface
  type t
  predicate inv (_x : t)
  val inv (_x : t) : bool
    ensures { result = inv _x }
    
end
module CreusotContracts_Invariant_Inv
  type t
  predicate inv (_x : t) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 28 4 28 8] true
  val inv (_x : t) : bool
    ensures { result = inv _x }
    
end
module CreusotContracts_Invariant_UserInv_UserInv_Stub
  type self
  predicate user_inv (self : self)
end
module CreusotContracts_Invariant_UserInv_UserInv_Interface
  type self
  predicate user_inv (self : self)
  val user_inv (self : self) : bool
    ensures { result = user_inv self }
    
end
module CreusotContracts_Invariant_UserInv_UserInv
  type self
  predicate user_inv (self : self)
  val user_inv (self : self) : bool
    ensures { result = user_inv self }
    
end
module Generated_List_Type_Inv
  type t
  use Generated_List_Type as Generated_List_Type
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Invariant_Inv_Stub as Inv2 with
    type t = Core_Option_Option_Type.t_option (Generated_List_Type.t_list t)
  clone CreusotContracts_Invariant_Inv_Stub as Inv1 with
    type t = t
  clone CreusotContracts_Invariant_UserInv_UserInv_Stub as UserInv0 with
    type self = Generated_List_Type.t_list t
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = Generated_List_Type.t_list t
  axiom inv_t_list : forall self : Generated_List_Type.t_list t . Inv0.inv self = (UserInv0.user_inv self /\ match (self) with
    | Generated_List_Type.C_List a_0 a_1 -> Inv1.inv a_0 /\ Inv2.inv a_1
    end)
end
module CreusotContracts_Invariant_Impl0_UserInv_Stub
  type t
  predicate user_inv (self : t)
end
module CreusotContracts_Invariant_Impl0_UserInv_Interface
  type t
  predicate user_inv (self : t)
  val user_inv (self : t) : bool
    ensures { result = user_inv self }
    
end
module CreusotContracts_Invariant_Impl0_UserInv
  type t
  predicate user_inv (self : t) =
    [#"../../../../../creusot-contracts/src/invariant.rs" 43 8 43 12] true
  val user_inv (self : t) : bool
    ensures { result = user_inv self }
    
end
module TyInv_Trivial
  type t
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = t
  axiom inv_trivial : forall self : t . Inv0.inv self = true
end
module Core_Option_Option_Type_Inv
  type t
  clone CreusotContracts_Invariant_Inv_Stub as Inv1 with
    type t = t
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Invariant_UserInv_UserInv_Stub as UserInv0 with
    type self = Core_Option_Option_Type.t_option t
  clone CreusotContracts_Invariant_Inv_Stub as Inv0 with
    type t = Core_Option_Option_Type.t_option t
  axiom inv_t_option : forall self : Core_Option_Option_Type.t_option t . Inv0.inv self = (UserInv0.user_inv self /\ match (self) with
    | Core_Option_Option_Type.C_None -> true
    | Core_Option_Option_Type.C_Some a_0 -> Inv1.inv a_0
    end)
end
module Generated_UseList_Interface
  use prelude.Int
  use prelude.Int32
  use Generated_List_Type as Generated_List_Type
  val use_list [#"../generated.rs" 6 0 6 29] (l : Generated_List_Type.t_list int32) : ()
end
module Generated_UseList
  use prelude.Int
  use prelude.Int32
  use Generated_List_Type as Generated_List_Type
  clone CreusotContracts_Invariant_Inv_Interface as Inv3 with
    type t = Generated_List_Type.t_list int32
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone CreusotContracts_Invariant_Impl0_UserInv as UserInv1 with
    type t = Core_Option_Option_Type.t_option (Generated_List_Type.t_list int32)
  clone CreusotContracts_Invariant_Inv_Interface as Inv2 with
    type t = Core_Option_Option_Type.t_option (Generated_List_Type.t_list int32)
  clone Core_Option_Option_Type_Inv as Core_Option_Option_Type_Inv0 with
    type t = Generated_List_Type.t_list int32,
    predicate Inv0.inv = Inv2.inv,
    predicate UserInv0.user_inv = UserInv1.user_inv,
    predicate Inv1.inv = Inv3.inv,
    axiom .
  clone CreusotContracts_Invariant_Inv_Interface as Inv1 with
    type t = int32
  clone TyInv_Trivial as TyInv_Trivial0 with
    type t = int32,
    predicate Inv0.inv = Inv1.inv,
    axiom .
  clone CreusotContracts_Invariant_Impl0_UserInv as UserInv0 with
    type t = Generated_List_Type.t_list int32
  clone CreusotContracts_Invariant_Inv_Interface as Inv0 with
    type t = Generated_List_Type.t_list int32
  clone Generated_List_Type_Inv as Generated_List_Type_Inv0 with
    type t = int32,
    predicate Inv0.inv = Inv0.inv,
    predicate UserInv0.user_inv = UserInv0.user_inv,
    predicate Inv1.inv = Inv1.inv,
    predicate Inv2.inv = Inv2.inv,
    axiom .
  let rec cfg use_list [#"../generated.rs" 6 0 6 29] [@cfg:stackify] [@cfg:subregion_analysis] (l : Generated_List_Type.t_list int32) : ()
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var l : Generated_List_Type.t_list int32 = l;
  {
    goto BB0
  }
  BB0 {
    assert { [@expl:assertion] [#"../generated.rs" 7 18 7 35] Inv0.inv l };
    goto BB1
  }
  BB1 {
    _0 <- ();
    goto BB2
  }
  BB2 {
    return _0
  }
  
end
