
module C13AssocTypes_Impl0_Model
  type t
  
  let%span s13_assoc_types0 = "../13_assoc_types.rs" 13 13 13 17
  
  let%span s13_assoc_types1 = "../13_assoc_types.rs" 13 22 13 35
  
  let%span span2 = "../../../../../creusot-contracts/src/invariant.rs" 27 8 27 18
  
  predicate invariant'2 (self : t)
  
  predicate inv'2 (_1 : t)
  
  axiom inv'2 [@rewrite] : forall x : t . inv'2 x = true
  
  type model_ty'0
  
  predicate invariant'1 (self : model_ty'0)
  
  predicate inv'1 (_1 : model_ty'0)
  
  axiom inv'1 [@rewrite] : forall x : model_ty'0 . inv'1 x = true
  
  use prelude.prelude.Borrow
  
  predicate invariant'0 (self : t) =
    [%#span2] inv'2 self
  
  predicate inv'0 (_1 : t)
  
  axiom inv'0 [@rewrite] : forall x : t . inv'0 x = true
  
  use prelude.prelude.Intrinsic
  
  let rec model (self:t) (return'  (ret:model_ty'0))= {[%#s13_assoc_types0] inv'0 self}
    (! bb0
    [ bb0 = s0 [ s0 = model {self} (fun (_ret':model_ty'0) ->  [ &_0 <- _ret' ] s1) | s1 = bb1 ]  | bb1 = return' {_0} ]
    ) [ & _0 : model_ty'0 = any_l () | & self : t = self ] 
    [ return' (result:model_ty'0)-> {[@expl:postcondition] [%#s13_assoc_types1] inv'1 result} (! return' {result}) ]
    
end
module C13AssocTypes_Impl0
  type t
  
  let%span s13_assoc_types0 = "../13_assoc_types.rs" 13 4 13 35
  
  let%span span1 = "../../../../../creusot-contracts/src/invariant.rs" 27 8 27 18
  
  predicate invariant'2 (self : t)
  
  predicate inv'2 (_1 : t)
  
  axiom inv'2 [@rewrite] : forall x : t . inv'2 x = true
  
  type model_ty'0
  
  predicate invariant'1 (self : model_ty'0)
  
  predicate inv'1 (_1 : model_ty'0)
  
  axiom inv'1 [@rewrite] : forall x : model_ty'0 . inv'1 x = true
  
  use prelude.prelude.Borrow
  
  predicate invariant'0 (self : t) =
    [%#span1] inv'2 self
  
  predicate inv'0 (_1 : t)
  
  axiom inv'0 [@rewrite] : forall x : t . inv'0 x = true
  
  goal model_refn : [%#s13_assoc_types0] forall self : t . inv'0 self
   -> inv'0 self /\ (forall result : model_ty'0 . inv'1 result  -> inv'1 result)
end
