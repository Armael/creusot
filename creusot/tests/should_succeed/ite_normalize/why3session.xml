<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.14" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="ite_normalize.mlcfg"/>
<theory name="IteNormalize_Impl0_Clone" proved="true">
 <goal name="clone&#39;&#39;vc" expl="VC for clone&#39;" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="clone&#39;&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="52"/></proof>
  </goal>
  <goal name="clone&#39;&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="43"/></proof>
  </goal>
  <goal name="clone&#39;&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="clone&#39;&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="IteNormalize_Impl3_Ite" proved="true">
 <goal name="ite&#39;vc" expl="VC for ite" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ite&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="IteNormalize_Impl0" proved="true">
 <goal name="Clone1.clone&#39;&#39;refn&#39;vc" expl="VC for clone&#39;&#39;refn" proved="true">
 <transf name="split_vc" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="IteNormalize_Impl3_Transpose" proved="true">
 <goal name="transpose&#39;vc" expl="VC for transpose" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="transpose&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="54"/></proof>
  </goal>
  <goal name="transpose&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="55"/></proof>
  </goal>
  <goal name="transpose&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="timeout" time="1.00"/></proof>
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="4.95" steps="69740"/></proof>
  </goal>
  <goal name="transpose&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="64"/></proof>
  </goal>
  <goal name="transpose&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="65"/></proof>
  </goal>
  <goal name="transpose&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="timeout" time="1.00"/></proof>
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="4.91" steps="69491"/></proof>
  </goal>
  <goal name="transpose&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="timeout" time="1.00"/></proof>
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="4.34" steps="64903"/></proof>
  </goal>
  <goal name="transpose&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="69"/></proof>
  </goal>
  <goal name="transpose&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="transpose&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="IteNormalize_Impl3_Normalize" proved="true">
 <goal name="normalize&#39;vc" expl="VC for normalize" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="normalize&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="normalize&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="39"/></proof>
  </goal>
  <goal name="normalize&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="40"/></proof>
  </goal>
  <goal name="normalize&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="40"/></proof>
  </goal>
  <goal name="normalize&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="71"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="IteNormalize_Impl1" proved="true">
 <goal name="From1.from&#39;refn&#39;vc" expl="VC for from&#39;refn" proved="true">
 <transf name="split_vc" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="IteNormalize_Impl2" proved="true">
 <goal name="From1.from&#39;refn&#39;vc" expl="VC for from&#39;refn" proved="true">
 <transf name="split_vc" proved="true" >
 </transf>
 </goal>
</theory>
</file>
</why3session>
