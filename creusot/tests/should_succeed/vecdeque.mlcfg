
module Vecdeque_TestDeque
  use prelude.Int32
  use prelude.Int
  let rec cfg test_deque [#"/Users/xavier/Code/creusot/creusot/tests/should_succeed/vecdeque.rs" 5 0 5 19] [@cfg:stackify] [@cfg:subregion_analysis] (_1 : ()) : ()
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    switch ([#"/Users/xavier/Code/creusot/creusot/tests/should_succeed/vecdeque.rs" 18 12 18 18] ([#"/Users/xavier/Code/creusot/creusot/tests/should_succeed/vecdeque.rs" 18 12 18 13] [#"/Users/xavier/Code/creusot/creusot/tests/should_succeed/vecdeque.rs" 18 12 18 13] (1 : int32)) = ([#"/Users/xavier/Code/creusot/creusot/tests/should_succeed/vecdeque.rs" 18 17 18 18] [#"/Users/xavier/Code/creusot/creusot/tests/should_succeed/vecdeque.rs" 18 17 18 18] (1 : int32)))
      | False -> goto BB1
      | True -> goto BB2
      end
  }
  BB1 {
    assert { [#"/Users/xavier/Code/creusot/creusot/tests/should_succeed/vecdeque.rs" 18 4 18 19] false };
    absurd
  }
  BB2 {
    [#"/Users/xavier/Code/creusot/creusot/tests/should_succeed/vecdeque.rs" 5 20 28 1] _0 <- ([#"/Users/xavier/Code/creusot/creusot/tests/should_succeed/vecdeque.rs" 5 20 28 1] ());
    return _0
  }
  
end
