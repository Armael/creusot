<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.12.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="5" steplimit="0" memlimit="4000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="list_reversal_lasso.mlcfg"/>
<theory name="ListReversalLasso_Impl1_Index" proved="true">
 <goal name="index&#39;vc" expl="VC for index" proved="true">
 <proof prover="0"><result status="valid" time="0.100000" steps="14250"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl2_IndexMut" proved="true">
 <goal name="index_mut&#39;vc" expl="VC for index_mut" proved="true">
 <proof prover="0"><result status="valid" time="0.130000" steps="21090"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalSafe" proved="true">
 <goal name="list_reversal_safe&#39;vc" expl="VC for list_reversal_safe" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.223509" steps="23532"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalList" proved="true">
 <goal name="list_reversal_list&#39;vc" expl="VC for list_reversal_list" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_list&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.090000" steps="15274"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.100000" steps="14752"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.080000" steps="16831"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.070000" steps="529"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.110000" steps="17681"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.014740" steps="55"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.019600" steps="56"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020939" steps="62"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.016210" steps="56"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.110000" steps="17943"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.539379" steps="2500"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.716070" steps="3132"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalLoop" proved="true">
 <goal name="list_reversal_loop&#39;vc" expl="VC for list_reversal_loop" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_loop&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.080000" steps="14731"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.140000" steps="15595"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.080000" steps="15669"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.110000" steps="17731"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.4" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.935488" steps="5698"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.5" expl="postcondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="list_reversal_loop&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_loop&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_loop&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="list_reversal_loop&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.0" expl="VC for list_reversal_loop" proved="true">
       <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="1.233843" steps="98709"/></proof>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1" expl="VC for list_reversal_loop" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1.0" expl="VC for list_reversal_loop" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1.0.0" expl="VC for list_reversal_loop" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1.0.0.0" expl="VC for list_reversal_loop" proved="true">
          <proof prover="3"><result status="valid" time="0.065729" steps="233"/></proof>
          </goal>
          <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1.0.0.1" expl="VC for list_reversal_loop" proved="true">
          <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="1.493394" steps="111711"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2" expl="VC for list_reversal_loop" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2.0" expl="VC for list_reversal_loop" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2.0.0" expl="VC for list_reversal_loop" proved="true">
         <proof prover="0" timelimit="30" memlimit="4000"><result status="valid" time="1.141436" steps="97442"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.3" expl="VC for list_reversal_loop" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.3.0" expl="VC for list_reversal_loop" proved="true">
        <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="5.507854" steps="30203"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_loop&#39;vc.6" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="235"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.150000" steps="20723"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.037369" steps="63"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.033165" steps="64"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.038181" steps="70"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.11" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.023187" steps="57"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.080000" steps="18623"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="1.234900" steps="6402"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.866135" steps="3585"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.15" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_loop&#39;vc.15.0" expl="loop invariant preservation" proved="true">
   <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="1.782421" steps="8562"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalLasso" proved="true">
 <goal name="list_reversal_lasso&#39;vc" expl="VC for list_reversal_lasso" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_lasso&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.144436" steps="16057"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.164080" steps="18280"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.168837" steps="19188"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.150000" steps="19904"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.4" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="lasso">
   <goal name="list_reversal_lasso&#39;vc.4.0" expl="VC for list_reversal_lasso" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.4.0.0" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="0"><result status="valid" time="0.058838" steps="20052"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.1" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.040000" steps="405"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.2" expl="VC for list_reversal_lasso" proved="true">
    <transf name="replace" proved="true" arg1="mid" arg2="mid1">
     <goal name="list_reversal_lasso&#39;vc.4.0.2.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.388921" steps="43151"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.4.0.2.1" expl="equality hypothesis" proved="true">
     <proof prover="3"><result status="valid" time="0.040000" steps="465"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.3" expl="VC for list_reversal_lasso" proved="true">
    <transf name="replace" proved="true" arg1="mid" arg2="mid1">
     <goal name="list_reversal_lasso&#39;vc.4.0.3.0" expl="VC for list_reversal_lasso" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="3"><result status="valid" time="0.072433" steps="517"/></proof>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.1" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="3"><result status="valid" time="0.101103" steps="784"/></proof>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.2" expl="VC for list_reversal_lasso" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.2.0" expl="VC for list_reversal_lasso" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
         <proof prover="4" timelimit="30"><result status="valid" time="2.397731" steps="177735"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0.3" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="3"><result status="valid" time="0.073812" steps="412"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.4.0.3.1" expl="equality hypothesis" proved="true">
     <proof prover="3"><result status="valid" time="0.040000" steps="465"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.5" expl="precondition" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.098493" steps="1015"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.036739" steps="70"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.038848" steps="70"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.038466" steps="77"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.028086" steps="57"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.069828" steps="20874"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.11" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.11.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.11.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.11.0.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.120000" steps="550"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.11.0.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.184476" steps="836"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.11.0.0.2" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.11.0.0.2.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.11.0.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="0.204394" steps="1080"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.11.0.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.060000" steps="309"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.11.1" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="0.756838" steps="1386625"/></proof>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.11.2" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.11.2.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.11.2.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.100000" steps="502"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.11.2.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.286908" steps="1271"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.11.2.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.471958" steps="1852"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.11.2.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.147772" steps="575"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.12" expl="loop invariant preservation" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.12.0" expl="loop invariant preservation" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.12.0.0" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.284338" steps="1466"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.1" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="1"><result status="valid" time="0.351139" steps="598393"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.2" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.218390" steps="1234"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.3" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.152323" steps="546"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.4" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.216320" steps="1359"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.5" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="1.420602" steps="5644"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.6" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="1.220410" steps="5088"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.7" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.270640" steps="974"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.8" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.145315" steps="966"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.9" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="1"><result status="valid" time="0.440104" steps="519534"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.10" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.651332" steps="2780"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.12.0.11" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.139036" steps="545"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.13" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.13.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.13.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.13.0.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="1.826742" steps="7977"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.0.0.1" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.13.0.0.1.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.13.0.0.1.0.0" expl="VC for list_reversal_lasso" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="list_reversal_lasso&#39;vc.13.0.0.1.0.0.0" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="3"><result status="valid" time="0.060000" steps="316"/></proof>
        </goal>
        <goal name="list_reversal_lasso&#39;vc.13.0.0.1.0.0.1" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="9.368806" steps="62807"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.0.0.2" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.13.0.0.2.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.13.0.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="0.600825" steps="2438"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.0.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.246131" steps="770"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.13.1" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.13.1.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.13.1.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="0.258466" steps="1086"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.1.0.1" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.13.1.0.1.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.13.1.0.1.0.0" expl="VC for list_reversal_lasso" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="list_reversal_lasso&#39;vc.13.1.0.1.0.0.0" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="3"><result status="valid" time="0.045678" steps="322"/></proof>
        </goal>
        <goal name="list_reversal_lasso&#39;vc.13.1.0.1.0.0.1" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="3"><result status="valid" time="1.952370" steps="7703"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.1.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="1.761372" steps="7508"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.1.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.604054" steps="59965"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.13.2" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.13.2.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.13.2.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.067917" steps="534"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.2.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.589431" steps="58702"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.2.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="1.185882" steps="4719"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.13.2.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.251240" steps="31148"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindPtrInSeq_Impl" proved="true">
 <goal name="find_ptr_in_seq&#39;vc" expl="VC for find_ptr_in_seq" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.070000" steps="15617"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_Pigeon_Impl" proved="true">
 <goal name="pigeon&#39;vc" expl="VC for pigeon" proved="true">
 <proof prover="1" timelimit="5"><result status="valid" time="0.552714" steps="1921058"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindLassoAux_Impl" proved="true">
 <goal name="find_lasso_aux&#39;vc" expl="VC for find_lasso_aux" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="find_lasso_aux&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="16"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.029977" steps="23"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="25"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.062282" steps="75763"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="94"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.5" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.000000" steps="28"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.000000" steps="28"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="103"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="find_lasso_aux&#39;vc.8.0" expl="precondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="find_lasso_aux&#39;vc.8.0.0" expl="precondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="find_lasso_aux&#39;vc.8.0.0.0" expl="VC for find_lasso_aux" proved="true">
     <proof prover="3"><result status="valid" time="0.035975" steps="117"/></proof>
     </goal>
     <goal name="find_lasso_aux&#39;vc.8.0.0.1" expl="VC for find_lasso_aux" proved="true">
     <proof prover="3"><result status="valid" time="0.040206" steps="130"/></proof>
     </goal>
     <goal name="find_lasso_aux&#39;vc.8.0.0.2" expl="VC for find_lasso_aux" proved="true">
     <proof prover="3"><result status="valid" time="0.081749" steps="268"/></proof>
     </goal>
     <goal name="find_lasso_aux&#39;vc.8.0.0.3" expl="VC for find_lasso_aux" proved="true">
     <proof prover="3"><result status="valid" time="0.069856" steps="227"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="find_lasso_aux&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.368820" steps="393793"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindLasso_Impl" proved="true">
 <goal name="find_lasso&#39;vc" expl="VC for find_lasso" proved="true">
 <proof prover="4" memlimit="1000"><result status="valid" time="0.070000" steps="13224"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl1" proved="true">
 <goal name="index_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.007196" steps="0"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl2" proved="true">
 <goal name="index_mut_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.006979" steps="0"/></proof>
 </goal>
</theory>
</file>
</why3session>
