<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.11.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="list_reversal_lasso.mlcfg"/>
<theory name="ListReversalLasso_Impl1_Index" proved="true">
 <goal name="index&#39;vc" expl="VC for index" proved="true">
 <proof prover="0"><result status="valid" time="0.10" steps="13932"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl2_IndexMut" proved="true">
 <goal name="index_mut&#39;vc" expl="VC for index_mut" proved="true">
 <proof prover="0"><result status="valid" time="0.13" steps="20398"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalSafe" proved="true">
 <goal name="list_reversal_safe&#39;vc" expl="VC for list_reversal_safe" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.07" steps="23263"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalList" proved="true">
 <goal name="list_reversal_list&#39;vc" expl="VC for list_reversal_list" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_list&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="14585"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="14112"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="15679"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="560"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="17104"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="17402"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.08" steps="1312"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.7" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.43" steps="6811"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalLoop" proved="true">
 <goal name="list_reversal_loop&#39;vc" expl="VC for list_reversal_loop" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_loop&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="14057"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.14" steps="14994"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="15065"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="16529"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.4" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="759"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_loop&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_loop&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_loop&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="list_reversal_loop&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.0" expl="VC for list_reversal_loop" proved="true">
       <proof prover="2"><result status="valid" time="0.07" steps="280802"/></proof>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1" expl="VC for list_reversal_loop" proved="true">
       <proof prover="3"><result status="valid" time="0.08" steps="1468"/></proof>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2" expl="VC for list_reversal_loop" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2.0" expl="VC for list_reversal_loop" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2.0.0" expl="VC for list_reversal_loop" proved="true">
         <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="5.08" steps="89030"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.3" expl="VC for list_reversal_loop" proved="true">
       <proof prover="3"><result status="valid" time="0.17" steps="1726"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_loop&#39;vc.6" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="217"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.15" steps="20061"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.8" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.08" steps="15667"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.40" steps="5225"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.15" steps="1897"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.11" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_loop&#39;vc.11.0" expl="loop invariant preservation" proved="true">
   <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="0.79" steps="14019"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalLasso" proved="true">
 <goal name="list_reversal_lasso&#39;vc" expl="VC for list_reversal_lasso" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_lasso&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="15370"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="17049"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="18181"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.15" steps="18889"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.4" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="lasso">
   <goal name="list_reversal_lasso&#39;vc.4.0" expl="VC for list_reversal_lasso" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.4.0.0" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="0"><result status="valid" time="0.05" steps="19490"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.1" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.04" steps="365"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.2" expl="VC for list_reversal_lasso" proved="true">
    <transf name="replace" proved="true" arg1="mid" arg2="mid1">
     <goal name="list_reversal_lasso&#39;vc.4.0.2.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.18" steps="43122"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.4.0.2.1" expl="equality hypothesis" proved="true">
     <proof prover="3"><result status="valid" time="0.04" steps="422"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.3" expl="VC for list_reversal_lasso" proved="true">
    <transf name="replace" proved="true" arg1="mid" arg2="mid1">
     <goal name="list_reversal_lasso&#39;vc.4.0.3.0" expl="VC for list_reversal_lasso" proved="true">
     <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),uint64&#39;maxInt,uint64&#39;minInt,max_uint64,length1,radix,to_int,([]),singleton,cons,snoc,(++),( *_),memory_0,index_logic1,index_logic,resolve,mid,Unit_def_l,Unit_def_r,Comm1,Assoc,NonTrivialRing,Refl,Antisymm,Total,ZeroLessOne,Mod_bound,Div_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,(==)&#39;spec,empty&#39;def,([&lt;-])&#39;def,singleton&#39;spec,cons&#39;spec,snoc&#39;spec,([..])&#39;spec,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,new&#39;spec,shallow_model_spec,H15,Ensures2,H14,H12,Ensures1,H8,H5,H4,H3,H2">
      <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0" expl="VC for list_reversal_lasso" proved="true">
      <proof prover="3" timelimit="0.0644"><result status="valid" time="0.06" steps="911"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.4.0.3.1" expl="equality hypothesis" proved="true">
     <proof prover="3"><result status="valid" time="0.04" steps="422"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.5" expl="precondition" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.08" steps="1202"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.19" steps="20187"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.7" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.7.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.7.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.7.0.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.12" steps="413"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.7.0.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.06" steps="622"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.7.0.0.2" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.7.0.0.2.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.7.0.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="0.04" steps="803"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.7.0.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.06" steps="218"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.7.1" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.26" steps="809878"/></proof>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.7.2" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.7.2.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.7.2.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.10" steps="299"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.7.2.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.11" steps="774"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.7.2.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.13" steps="1566"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.7.2.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.03" steps="348"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.8" expl="loop invariant preservation" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.8.0" expl="loop invariant preservation" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.8.0.0" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.05" steps="810"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.1" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.73" steps="11458"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.2" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.06" steps="935"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.3" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.02" steps="263"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.4" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.09" steps="856"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.5" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.20" steps="2821"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.6" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.30" steps="3398"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.7" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.05" steps="640"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.8" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.06" steps="755"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.9" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.45" steps="6419"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.10" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.21" steps="2958"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.11" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.03" steps="346"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.9" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.9.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.9.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.9.0.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.72" steps="10627"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.0.0.1" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.9.0.0.1.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.9.0.0.1.0.0" expl="VC for list_reversal_lasso" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="list_reversal_lasso&#39;vc.9.0.0.1.0.0.0" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="3"><result status="valid" time="0.06" steps="120"/></proof>
        </goal>
        <goal name="list_reversal_lasso&#39;vc.9.0.0.1.0.0.1" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="3.90" steps="58972"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.0.0.2" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.9.0.0.2.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.9.0.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="0.14" steps="2389"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.0.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.13" steps="610"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.9.1" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.9.1.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.9.1.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="0.06" steps="1046"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.1.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.56" steps="8044"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.1.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.42" steps="5373"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.1.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.20" steps="59729"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.9.2" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.9.2.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.9.2.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.05" steps="510"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.2.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.26" steps="61238"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.2.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.30" steps="3277"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.2.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.12" steps="30254"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindPtrInSeq_Impl" proved="true">
 <goal name="find_ptr_in_seq&#39;vc" expl="VC for find_ptr_in_seq" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.07" steps="15617"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_Pigeon_Impl" proved="true">
 <goal name="pigeon&#39;vc" expl="VC for pigeon" proved="true">
 <proof prover="2" timelimit="5"><result status="valid" time="0.13" steps="689086"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindLassoAux_Impl" proved="true">
 <goal name="find_lasso_aux&#39;vc" expl="VC for find_lasso_aux" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="find_lasso_aux&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.10" steps="1767"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="94"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.00" steps="28"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.00" steps="28"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="102"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.39" steps="2099384"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="387178"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindLasso_Impl" proved="true">
 <goal name="find_lasso&#39;vc" expl="VC for find_lasso" proved="true">
 <proof prover="4"><result status="valid" time="0.07" steps="13201"/></proof>
 </goal>
</theory>
</file>
</why3session>
