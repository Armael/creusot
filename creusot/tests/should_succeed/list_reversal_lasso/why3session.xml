<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.11.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="list_reversal_lasso.mlcfg"/>
<theory name="ListReversalLasso_Impl1_Index" proved="true">
 <goal name="index&#39;vc" expl="VC for index" proved="true">
 <proof prover="0"><result status="valid" time="0.100000" steps="13932"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl2_IndexMut" proved="true">
 <goal name="index_mut&#39;vc" expl="VC for index_mut" proved="true">
 <proof prover="0"><result status="valid" time="0.130000" steps="20398"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalSafe" proved="true">
 <goal name="list_reversal_safe&#39;vc" expl="VC for list_reversal_safe" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.070000" steps="23199"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalList" proved="true">
 <goal name="list_reversal_list&#39;vc" expl="VC for list_reversal_list" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_list&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.090000" steps="14585"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.100000" steps="14112"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.080000" steps="15679"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.070000" steps="527"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.110000" steps="17061"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.110000" steps="17279"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.080000" steps="1140"/></proof>
  </goal>
  <goal name="list_reversal_list&#39;vc.7" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.244124" steps="4219"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalLoop" proved="true">
 <goal name="list_reversal_loop&#39;vc" expl="VC for list_reversal_loop" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_loop&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.080000" steps="14057"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.140000" steps="14994"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.080000" steps="15065"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.110000" steps="16529"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.4" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.050000" steps="748"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_loop&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_loop&#39;vc.5.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_loop&#39;vc.5.0.0.0" expl="postcondition" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="list_reversal_loop&#39;vc.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.0" expl="VC for list_reversal_loop" proved="true">
       <proof prover="2"><result status="valid" time="0.070000" steps="280754"/></proof>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.1" expl="VC for list_reversal_loop" proved="true">
       <proof prover="3"><result status="valid" time="0.080000" steps="1371"/></proof>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2" expl="VC for list_reversal_loop" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2.0" expl="VC for list_reversal_loop" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.2.0.0" expl="VC for list_reversal_loop" proved="true">
         <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="2.978097" steps="59335"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="list_reversal_loop&#39;vc.5.0.0.0.0.3" expl="VC for list_reversal_loop" proved="true">
       <proof prover="3"><result status="valid" time="0.170000" steps="1714"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_loop&#39;vc.6" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.020000" steps="224"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.150000" steps="19999"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.8" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.080000" steps="15638"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.400000" steps="5405"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.150000" steps="1890"/></proof>
  </goal>
  <goal name="list_reversal_loop&#39;vc.11" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_loop&#39;vc.11.0" expl="loop invariant preservation" proved="true">
   <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="0.282096" steps="4702"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_ListReversalLasso" proved="true">
 <goal name="list_reversal_lasso&#39;vc" expl="VC for list_reversal_lasso" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="list_reversal_lasso&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="15370"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.040000" steps="17049"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.050000" steps="18181"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.150000" steps="18889"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.4" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="lasso">
   <goal name="list_reversal_lasso&#39;vc.4.0" expl="VC for list_reversal_lasso" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.4.0.0" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="0"><result status="valid" time="0.050000" steps="19416"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.1" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.040000" steps="364"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.2" expl="VC for list_reversal_lasso" proved="true">
    <transf name="replace" proved="true" arg1="mid" arg2="mid1">
     <goal name="list_reversal_lasso&#39;vc.4.0.2.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.180000" steps="43177"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.4.0.2.1" expl="equality hypothesis" proved="true">
     <proof prover="3"><result status="valid" time="0.040000" steps="421"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.4.0.3" expl="VC for list_reversal_lasso" proved="true">
    <transf name="replace" proved="true" arg1="mid" arg2="mid1">
     <goal name="list_reversal_lasso&#39;vc.4.0.3.0" expl="VC for list_reversal_lasso" proved="true">
     <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),uint64&#39;maxInt,uint64&#39;minInt,max_uint64,length1,radix,to_int,([]),singleton,cons,snoc,(++),( *_),memory_0,index_logic1,index_logic,resolve,mid,Unit_def_l,Unit_def_r,Comm1,Assoc,NonTrivialRing,Refl,Antisymm,Total,ZeroLessOne,Mod_bound,Div_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,(==)&#39;spec,empty&#39;def,([&lt;-])&#39;def,singleton&#39;spec,cons&#39;spec,snoc&#39;spec,([..])&#39;spec,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,new&#39;spec,shallow_model_spec,H15,Ensures2,H14,H12,Ensures1,H8,H5,H4,H3,H2">
      <goal name="list_reversal_lasso&#39;vc.4.0.3.0.0" expl="VC for list_reversal_lasso" proved="true">
      <proof prover="3" timelimit="0.0644"><result status="valid" time="0.060000" steps="959"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.4.0.3.1" expl="equality hypothesis" proved="true">
     <proof prover="3"><result status="valid" time="0.040000" steps="421"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.5" expl="precondition" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.080000" steps="1228"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.190000" steps="20156"/></proof>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.7" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.7.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.7.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.7.0.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.120000" steps="417"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.7.0.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.060000" steps="627"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.7.0.0.2" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.7.0.0.2.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.7.0.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="0.040000" steps="817"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.7.0.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.060000" steps="221"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.7.1" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.260000" steps="810841"/></proof>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.7.2" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.7.2.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.7.2.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.100000" steps="300"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.7.2.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.110000" steps="785"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.7.2.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.130000" steps="1878"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.7.2.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.030000" steps="351"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.8" expl="loop invariant preservation" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.8.0" expl="loop invariant preservation" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.8.0.0" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.050000" steps="713"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.1" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.730000" steps="11392"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.2" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.060000" steps="790"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.3" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.020000" steps="264"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.4" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.090000" steps="1687"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.5" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.200000" steps="2431"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.6" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.300000" steps="4701"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.7" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.050000" steps="646"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.8" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.060000" steps="772"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.9" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.450000" steps="6457"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.10" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.210000" steps="2891"/></proof>
    </goal>
    <goal name="list_reversal_lasso&#39;vc.8.0.11" expl="VC for list_reversal_lasso" proved="true">
    <proof prover="3"><result status="valid" time="0.030000" steps="348"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_reversal_lasso&#39;vc.9" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="list_reversal_lasso&#39;vc.9.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.9.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.9.0.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.720000" steps="11340"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.0.0.1" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.9.0.0.1.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.9.0.0.1.0.0" expl="VC for list_reversal_lasso" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="list_reversal_lasso&#39;vc.9.0.0.1.0.0.0" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="3"><result status="valid" time="0.060000" steps="120"/></proof>
        </goal>
        <goal name="list_reversal_lasso&#39;vc.9.0.0.1.0.0.1" expl="VC for list_reversal_lasso" proved="true">
        <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="5.223546" steps="81532"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.0.0.2" expl="VC for list_reversal_lasso" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="list_reversal_lasso&#39;vc.9.0.0.2.0" expl="VC for list_reversal_lasso" proved="true">
      <transf name="inline_goal" proved="true" >
       <goal name="list_reversal_lasso&#39;vc.9.0.0.2.0.0" expl="VC for list_reversal_lasso" proved="true">
       <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="0.140000" steps="2284"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.0.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.130000" steps="622"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.9.1" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.9.1.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.9.1.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="0.060000" steps="1005"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.1.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.560000" steps="7748"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.1.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.420000" steps="6307"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.1.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.200000" steps="59660"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="list_reversal_lasso&#39;vc.9.2" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="list_reversal_lasso&#39;vc.9.2.0" expl="loop invariant preservation" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="list_reversal_lasso&#39;vc.9.2.0.0" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.050000" steps="504"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.2.0.1" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.260000" steps="61170"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.2.0.2" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="3"><result status="valid" time="0.152255" steps="2662"/></proof>
     </goal>
     <goal name="list_reversal_lasso&#39;vc.9.2.0.3" expl="VC for list_reversal_lasso" proved="true">
     <proof prover="0"><result status="valid" time="0.120000" steps="30218"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindPtrInSeq_Impl" proved="true">
 <goal name="find_ptr_in_seq&#39;vc" expl="VC for find_ptr_in_seq" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.070000" steps="15617"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_Pigeon_Impl" proved="true">
 <goal name="pigeon&#39;vc" expl="VC for pigeon" proved="true">
 <proof prover="2" timelimit="5"><result status="valid" time="0.130000" steps="689086"/></proof>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindLassoAux_Impl" proved="true">
 <goal name="find_lasso_aux&#39;vc" expl="VC for find_lasso_aux" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="find_lasso_aux&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="16"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="25"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.100000" steps="1767"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="94"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.000000" steps="28"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.000000" steps="28"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010000" steps="102"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.390000" steps="2099384"/></proof>
  </goal>
  <goal name="find_lasso_aux&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.080000" steps="387178"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ListReversalLasso_Impl4_FindLasso_Impl" proved="true">
 <goal name="find_lasso&#39;vc" expl="VC for find_lasso" proved="true">
 <proof prover="4"><result status="valid" time="0.070000" steps="13201"/></proof>
 </goal>
</theory>
</file>
</why3session>
