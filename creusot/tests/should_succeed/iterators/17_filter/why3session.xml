<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.5.3" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="17_filter.coma"/>
<theory name="M_17_filter__qyi2805440166685272671__produces_refl__Impl" proved="true">
 <goal name="vc_produces_refl" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_refl.0" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="vc_produces_refl.0.0" proved="true">
   <transf name="rewrite" proved="true" arg1="inv&#39;0" arg2="in" arg3="H">
    <goal name="vc_produces_refl.0.0.0" proved="true">
    <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
     <goal name="vc_produces_refl.0.0.0.0" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_produces_refl.0.0.0.0.0" proved="true">
      <proof prover="3"><result status="valid" time="0.018853" steps="6469"/></proof>
      </goal>
      <goal name="vc_produces_refl.0.0.0.0.1" proved="true">
      <transf name="exists" proved="true" arg1="(empty : seq t_Item&#39;0)">
       <goal name="vc_produces_refl.0.0.0.0.1.0" proved="true">
       <proof prover="0"><result status="valid" time="0.030637" steps="92576"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_17_filter__qyi2805440166685272671__produces_trans__Impl" proved="true">
 <goal name="vc_produces_trans" proved="true">
 <transf name="rewrite" proved="true" arg1="inv&#39;0">
  <goal name="vc_produces_trans.0" proved="true">
  <transf name="unfold" proved="true" arg1="produces&#39;0">
   <goal name="vc_produces_trans.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_produces_trans.0.0.0" proved="true">
    <proof prover="3"><result status="valid" time="0.037101" steps="11802"/></proof>
    </goal>
    <goal name="vc_produces_trans.0.0.1" proved="true">
    <transf name="exists" proved="true" arg1="(s ++ s1)">
     <goal name="vc_produces_trans.0.0.1.0" proved="true">
     <transf name="exists" proved="true" arg1="(fun i -&gt; if i &lt; length ab then f i else (f1 (i - length ab) + length s))">
      <goal name="vc_produces_trans.0.0.1.0.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_trans.0.0.1.0.0.0" proved="true">
       <proof prover="3"><result status="valid" time="0.034439" steps="12315"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.0.1.0.0.1" proved="true">
       <proof prover="3"><result status="valid" time="0.041014" steps="14908"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.0.1.0.0.2" proved="true">
       <proof prover="3"><result status="valid" time="0.035991" steps="13915"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.0.1.0.0.3" proved="true">
       <proof prover="3"><result status="valid" time="0.036252" steps="14210"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.0.1.0.0.4" proved="true">
       <proof prover="3"><result status="valid" time="0.043738" steps="16888"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.0.1.0.0.5" proved="true">
       <proof prover="3"><result status="valid" time="0.070988" steps="18731"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.0.1.0.0.6" proved="true">
       <transf name="instantiate" proved="true" arg1="H15" arg2="bor_f">
        <goal name="vc_produces_trans.0.0.1.0.0.6.0" proved="true">
        <transf name="destruct_rec" proved="true" arg1="Hinst">
         <goal name="vc_produces_trans.0.0.1.0.0.6.0.0" expl="destruct premise" proved="true">
         <proof prover="3"><result status="valid" time="0.041943" steps="12457"/></proof>
         </goal>
         <goal name="vc_produces_trans.0.0.1.0.0.6.0.1" proved="true">
         <proof prover="2"><result status="valid" time="0.031596" steps="265"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_17_filter__qyi2805440166685272671__next" proved="true">
 <goal name="vc_next" proved="true">
 <transf name="compute_specified" proved="true" >
  <goal name="vc_next.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_next.0.0" expl="loop invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.018498" steps="7922"/></proof>
   </goal>
   <goal name="vc_next.0.1" expl="loop invariant" proved="true">
   <transf name="assert" proved="true" arg1="(inv&#39;91 self.current)">
    <goal name="vc_next.0.1.0" expl="asserted formula" proved="true">
    <proof prover="3"><result status="valid" time="0.019164" steps="7937"/></proof>
    </goal>
    <goal name="vc_next.0.1.1" expl="loop invariant" proved="true">
    <transf name="rewrite" proved="true" arg1="inv&#39;9" arg2="in" arg3="h">
     <goal name="vc_next.0.1.1.0" expl="loop invariant" proved="true">
     <transf name="revert" proved="true" arg1="h">
      <goal name="vc_next.0.1.1.0.0" expl="loop invariant" proved="true">
      <proof prover="3"><result status="valid" time="0.018321" steps="8120"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="vc_next.0.2" expl="loop invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.021663" steps="10413"/></proof>
   </goal>
   <goal name="vc_next.0.3" expl="loop invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.011438" steps="10266"/></proof>
   </goal>
   <goal name="vc_next.0.4" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.019913" steps="12065"/></proof>
   </goal>
   <goal name="vc_next.0.5" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.011537" steps="9432"/></proof>
   </goal>
   <goal name="vc_next.0.6" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.010797" steps="9502"/></proof>
   </goal>
   <goal name="vc_next.0.7" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.011973" steps="9596"/></proof>
   </goal>
   <goal name="vc_next.0.8" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="1.140891" steps="227043"/></proof>
   </goal>
   <goal name="vc_next.0.9" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.014093" steps="9751"/></proof>
   </goal>
   <goal name="vc_next.0.10" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.020425" steps="12149"/></proof>
   </goal>
   <goal name="vc_next.0.11" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.020848" steps="12310"/></proof>
   </goal>
   <goal name="vc_next.0.12" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.013792" steps="9811"/></proof>
   </goal>
   <goal name="vc_next.0.13" expl="loop invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.011267" steps="9486"/></proof>
   </goal>
   <goal name="vc_next.0.14" expl="loop invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.023589" steps="11033"/></proof>
   </goal>
   <goal name="vc_next.0.15" expl="loop invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.027757" steps="10908"/></proof>
   </goal>
   <goal name="vc_next.0.16" expl="loop invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.021242" steps="14675"/></proof>
   </goal>
   <goal name="vc_next.0.17" expl="loop invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.023659" steps="12668"/></proof>
   </goal>
   <goal name="vc_next.0.18" expl="loop invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.021397" steps="12749"/></proof>
   </goal>
   <goal name="vc_next.0.19" expl="type invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.021010" steps="12505"/></proof>
   </goal>
   <goal name="vc_next.0.20" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.014338" steps="9862"/></proof>
   </goal>
   <goal name="vc_next.0.21" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="vc_next.0.21.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_next.0.21.0.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="0.032168" steps="11283"/></proof>
     </goal>
     <goal name="vc_next.0.21.0.1" expl="postcondition" proved="true">
     <transf name="exists" proved="true" arg1="(snoc (inner produced) field_0)">
      <goal name="vc_next.0.21.0.1.0" proved="true">
      <transf name="exists" proved="true" arg1="(fun (_ : int) -&gt; length (inner produced))">
       <goal name="vc_next.0.21.0.1.0.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="vc_next.0.21.0.1.0.0.0" proved="true">
        <proof prover="3"><result status="valid" time="0.032034" steps="11068"/></proof>
        </goal>
        <goal name="vc_next.0.21.0.1.0.0.1" proved="true">
        <proof prover="3"><result status="valid" time="0.047432" steps="13274"/></proof>
        </goal>
        <goal name="vc_next.0.21.0.1.0.0.2" proved="true">
        <proof prover="3"><result status="valid" time="0.058652" steps="14969"/></proof>
        </goal>
        <goal name="vc_next.0.21.0.1.0.0.3" proved="true">
        <proof prover="3"><result status="valid" time="0.050522" steps="13250"/></proof>
        </goal>
        <goal name="vc_next.0.21.0.1.0.0.4" proved="true">
        <proof prover="3"><result status="valid" time="0.090626" steps="23137"/></proof>
        </goal>
        <goal name="vc_next.0.21.0.1.0.0.5" proved="true">
        <proof prover="3"><result status="valid" time="0.050898" steps="15192"/></proof>
        </goal>
        <goal name="vc_next.0.21.0.1.0.0.6" proved="true">
        <transf name="case" proved="true" arg1="(i &lt; length (inner produced))">
         <goal name="vc_next.0.21.0.1.0.0.6.0" expl="true case" proved="true">
         <proof prover="3"><result status="valid" time="0.069740" steps="19532"/></proof>
         </goal>
         <goal name="vc_next.0.21.0.1.0.0.6.1" expl="false case" proved="true">
         <transf name="exists" proved="true" arg1="0">
          <goal name="vc_next.0.21.0.1.0.0.6.1.0" proved="true">
          <proof prover="3"><result status="valid" time="0.051203" steps="13654"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_17_filter__is_even__qy123zclosureqy35z0qy125z" proved="true">
 <goal name="vc_m_17_filter__is_even__qy123zclosureqy35z0qy125z" proved="true">
 <proof prover="3"><result status="valid" time="0.007208" steps="865"/></proof>
 </goal>
</theory>
<theory name="M_17_filter__is_even" proved="true">
 <goal name="vc_is_even" proved="true">
 <proof prover="3"><result status="valid" time="0.044222" steps="12378"/></proof>
 </goal>
</theory>
<theory name="M_17_filter__qyi2805440166685272671" proved="true">
 <goal name="produces_refl_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.011389" steps="6348"/></proof>
 </goal>
 <goal name="next_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.009423" steps="6348"/></proof>
 </goal>
 <goal name="produces_trans_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.010713" steps="6348"/></proof>
 </goal>
</theory>
</file>
</why3session>
