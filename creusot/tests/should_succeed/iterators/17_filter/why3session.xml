<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.5.3" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="17_filter.coma"/>
<theory name="M_17_filter__qyi17392541228996028033__produces_refl__Impl" proved="true">
 <goal name="vc_produces_refl" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_refl.0" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="vc_produces_refl.0.0" proved="true">
   <transf name="rewrite" proved="true" arg1="inv&#39;0" arg2="in" arg3="H">
    <goal name="vc_produces_refl.0.0.0" proved="true">
    <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
     <goal name="vc_produces_refl.0.0.0.0" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_produces_refl.0.0.0.0.0" proved="true">
      <proof prover="3"><result status="valid" time="0.015999" steps="6416"/></proof>
      </goal>
      <goal name="vc_produces_refl.0.0.0.0.1" proved="true">
      <transf name="exists" proved="true" arg1="(empty : seq t_Item&#39;0)">
       <goal name="vc_produces_refl.0.0.0.0.1.0" proved="true">
       <proof prover="0"><result status="valid" time="0.024671" steps="98277"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_17_filter__qyi17392541228996028033__produces_trans__Impl" proved="true">
 <goal name="vc_produces_trans" proved="true">
 <transf name="rewrite" proved="true" arg1="inv&#39;0">
  <goal name="vc_produces_trans.0" proved="true">
  <transf name="unfold" proved="true" arg1="produces&#39;0">
   <goal name="vc_produces_trans.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_produces_trans.0.0.0" proved="true">
    <proof prover="3"><result status="valid" time="0.034332" steps="10579"/></proof>
    </goal>
    <goal name="vc_produces_trans.0.0.1" proved="true">
    <transf name="exists" proved="true" arg1="(s ++ s1)">
     <goal name="vc_produces_trans.0.0.1.0" proved="true">
     <transf name="exists" proved="true" arg1="(fun i -&gt; if i &lt; length ab then f i else (f1 (i - length ab) + length s))">
      <goal name="vc_produces_trans.0.0.1.0.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_trans.0.0.1.0.0.0" proved="true">
       <proof prover="3"><result status="valid" time="0.036541" steps="11092"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.0.1.0.0.1" proved="true">
       <proof prover="3"><result status="valid" time="0.040945" steps="12638"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.0.1.0.0.2" proved="true">
       <proof prover="3"><result status="valid" time="0.045209" steps="14443"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.0.1.0.0.3" proved="true">
       <proof prover="3"><result status="valid" time="0.042671" steps="12967"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.0.1.0.0.4" proved="true">
       <proof prover="3"><result status="valid" time="0.053781" steps="15577"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.0.1.0.0.5" proved="true">
       <proof prover="3"><result status="valid" time="0.206417" steps="29766"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.0.1.0.0.6" proved="true">
       <transf name="instantiate" proved="true" arg1="H14" arg2="bor_f">
        <goal name="vc_produces_trans.0.0.1.0.0.6.0" proved="true">
        <transf name="destruct_rec" proved="true" arg1="Hinst">
         <goal name="vc_produces_trans.0.0.1.0.0.6.0.0" expl="destruct premise" proved="true">
         <proof prover="3"><result status="valid" time="0.030334" steps="11168"/></proof>
         </goal>
         <goal name="vc_produces_trans.0.0.1.0.0.6.0.1" proved="true">
         <proof prover="2" timelimit="1"><result status="valid" time="0.023265" steps="254"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_17_filter__qyi17392541228996028033__next" proved="true">
 <goal name="vc_next" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_next.0" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.016191" steps="7915"/></proof>
  </goal>
  <goal name="vc_next.1" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.015985" steps="8080"/></proof>
  </goal>
  <goal name="vc_next.2" expl="loop invariant" proved="true">
  <transf name="assert" proved="true" arg1="(inv&#39;91 self.current)">
   <goal name="vc_next.2.0" expl="asserted formula" proved="true">
   <proof prover="3"><result status="valid" time="0.021638" steps="8203"/></proof>
   </goal>
   <goal name="vc_next.2.1" expl="loop invariant" proved="true">
   <transf name="rewrite" proved="true" arg1="inv&#39;9" arg2="in" arg3="h">
    <goal name="vc_next.2.1.0" expl="loop invariant" proved="true">
    <transf name="revert" proved="true" arg1="h">
     <goal name="vc_next.2.1.0.0" expl="loop invariant" proved="true">
     <proof prover="3"><result status="valid" time="0.017733" steps="8428"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_next.3" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.025173" steps="11080"/></proof>
  </goal>
  <goal name="vc_next.4" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.024402" steps="11241"/></proof>
  </goal>
  <goal name="vc_next.5" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.019116" steps="10322"/></proof>
  </goal>
  <goal name="vc_next.6" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.086384" steps="12365"/></proof>
  </goal>
  <goal name="vc_next.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.031786" steps="11937"/></proof>
  </goal>
  <goal name="vc_next.8" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.019163" steps="9415"/></proof>
  </goal>
  <goal name="vc_next.9" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.019541" steps="12976"/></proof>
  </goal>
  <goal name="vc_next.10" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.019148" steps="9725"/></proof>
  </goal>
  <goal name="vc_next.11" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.036698" steps="13935"/></proof>
  </goal>
  <goal name="vc_next.12" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_next.12.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.037868" steps="13747"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_next.13" proved="true">
  <proof prover="2"><result status="valid" time="0.023286" steps="146"/></proof>
  </goal>
  <goal name="vc_next.14" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.031061" steps="12124"/></proof>
  </goal>
  <goal name="vc_next.15" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.032395" steps="11871"/></proof>
  </goal>
  <goal name="vc_next.16" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.032542" steps="12318"/></proof>
  </goal>
  <goal name="vc_next.17" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.025367" steps="10562"/></proof>
  </goal>
  <goal name="vc_next.18" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.018920" steps="9352"/></proof>
  </goal>
  <goal name="vc_next.19" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.027236" steps="11027"/></proof>
  </goal>
  <goal name="vc_next.20" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.026285" steps="10857"/></proof>
  </goal>
  <goal name="vc_next.21" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.039907" steps="14961"/></proof>
  </goal>
  <goal name="vc_next.22" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.035324" steps="12813"/></proof>
  </goal>
  <goal name="vc_next.23" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.035799" steps="12938"/></proof>
  </goal>
  <goal name="vc_next.24" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.033945" steps="12545"/></proof>
  </goal>
  <goal name="vc_next.25" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.024746" steps="9731"/></proof>
  </goal>
  <goal name="vc_next.26" expl="postcondition" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="vc_next.26.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_next.26.0.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.028701" steps="11404"/></proof>
    </goal>
    <goal name="vc_next.26.0.1" expl="postcondition" proved="true">
    <transf name="exists" proved="true" arg1="(snoc (inner produced) field_0)">
     <goal name="vc_next.26.0.1.0" proved="true">
     <transf name="exists" proved="true" arg1="(fun (_ : int) -&gt; length (inner produced))">
      <goal name="vc_next.26.0.1.0.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_next.26.0.1.0.0.0" proved="true">
       <proof prover="3"><result status="valid" time="0.026997" steps="11141"/></proof>
       </goal>
       <goal name="vc_next.26.0.1.0.0.1" proved="true">
       <proof prover="3"><result status="valid" time="0.047978" steps="15044"/></proof>
       </goal>
       <goal name="vc_next.26.0.1.0.0.2" proved="true">
       <proof prover="3"><result status="valid" time="0.036723" steps="13377"/></proof>
       </goal>
       <goal name="vc_next.26.0.1.0.0.3" proved="true">
       <proof prover="3"><result status="valid" time="0.039337" steps="13371"/></proof>
       </goal>
       <goal name="vc_next.26.0.1.0.0.4" proved="true">
       <proof prover="3"><result status="valid" time="0.180424" steps="23329"/></proof>
       </goal>
       <goal name="vc_next.26.0.1.0.0.5" proved="true">
       <proof prover="3"><result status="valid" time="0.042068" steps="15210"/></proof>
       </goal>
       <goal name="vc_next.26.0.1.0.0.6" proved="true">
       <transf name="exists" proved="true" arg1="0">
        <goal name="vc_next.26.0.1.0.0.6.0" proved="true">
        <proof prover="3"><result status="valid" time="0.169810" steps="19892"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_next.27" proved="true">
  <proof prover="3"><result status="valid" time="0.022107" steps="9654"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_17_filter__is_even__qy123zclosureqy35z0qy125z" proved="true">
 <goal name="vc_m_17_filter__is_even__qy123zclosureqy35z0qy125z" proved="true">
 <proof prover="3"><result status="valid" time="0.007208" steps="865"/></proof>
 </goal>
</theory>
<theory name="M_17_filter__is_even" proved="true">
 <goal name="vc_is_even" proved="true">
 <proof prover="3"><result status="valid" time="0.044222" steps="17094"/></proof>
 </goal>
</theory>
<theory name="M_17_filter__qyi17392541228996028033" proved="true">
 <goal name="produces_refl_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.011372" steps="6295"/></proof>
 </goal>
 <goal name="next_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.010954" steps="6295"/></proof>
 </goal>
 <goal name="produces_trans_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.010792" steps="6295"/></proof>
 </goal>
</theory>
</file>
</why3session>
