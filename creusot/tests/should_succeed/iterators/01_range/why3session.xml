<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Alt-Ergo" version="2.4.2" timelimit="5" steplimit="0" memlimit="2000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="01_range.mlcfg"/>
<theory name="C01Range_Impl0_ProducesRefl_Impl" proved="true">
 <goal name="produces_refl&#39;vc" expl="VC for produces_refl" proved="true">
 <proof prover="1"><result status="valid" time="0.008953" steps="13"/></proof>
 </goal>
</theory>
<theory name="C01Range_Impl0_ProducesTrans_Impl" proved="true">
 <goal name="produces_trans&#39;vc" expl="VC for produces_trans" proved="true">
 <proof prover="1"><result status="valid" time="0.028937" steps="291"/></proof>
 </goal>
</theory>
<theory name="C01Range_Impl0_Next" proved="true">
 <goal name="next&#39;vc" expl="VC for next" proved="true">
 <proof prover="1"><result status="valid" time="0.028244" steps="264"/></proof>
 </goal>
</theory>
<theory name="C01Range_Impl1_IntoIter" proved="true">
 <goal name="into_iter&#39;vc" expl="VC for into_iter" proved="true">
 <proof prover="1"><result status="valid" time="0.005019" steps="0"/></proof>
 </goal>
</theory>
<theory name="C01Range_SumRange" proved="true">
 <goal name="sum_range&#39;vc" expl="VC for sum_range" proved="true">
 <proof prover="1" timelimit="1" memlimit="1000"><result status="valid" time="0.130000" steps="1745"/></proof>
 </goal>
</theory>
<theory name="C01Range_Impl0" proved="true">
 <goal name="produces_refl_refn" proved="true">
 <proof prover="1"><result status="valid" time="0.012538" steps="0"/></proof>
 </goal>
 <goal name="produces_trans_refn" proved="true">
 <proof prover="1"><result status="valid" time="0.009376" steps="10"/></proof>
 </goal>
 <goal name="next_refn" proved="true">
 <proof prover="1"><result status="valid" time="0.011842" steps="112"/></proof>
 </goal>
</theory>
<theory name="C01Range_Impl1">
 <goal name="produces_refl_refn">
 <proof prover="1"><undone/></proof>
 </goal>
 <goal name="produces_trans_refn">
 <proof prover="1"><undone/></proof>
 </goal>
 <goal name="next_refn">
 <proof prover="1"><undone/></proof>
 </goal>
</theory>
<theory name="C01Range_Impl1_Next">
 <goal name="next&#39;vc" expl="VC for next">
 <proof prover="1"><undone/></proof>
 </goal>
</theory>
<theory name="C01Range_Impl1_ProducesRefl_Impl">
 <goal name="produces_refl&#39;vc" expl="VC for produces_refl">
 <proof prover="1"><undone/></proof>
 </goal>
</theory>
<theory name="C01Range_Impl2_IntoIter">
 <goal name="into_iter&#39;vc" expl="VC for into_iter">
 <proof prover="1"><undone/></proof>
 </goal>
</theory>
<theory name="C01Range_Impl1_ProducesTrans_Impl">
 <goal name="produces_trans&#39;vc" expl="VC for produces_trans">
 <proof prover="1"><undone/></proof>
 </goal>
</theory>
</file>
</why3session>
