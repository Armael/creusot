<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.11.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.4.3" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="03_std_iterators.mlcfg"/>
<theory name="C03StdIterators_SliceIter" proved="true">
 <goal name="slice_iter&#39;vc" expl="VC for slice_iter" proved="true">
 <proof prover="0"><result status="valid" time="0.158075" steps="1111"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_VecIter" proved="true">
 <goal name="vec_iter&#39;vc" expl="VC for vec_iter" proved="true">
 <proof prover="0"><result status="valid" time="0.050000" steps="1230"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_AllZero" proved="true">
 <goal name="all_zero&#39;vc" expl="VC for all_zero" proved="true">
 <proof prover="0"><result status="valid" time="0.216688" steps="3596"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_SkipTake" proved="true">
 <goal name="skip_take&#39;vc" expl="VC for skip_take" proved="true">
 <proof prover="0"><result status="valid" time="0.020000" steps="235"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_Counter_Closure0" proved="true">
 <goal name="c03StdIterators_Counter_Closure0&#39;vc" expl="VC for c03StdIterators_Counter_Closure0" proved="true">
 <proof prover="0"><result status="valid" time="0.020000" steps="126"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_Counter" proved="true">
 <goal name="counter&#39;vc" expl="VC for counter" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="counter&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="11"/></proof>
  </goal>
  <goal name="counter&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.056748" steps="7757"/></proof>
  </goal>
  <goal name="counter&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.010000" steps="84"/></proof>
  </goal>
  <goal name="counter&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.079511" steps="397916"/></proof>
  </goal>
  <goal name="counter&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.020000" steps="293"/></proof>
  </goal>
  <goal name="counter&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.028332" steps="24"/></proof>
  </goal>
  <goal name="counter&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.025325" steps="26"/></proof>
  </goal>
  <goal name="counter&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.024487" steps="22"/></proof>
  </goal>
  <goal name="counter&#39;vc.8" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.094324" steps="560"/></proof>
  </goal>
  <goal name="counter&#39;vc.9" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.050000" steps="269739"/></proof>
  </goal>
  <goal name="counter&#39;vc.10" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.191115" steps="412369"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C03StdIterators_SumRange" proved="true">
 <goal name="sum_range&#39;vc" expl="VC for sum_range" proved="true">
 <proof prover="0"><result status="valid" time="0.191576" steps="1475"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_EnumerateRange" proved="true">
 <goal name="enumerate_range&#39;vc" expl="VC for enumerate_range" proved="true">
 <proof prover="1"><result status="valid" time="0.522482" steps="1340400"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_MyReverse" proved="true">
 <goal name="my_reverse&#39;vc" expl="VC for my_reverse" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="my_reverse&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.036845" steps="19251"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.059613" steps="26329"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.2" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.042711" steps="26044"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.3" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.043480" steps="26055"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.067909" steps="29859"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.5" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.045045" steps="27701"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.056021" steps="28084"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.041619" steps="27720"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.064227" steps="28393"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.056601" steps="28409"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.067717" steps="28053"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.067079" steps="28056"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.047024" steps="28847"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.062704" steps="28902"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.059406" steps="29042"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.101071" steps="38627"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.16" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.092902" steps="39074"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.128860" steps="39349"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.18" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.116451" steps="36370"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.19" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.091423" steps="38031"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.316131" steps="5628"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.21" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.189539" steps="68918"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.22" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.294881" steps="68939"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.23" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.283316" steps="71324"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.24" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.100607" steps="43758"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.25" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.082838" steps="39858"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.084727" steps="39883"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.117074" steps="44772"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.104629" steps="44436"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.239368" steps="87847"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.779606" steps="409736"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.376492" steps="150582"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
