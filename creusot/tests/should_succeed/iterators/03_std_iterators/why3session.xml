<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.5.3" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="03_std_iterators.coma"/>
<theory name="M_03_std_iterators__slice_iter" proved="true">
 <goal name="vc_slice_iter" proved="true">
 <proof prover="0"><result status="valid" time="0.109660" steps="2216"/></proof>
 </goal>
</theory>
<theory name="M_03_std_iterators__vec_iter" proved="true">
 <goal name="vc_vec_iter" proved="true">
 <proof prover="0"><result status="valid" time="0.250235" steps="4676"/></proof>
 </goal>
</theory>
<theory name="M_03_std_iterators__all_zero" proved="true">
 <goal name="vc_all_zero" proved="true">
 <proof prover="0"><result status="valid" time="0.151884" steps="2601"/></proof>
 </goal>
</theory>
<theory name="M_03_std_iterators__skip_take" proved="true">
 <goal name="vc_skip_take" proved="true">
 <proof prover="0"><result status="valid" time="0.028804" steps="277"/></proof>
 </goal>
</theory>
<theory name="M_03_std_iterators__counter__qy123zclosureqy35z0qy125z" proved="true">
 <goal name="vc_m_03_std_iterators__counter__qy123zclosureqy35z0qy125z" proved="true">
 <proof prover="4"><result status="valid" time="0.084475" steps="10667"/></proof>
 </goal>
</theory>
<theory name="M_03_std_iterators__counter" proved="true">
 <goal name="vc_counter" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_counter.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013694" steps="3"/></proof>
  </goal>
  <goal name="vc_counter.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013632" steps="4"/></proof>
  </goal>
  <goal name="vc_counter.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.027072" steps="97769"/></proof>
  </goal>
  <goal name="vc_counter.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.017393" steps="15"/></proof>
  </goal>
  <goal name="vc_counter.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.028716" steps="292"/></proof>
  </goal>
  <goal name="vc_counter.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.039402" steps="493"/></proof>
  </goal>
  <goal name="vc_counter.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.019799" steps="84"/></proof>
  </goal>
  <goal name="vc_counter.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.015260" steps="14"/></proof>
  </goal>
  <goal name="vc_counter.8" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.071451" steps="313452"/></proof>
  </goal>
  <goal name="vc_counter.9" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.058705" steps="271556"/></proof>
  </goal>
  <goal name="vc_counter.10" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.088457" steps="398353"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_03_std_iterators__sum_range" proved="true">
 <goal name="vc_sum_range" proved="true">
 <proof prover="0"><result status="valid" time="0.202599" steps="2830"/></proof>
 </goal>
</theory>
<theory name="M_03_std_iterators__enumerate_range" proved="true">
 <goal name="vc_enumerate_range" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_enumerate_range.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.018426" steps="7909"/></proof>
  </goal>
  <goal name="vc_enumerate_range.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.034465" steps="11482"/></proof>
  </goal>
  <goal name="vc_enumerate_range.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.039798" steps="13066"/></proof>
  </goal>
  <goal name="vc_enumerate_range.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.014045" steps="7228"/></proof>
  </goal>
  <goal name="vc_enumerate_range.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.014189" steps="7227"/></proof>
  </goal>
  <goal name="vc_enumerate_range.5" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.029458" steps="12198"/></proof>
  </goal>
  <goal name="vc_enumerate_range.6" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.030398" steps="12504"/></proof>
  </goal>
  <goal name="vc_enumerate_range.7" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.021874" steps="10347"/></proof>
  </goal>
  <goal name="vc_enumerate_range.8" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.030215" steps="12244"/></proof>
  </goal>
  <goal name="vc_enumerate_range.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.036495" steps="13468"/></proof>
  </goal>
  <goal name="vc_enumerate_range.10" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.044430" steps="15257"/></proof>
  </goal>
  <goal name="vc_enumerate_range.11" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.412417" steps="127451"/></proof>
  </goal>
  <goal name="vc_enumerate_range.12" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.033681" steps="14019"/></proof>
  </goal>
  <goal name="vc_enumerate_range.13" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.022592" steps="10888"/></proof>
  </goal>
  <goal name="vc_enumerate_range.14" expl="loop invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.032130" steps="13426"/></proof>
  </goal>
  <goal name="vc_enumerate_range.15" proved="true">
  <proof prover="4"><result status="valid" time="0.027799" steps="11275"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_03_std_iterators__my_reverse" proved="true">
 <goal name="vc_my_reverse" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_my_reverse.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013871" steps="8"/></proof>
  </goal>
  <goal name="vc_my_reverse.1" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.011906" steps="10"/></proof>
  </goal>
  <goal name="vc_my_reverse.2" expl="division by zero" proved="true">
  <proof prover="5"><result status="valid" time="0.012192" steps="10112"/></proof>
  </goal>
  <goal name="vc_my_reverse.3" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.015888" steps="29"/></proof>
  </goal>
  <goal name="vc_my_reverse.4" expl="division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.012208" steps="17"/></proof>
  </goal>
  <goal name="vc_my_reverse.5" expl="division by zero" proved="true">
  <proof prover="5"><result status="valid" time="0.012041" steps="10775"/></proof>
  </goal>
  <goal name="vc_my_reverse.6" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.012522" steps="31"/></proof>
  </goal>
  <goal name="vc_my_reverse.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.013160" steps="37"/></proof>
  </goal>
  <goal name="vc_my_reverse.8" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.029755" steps="145504"/></proof>
  </goal>
  <goal name="vc_my_reverse.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.012126" steps="24"/></proof>
  </goal>
  <goal name="vc_my_reverse.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.011798" steps="25"/></proof>
  </goal>
  <goal name="vc_my_reverse.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.011594" steps="25"/></proof>
  </goal>
  <goal name="vc_my_reverse.12" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.013793" steps="44"/></proof>
  </goal>
  <goal name="vc_my_reverse.13" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.015430" steps="104"/></proof>
  </goal>
  <goal name="vc_my_reverse.14" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.016188" steps="108"/></proof>
  </goal>
  <goal name="vc_my_reverse.15" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.016111" steps="112"/></proof>
  </goal>
  <goal name="vc_my_reverse.16" expl="loop invariant" proved="true">
  <proof prover="5"><result status="valid" time="0.034202" steps="189514"/></proof>
  </goal>
  <goal name="vc_my_reverse.17" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.015516" steps="60"/></proof>
  </goal>
  <goal name="vc_my_reverse.18" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.012372" steps="41"/></proof>
  </goal>
  <goal name="vc_my_reverse.19" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.015339" steps="58"/></proof>
  </goal>
  <goal name="vc_my_reverse.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.015176" steps="66"/></proof>
  </goal>
  <goal name="vc_my_reverse.21" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.218108" steps="4478"/></proof>
  </goal>
  <goal name="vc_my_reverse.22" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.268915" steps="5413"/></proof>
  </goal>
  <goal name="vc_my_reverse.23" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.050368" steps="260645"/></proof>
  </goal>
  <goal name="vc_my_reverse.24" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.049282" steps="260966"/></proof>
  </goal>
  <goal name="vc_my_reverse.25" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_my_reverse.25.0" expl="precondition" proved="true">
   <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="1.284706" steps="24506"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_my_reverse.26" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.019784" steps="111"/></proof>
  </goal>
  <goal name="vc_my_reverse.27" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.052237" steps="267046"/></proof>
  </goal>
  <goal name="vc_my_reverse.28" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.667919" steps="1945451"/></proof>
  </goal>
  <goal name="vc_my_reverse.29" expl="loop invariant" proved="true">
  <proof prover="5"><result status="valid" time="0.014786" steps="15355"/></proof>
  </goal>
  <goal name="vc_my_reverse.30" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_my_reverse.30.0" expl="loop invariant" proved="true">
   <proof prover="4" timelimit="5" memlimit="2000"><result status="valid" time="1.066746" steps="162157"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_my_reverse.31" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_my_reverse.31.0" expl="loop invariant" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="vc_my_reverse.31.0.0" expl="loop invariant" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="vc_my_reverse.31.0.0.0" expl="loop invariant" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_my_reverse.31.0.0.0.0" expl="loop invariant" proved="true">
      <proof prover="4" timelimit="5" memlimit="2000"><result status="valid" time="2.617545" steps="398306"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_my_reverse.32" expl="loop invariant" proved="true">
  <proof prover="5"><result status="valid" time="0.726687" steps="2502394"/></proof>
  </goal>
  <goal name="vc_my_reverse.33" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.030694" steps="133"/></proof>
  </goal>
  <goal name="vc_my_reverse.34" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.064117" steps="837"/></proof>
  </goal>
  <goal name="vc_my_reverse.35" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.020391" steps="127"/></proof>
  </goal>
  <goal name="vc_my_reverse.36" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.021879" steps="127"/></proof>
  </goal>
  <goal name="vc_my_reverse.37" proved="true">
  <proof prover="0"><result status="valid" time="0.020781" steps="71"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
