<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Z3" version="4.12.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.4.3" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="03_std_iterators.mlcfg"/>
<theory name="C03StdIterators_SliceIter" proved="true">
 <goal name="slice_iter&#39;vc" expl="VC for slice_iter" proved="true">
 <proof prover="5"><result status="valid" time="0.158075" steps="1313"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_VecIter" proved="true">
 <goal name="vec_iter&#39;vc" expl="VC for vec_iter" proved="true">
 <proof prover="5"><result status="valid" time="0.068472" steps="1232"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_AllZero" proved="true">
 <goal name="all_zero&#39;vc" expl="VC for all_zero" proved="true">
 <proof prover="5"><result status="valid" time="0.215967" steps="1991"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_SkipTake" proved="true">
 <goal name="skip_take&#39;vc" expl="VC for skip_take" proved="true">
 <proof prover="5"><result status="valid" time="0.020000" steps="240"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_Counter_Closure0" proved="true">
 <goal name="c03StdIterators_Counter_Closure0&#39;vc" expl="VC for c03StdIterators_Counter_Closure0" proved="true">
 <proof prover="5"><result status="valid" time="0.020000" steps="126"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_Counter" proved="true">
 <goal name="counter&#39;vc" expl="VC for counter" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="counter&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="12"/></proof>
  </goal>
  <goal name="counter&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.028332" steps="12"/></proof>
  </goal>
  <goal name="counter&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="89"/></proof>
  </goal>
  <goal name="counter&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.059895" steps="183671"/></proof>
  </goal>
  <goal name="counter&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.020000" steps="304"/></proof>
  </goal>
  <goal name="counter&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.056748" steps="112192"/></proof>
  </goal>
  <goal name="counter&#39;vc.6" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.024487" steps="26"/></proof>
  </goal>
  <goal name="counter&#39;vc.7" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.025325" steps="22"/></proof>
  </goal>
  <goal name="counter&#39;vc.8" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.234495" steps="617"/></proof>
  </goal>
  <goal name="counter&#39;vc.9" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.050000" steps="284065"/></proof>
  </goal>
  <goal name="counter&#39;vc.10" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.118193" steps="406973"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="C03StdIterators_SumRange" proved="true">
 <goal name="sum_range&#39;vc" expl="VC for sum_range" proved="true">
 <proof prover="5"><result status="valid" time="0.093615" steps="1654"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_EnumerateRange" proved="true">
 <goal name="enumerate_range&#39;vc" expl="VC for enumerate_range" proved="true">
 <proof prover="5"><result status="valid" time="0.236249" steps="2260"/></proof>
 </goal>
</theory>
<theory name="C03StdIterators_MyReverse" proved="true">
 <goal name="my_reverse&#39;vc" expl="VC for my_reverse" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="my_reverse&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.067079" steps="19437"/></proof>
  <proof prover="4"><result status="valid" time="0.032996" steps="12366"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.1" expl="type invariant" proved="true">
  <proof prover="5"><result status="valid" time="0.016334" steps="13"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.2" expl="division by zero" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.059613" steps="26526"/></proof>
  <proof prover="4"><result status="valid" time="0.046112" steps="16640"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.3" expl="division by zero" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.042711" steps="26233"/></proof>
  <proof prover="4"><result status="valid" time="0.038032" steps="16334"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.4" expl="division by zero" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.043480" steps="26244"/></proof>
  <proof prover="4"><result status="valid" time="0.038767" steps="16341"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.5" expl="integer overflow" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.067909" steps="30060"/></proof>
  <proof prover="4"><result status="valid" time="0.065420" steps="19167"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.6" expl="division by zero" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.045045" steps="27890"/></proof>
  <proof prover="4"><result status="valid" time="0.041819" steps="17576"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.7" expl="integer overflow" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.056021" steps="28281"/></proof>
  <proof prover="4"><result status="valid" time="0.053374" steps="18274"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.041619" steps="27909"/></proof>
  <proof prover="4"><result status="valid" time="0.042483" steps="17589"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.082838" steps="28590"/></proof>
  <proof prover="4"><result status="valid" time="0.054959" steps="18840"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.064227" steps="28606"/></proof>
  <proof prover="4"><result status="valid" time="0.054220" steps="18852"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.067717" steps="28242"/></proof>
  <proof prover="4"><result status="valid" time="0.043056" steps="17735"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.12" expl="precondition" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.116451" steps="28245"/></proof>
  <proof prover="4"><result status="valid" time="0.042858" steps="17738"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.047024" steps="29036"/></proof>
  <proof prover="4"><result status="valid" time="0.043813" steps="18217"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.062704" steps="29099"/></proof>
  <proof prover="4"><result status="valid" time="0.057108" steps="19591"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.059406" steps="29239"/></proof>
  <proof prover="4"><result status="valid" time="0.056545" steps="19465"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.16" expl="loop invariant init" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.101071" steps="38856"/></proof>
  <proof prover="4"><result status="valid" time="0.090413" steps="25566"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.210750" steps="39303"/></proof>
  <proof prover="4"><result status="valid" time="0.091313" steps="25921"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.18" expl="loop invariant init" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.128860" steps="39578"/></proof>
  <proof prover="4"><result status="valid" time="0.092100" steps="26365"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.19" expl="precondition" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.232471" steps="36567"/></proof>
  <proof prover="4"><result status="valid" time="0.069428" steps="23708"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.20" expl="type invariant" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.237774" steps="38228"/></proof>
  <proof prover="4"><result status="valid" time="0.072833" steps="24974"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="5" timelimit="5" memlimit="2000"><result status="valid" time="0.542887" steps="10396"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.22" expl="integer overflow" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.610429" steps="70898"/></proof>
  <proof prover="4"><result status="valid" time="0.490083" steps="86713"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.23" expl="integer overflow" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.514444" steps="70879"/></proof>
  <proof prover="4"><result status="valid" time="0.524451" steps="87491"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.24" expl="precondition" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.594327" steps="73015"/></proof>
  <proof prover="4"><result status="valid" time="0.517831" steps="88381"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.25" expl="precondition" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.296823" steps="43971"/></proof>
  <proof prover="4"><result status="valid" time="0.116734" steps="32243"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.26" expl="precondition" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.255419" steps="40055"/></proof>
  <proof prover="4"><result status="valid" time="0.099744" steps="28028"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.246796" steps="40080"/></proof>
  <proof prover="4"><result status="valid" time="0.087059" steps="28001"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.342139" steps="49704"/></proof>
  <proof prover="4"><result status="valid" time="0.134125" steps="34702"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.356173" steps="44657"/></proof>
  <proof prover="4"><result status="valid" time="0.127309" steps="32911"/></proof>
  </goal>
  <goal name="my_reverse&#39;vc.30" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="my_reverse&#39;vc.30.0" expl="loop invariant preservation" proved="true">
   <proof prover="4" timelimit="5" memlimit="2000"><result status="valid" time="2.033555" steps="253458"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="my_reverse&#39;vc.31" expl="loop invariant preservation" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="my_reverse&#39;vc.31.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="my_reverse&#39;vc.31.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="4" timelimit="5" memlimit="2000"><result status="valid" time="4.500438" steps="633820"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="my_reverse&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="timeout" time="1.000000" steps="3339559"/></proof>
  <proof prover="2" obsolete="true"><result status="valid" time="0.968666" steps="150354"/></proof>
  <proof prover="4"><result status="timeout" time="1.000000" steps="131632"/></proof>
  <proof prover="5"><result status="timeout" time="1.000000" steps="13691"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="my_reverse&#39;vc.32.0" expl="loop invariant preservation" proved="true">
   <proof prover="4" timelimit="5" memlimit="2000"><result status="valid" time="3.680836" steps="344170"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
