<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.15" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="sparse_array.mlcfg"/>
<theory name="SparseArray_Create" proved="true">
 <goal name="create&#39;vc" expl="VC for create" proved="true">
 <proof prover="1"><result status="valid" time="0.13" steps="55508"/></proof>
 </goal>
</theory>
<theory name="SparseArray_Impl1_Get" proved="true">
 <goal name="get&#39;vc" expl="VC for get" proved="true">
 <proof prover="1"><result status="valid" time="0.12" steps="55179"/></proof>
 </goal>
</theory>
<theory name="SparseArray_Impl1_LemmaPermutation_Impl" proved="true">
 <goal name="lemma_permutation&#39;vc" expl="VC for lemma_permutation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="lemma_permutation&#39;vc.0" expl="postcondition" proved="true">
  <transf name="use_th" proved="true" arg1="map.MapInjection">
   <goal name="lemma_permutation&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="pose" proved="true" arg1="f" arg2="(fun k -&gt; to_int7 (get1 (model3 (sparsearray_sparse_Sparse_back self)) k))">
    <goal name="lemma_permutation&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="assert" proved="true" arg1="(surjective f (sparsearray_sparse_Sparse_n self))">
     <goal name="lemma_permutation&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="1"><result status="valid" time="0.12" steps="48325"/></proof>
     </goal>
     <goal name="lemma_permutation&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <transf name="assert" proved="true" arg1="(exists k. 0 &lt;=&#39; k &lt;&#39; sparsearray_sparse_Sparse_n self /\ (f k) = i)">
      <goal name="lemma_permutation&#39;vc.0.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="unfold" proved="true" arg1="surjective" arg2="in" arg3="h1">
       <goal name="lemma_permutation&#39;vc.0.0.0.1.0.0" expl="asserted formula" proved="true">
       <transf name="instantiate" proved="true" arg1="h1" arg2="i">
        <goal name="lemma_permutation&#39;vc.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
        <transf name="destruct_rec" proved="true" arg1="Hinst">
         <goal name="lemma_permutation&#39;vc.0.0.0.1.0.0.0.0" expl="destruct premise" proved="true">
         <proof prover="1"><result status="valid" time="0.10" steps="34821"/></proof>
         </goal>
         <goal name="lemma_permutation&#39;vc.0.0.0.1.0.0.0.1" expl="asserted formula" proved="true">
         <proof prover="1"><result status="valid" time="0.11" steps="41283"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="lemma_permutation&#39;vc.0.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="1"><result status="valid" time="0.15" steps="39364"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SparseArray_Impl1_Set" proved="true">
 <goal name="set&#39;vc" expl="VC for set" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="79"/></proof>
  </goal>
  <goal name="set&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="188"/></proof>
  </goal>
  <goal name="set&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="269"/></proof>
  </goal>
  <goal name="set&#39;vc.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="set&#39;vc.3.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.07" steps="408"/></proof>
   </goal>
   <goal name="set&#39;vc.3.1" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.09" steps="506"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="set&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="set&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.07" steps="343"/></proof>
   </goal>
   <goal name="set&#39;vc.4.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.14" steps="420"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="set&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="set&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.08" steps="436"/></proof>
   </goal>
   <goal name="set&#39;vc.5.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.10" steps="520"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="set&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="399"/></proof>
  </goal>
  <goal name="set&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="set&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="set&#39;vc.7.0.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.03" steps="74"/></proof>
    </goal>
    <goal name="set&#39;vc.7.0.1" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.50" steps="3748"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="set&#39;vc.7.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="set&#39;vc.7.1.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.97" steps="99735"/></proof>
    </goal>
    <goal name="set&#39;vc.7.1.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.82" steps="81719"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="set&#39;vc.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="set&#39;vc.8.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.09" steps="259821"/></proof>
   </goal>
   <goal name="set&#39;vc.8.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="set&#39;vc.8.1.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.11" steps="615"/></proof>
    </goal>
    <goal name="set&#39;vc.8.1.1" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.14" steps="713"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="set&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="set&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="set&#39;vc.9.0.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.03" steps="74"/></proof>
    </goal>
    <goal name="set&#39;vc.9.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.34" steps="56241"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="set&#39;vc.9.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="set&#39;vc.9.1.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.89" steps="102612"/></proof>
    </goal>
    <goal name="set&#39;vc.9.1.1" expl="postcondition" proved="true">
    <proof prover="3" timelimit="10" memlimit="4000"><result status="valid" time="5.02" steps="47175"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="set&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="set&#39;vc.10.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.09" steps="276626"/></proof>
   </goal>
   <goal name="set&#39;vc.10.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="set&#39;vc.10.1.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.23" steps="1293"/></proof>
    </goal>
    <goal name="set&#39;vc.10.1.1" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.49" steps="2991"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SparseArray_F" proved="true">
 <goal name="f&#39;vc" expl="VC for f" proved="true">
 <proof prover="3"><result status="valid" time="0.25" steps="3520"/></proof>
 </goal>
</theory>
</file>
</why3session>
