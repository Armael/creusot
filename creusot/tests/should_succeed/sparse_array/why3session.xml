<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.5.3" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="sparse_array.coma"/>
<theory name="M_sparse_array__qyi912363311032332466__get" proved="true">
 <goal name="vc_get" proved="true">
 <proof prover="3"><result status="valid" time="0.102255" steps="27635"/></proof>
 </goal>
</theory>
<theory name="M_sparse_array__qyi912363311032332466__lemma_permutation__Impl" proved="true">
 <goal name="vc_lemma_permutation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_lemma_permutation.0" proved="true">
  <transf name="use_th" proved="true" arg1="map.MapInjection">
   <goal name="vc_lemma_permutation.0.0" proved="true">
   <transf name="pose" proved="true" arg1="f" arg2="(fun k -&gt; to_int (get1 (shallow_model&#39;0 (t_Sparse__back self)) k))">
    <goal name="vc_lemma_permutation.0.0.0" proved="true">
    <transf name="assert" proved="true" arg1="(surjective f (t_Sparse__n self))">
     <goal name="vc_lemma_permutation.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.032912" steps="114081"/></proof>
     </goal>
     <goal name="vc_lemma_permutation.0.0.0.1" proved="true">
     <transf name="assert" proved="true" arg1="(exists k. 0 &lt;= k &lt; t_Sparse__n self /\ (f k) = i)">
      <goal name="vc_lemma_permutation.0.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="unfold" proved="true" arg1="surjective" arg2="in" arg3="h1">
       <goal name="vc_lemma_permutation.0.0.0.1.0.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="0.033303" steps="325"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="vc_lemma_permutation.0.0.0.1.1" proved="true">
      <proof prover="0"><result status="valid" time="0.027887" steps="95646"/></proof>
      <proof prover="1"><result status="valid" time="0.019978" steps="107"/></proof>
      <proof prover="3"><result status="valid" time="0.049199" steps="11914"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_sparse_array__qyi912363311032332466__set" proved="true">
 <goal name="vc_set" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_set.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.060684" steps="13325"/></proof>
  </goal>
  <goal name="vc_set.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.152725" steps="14936"/></proof>
  </goal>
  <goal name="vc_set.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010083" steps="138"/></proof>
  <proof prover="3"><result status="valid" time="0.164963" steps="20187"/></proof>
  </goal>
  <goal name="vc_set.3" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.098301" steps="18148"/></proof>
  </goal>
  <goal name="vc_set.4" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.030498" steps="109619"/></proof>
  <proof prover="3"><result status="valid" time="0.126567" steps="18245"/></proof>
  </goal>
  <goal name="vc_set.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.023081" steps="47"/></proof>
  <proof prover="3"><result status="valid" time="0.140696" steps="16648"/></proof>
  </goal>
  <goal name="vc_set.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.013755" steps="47"/></proof>
  <proof prover="3"><result status="valid" time="0.142968" steps="16653"/></proof>
  </goal>
  <goal name="vc_set.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.017632" steps="176"/></proof>
  <proof prover="3"><result status="valid" time="0.109818" steps="24127"/></proof>
  </goal>
  <goal name="vc_set.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.032747" steps="64"/></proof>
  </goal>
  <goal name="vc_set.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.018581" steps="65"/></proof>
  <proof prover="3"><result status="valid" time="0.109230" steps="18718"/></proof>
  </goal>
  <goal name="vc_set.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.018377" steps="243"/></proof>
  <proof prover="3"><result status="valid" time="0.108040" steps="22358"/></proof>
  </goal>
  <goal name="vc_set.11" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.170689" steps="751541"/></proof>
  </goal>
  <goal name="vc_set.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.125274" steps="467106"/></proof>
  <proof prover="3"><result status="valid" time="0.132550" steps="28637"/></proof>
  </goal>
  <goal name="vc_set.13" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.177301" steps="39880"/></proof>
  </goal>
  <goal name="vc_set.14" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.115605" steps="25826"/></proof>
  </goal>
  <goal name="vc_set.15" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.176838" steps="44963"/></proof>
  </goal>
  <goal name="vc_set.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.023393" steps="104"/></proof>
  <proof prover="3"><result status="valid" time="0.047658" steps="19470"/></proof>
  </goal>
  <goal name="vc_set.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.039638" steps="138221"/></proof>
  <proof prover="3"><result status="valid" time="0.047299" steps="19479"/></proof>
  </goal>
  <goal name="vc_set.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.065019" steps="306"/></proof>
  <proof prover="3"><result status="valid" time="0.098317" steps="29948"/></proof>
  </goal>
  <goal name="vc_set.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.029177" steps="152053"/></proof>
  </goal>
  <goal name="vc_set.20" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.051957" steps="21525"/></proof>
  </goal>
  <goal name="vc_set.21" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.080941" steps="27357"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="vc_set.21.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.032408" steps="175519"/></proof>
   </goal>
   <goal name="vc_set.21.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.074283" steps="25118"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_set.22" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.126779" steps="274"/></proof>
  <proof prover="3"><result status="valid" time="0.075748" steps="26694"/></proof>
  </goal>
  <goal name="vc_set.23" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.167281" steps="45586"/></proof>
  </goal>
  <goal name="vc_set.24" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.094478" steps="39145"/></proof>
  </goal>
  <goal name="vc_set.25" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.394829" steps="81479"/></proof>
  </goal>
  <goal name="vc_set.26" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.189789" steps="35817"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_sparse_array__create" proved="true">
 <goal name="vc_create" proved="true">
 <proof prover="1"><result status="valid" time="0.030648" steps="416"/></proof>
 </goal>
</theory>
<theory name="M_sparse_array__f" proved="true">
 <goal name="vc_f" proved="true">
 <proof prover="0"><result status="valid" time="0.075944" steps="360976"/></proof>
 </goal>
</theory>
</file>
</why3session>
