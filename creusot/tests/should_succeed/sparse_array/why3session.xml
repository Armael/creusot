<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.5.3" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="sparse_array.coma"/>
<theory name="SparseArray_Impl2_Get" proved="true">
 <goal name="vc_get" proved="true">
 <proof prover="3"><result status="valid" time="0.106954" steps="27210"/></proof>
 </goal>
</theory>
<theory name="SparseArray_Impl2_LemmaPermutation_Impl" proved="true">
 <goal name="vc_lemma_permutation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_lemma_permutation.0" proved="true">
  <transf name="use_th" proved="true" arg1="map.MapInjection">
   <goal name="vc_lemma_permutation.0.0" proved="true">
   <transf name="pose" proved="true" arg1="f" arg2="(fun k -&gt; to_int (get1 (shallow_model&#39;0 (sparse_back self)) k))">
    <goal name="vc_lemma_permutation.0.0.0" proved="true">
    <transf name="assert" proved="true" arg1="(surjective f (sparse_n self))">
     <goal name="vc_lemma_permutation.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.186136" steps="217482"/></proof>
     </goal>
     <goal name="vc_lemma_permutation.0.0.0.1" proved="true">
     <transf name="assert" proved="true" arg1="(exists k. 0 &lt;= k &lt; sparse_n self /\ (f k) = i)">
      <goal name="vc_lemma_permutation.0.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="unfold" proved="true" arg1="surjective" arg2="in" arg3="h1">
       <goal name="vc_lemma_permutation.0.0.0.1.0.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="0.033303" steps="445"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="vc_lemma_permutation.0.0.0.1.1" proved="true">
      <proof prover="0"><result status="valid" time="0.208754" steps="253451"/></proof>
      <proof prover="1"><result status="valid" time="0.019978" steps="164"/></proof>
      <proof prover="3"><result status="valid" time="0.196651" steps="12335"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SparseArray_Impl2_Set" proved="true">
 <goal name="vc_set" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_set.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.060684" steps="12500"/></proof>
  </goal>
  <goal name="vc_set.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.152725" steps="12510"/></proof>
  </goal>
  <goal name="vc_set.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010083" steps="114"/></proof>
  <proof prover="3"><result status="valid" time="0.164963" steps="16860"/></proof>
  </goal>
  <goal name="vc_set.3" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.098301" steps="15791"/></proof>
  </goal>
  <goal name="vc_set.4" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.030498" steps="105916"/></proof>
  <proof prover="3"><result status="valid" time="0.126567" steps="15812"/></proof>
  </goal>
  <goal name="vc_set.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.023081" steps="70"/></proof>
  <proof prover="3"><result status="valid" time="0.140696" steps="16024"/></proof>
  </goal>
  <goal name="vc_set.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.013755" steps="71"/></proof>
  <proof prover="3"><result status="valid" time="0.142968" steps="16029"/></proof>
  </goal>
  <goal name="vc_set.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.017632" steps="251"/></proof>
  <proof prover="3"><result status="valid" time="0.109818" steps="20562"/></proof>
  </goal>
  <goal name="vc_set.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.032747" steps="96"/></proof>
  </goal>
  <goal name="vc_set.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.018581" steps="97"/></proof>
  <proof prover="3"><result status="valid" time="0.109230" steps="18020"/></proof>
  </goal>
  <goal name="vc_set.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.018377" steps="329"/></proof>
  <proof prover="3"><result status="valid" time="0.108040" steps="21368"/></proof>
  </goal>
  <goal name="vc_set.11" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.149994" steps="582968"/></proof>
  </goal>
  <goal name="vc_set.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.121854" steps="492129"/></proof>
  <proof prover="3"><result status="valid" time="0.101657" steps="24087"/></proof>
  </goal>
  <goal name="vc_set.13" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.321455" steps="37301"/></proof>
  </goal>
  <goal name="vc_set.14" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.083586" steps="21814"/></proof>
  </goal>
  <goal name="vc_set.15" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.389987" steps="43985"/></proof>
  </goal>
  <goal name="vc_set.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.023393" steps="117"/></proof>
  <proof prover="3"><result status="valid" time="0.061060" steps="18842"/></proof>
  </goal>
  <goal name="vc_set.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.039638" steps="134436"/></proof>
  <proof prover="3"><result status="valid" time="0.057812" steps="18851"/></proof>
  </goal>
  <goal name="vc_set.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.145976" steps="1933"/></proof>
  <proof prover="3"><result status="valid" time="0.096716" steps="24080"/></proof>
  </goal>
  <goal name="vc_set.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.029177" steps="148335"/></proof>
  </goal>
  <goal name="vc_set.20" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.064018" steps="20805"/></proof>
  </goal>
  <goal name="vc_set.21" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.094548" steps="25092"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="vc_set.21.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.032408" steps="171309"/></proof>
   </goal>
   <goal name="vc_set.21.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.092568" steps="23618"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_set.22" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.126779" steps="397"/></proof>
  <proof prover="3"><result status="valid" time="0.102775" steps="25724"/></proof>
  </goal>
  <goal name="vc_set.23" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.264037" steps="51686"/></proof>
  </goal>
  <goal name="vc_set.24" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.176076" steps="38035"/></proof>
  </goal>
  <goal name="vc_set.25" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.313071" steps="69385"/></proof>
  </goal>
  <goal name="vc_set.26" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.111059" steps="27505"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SparseArray_Create" proved="true">
 <goal name="vc_create" proved="true">
 <proof prover="1"><result status="valid" time="0.030648" steps="447"/></proof>
 </goal>
</theory>
<theory name="SparseArray_F" proved="true">
 <goal name="vc_f" proved="true">
 <proof prover="0"><result status="valid" time="0.114470" steps="438849"/></proof>
 </goal>
</theory>
</file>
</why3session>
