<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.12.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.4.3" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="sparse_array.mlcfg"/>
<theory name="SparseArray_Impl2_Get" proved="true">
 <goal name="get&#39;vc" expl="VC for get" proved="true">
 <proof prover="3"><result status="valid" time="0.119879" steps="24040"/></proof>
 </goal>
</theory>
<theory name="SparseArray_Impl2_LemmaPermutation_Impl" proved="true">
 <goal name="lemma_permutation&#39;vc" expl="VC for lemma_permutation" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="lemma_permutation&#39;vc.0" expl="postcondition" proved="true">
  <transf name="use_th" proved="true" arg1="map.MapInjection">
   <goal name="lemma_permutation&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="pose" proved="true" arg1="f" arg2="(fun k -&gt; to_int (get1 (shallow_model1 (sparse_back self)) k))">
    <goal name="lemma_permutation&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="assert" proved="true" arg1="(surjective f (sparse_n self))">
     <goal name="lemma_permutation&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.054183" steps="211712"/></proof>
     </goal>
     <goal name="lemma_permutation&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <transf name="assert" proved="true" arg1="(exists k. 0 &lt;= k &lt; sparse_n self /\ (f k) = i)">
      <goal name="lemma_permutation&#39;vc.0.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="unfold" proved="true" arg1="surjective" arg2="in" arg3="h1">
       <goal name="lemma_permutation&#39;vc.0.0.0.1.0.0" expl="asserted formula" proved="true">
       <proof prover="4"><result status="valid" time="0.142095" steps="2205"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="lemma_permutation&#39;vc.0.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="0"><result status="valid" time="0.066092" steps="260698"/></proof>
      <proof prover="3"><result status="valid" time="0.107415" steps="13192"/></proof>
      <proof prover="4"><result status="valid" time="0.030666" steps="312"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SparseArray_Impl2_Set" proved="true">
 <goal name="set&#39;vc" expl="VC for set" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="set&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.189957" steps="17363"/></proof>
  </goal>
  <goal name="set&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.164054" steps="15155"/></proof>
  </goal>
  <goal name="set&#39;vc.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.036540" steps="15160"/></proof>
  </goal>
  <goal name="set&#39;vc.3" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.098301" steps="14392"/></proof>
  </goal>
  <goal name="set&#39;vc.4" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.030498" steps="117224"/></proof>
  <proof prover="3"><result status="valid" time="0.126567" steps="15796"/></proof>
  </goal>
  <goal name="set&#39;vc.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.140696" steps="21323"/></proof>
  <proof prover="4"><result status="valid" time="0.034954" steps="297"/></proof>
  </goal>
  <goal name="set&#39;vc.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.142968" steps="18582"/></proof>
  <proof prover="4"><result status="valid" time="0.015282" steps="47"/></proof>
  </goal>
  <goal name="set&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.050465" steps="18583"/></proof>
  <proof prover="4"><result status="valid" time="0.015922" steps="49"/></proof>
  </goal>
  <goal name="set&#39;vc.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.038147" steps="376"/></proof>
  </goal>
  <goal name="set&#39;vc.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.109230" steps="19141"/></proof>
  <proof prover="4"><result status="valid" time="0.016175" steps="59"/></proof>
  </goal>
  <goal name="set&#39;vc.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.108040" steps="19147"/></proof>
  <proof prover="4"><result status="valid" time="0.016050" steps="59"/></proof>
  </goal>
  <goal name="set&#39;vc.11" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.151516" steps="594888"/></proof>
  </goal>
  <goal name="set&#39;vc.12" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.234501" steps="27700"/></proof>
  </goal>
  <goal name="set&#39;vc.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.041721" steps="182025"/></proof>
  <proof prover="3"><result status="valid" time="0.186530" steps="22918"/></proof>
  </goal>
  <goal name="set&#39;vc.14" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.048217" steps="19868"/></proof>
  <proof prover="4"><result status="valid" time="0.026925" steps="59"/></proof>
  </goal>
  <goal name="set&#39;vc.15" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.109818" steps="19873"/></proof>
  <proof prover="4"><result status="valid" time="0.021630" steps="60"/></proof>
  </goal>
  <goal name="set&#39;vc.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.041598" steps="187919"/></proof>
  <proof prover="3"><result status="valid" time="0.198549" steps="24397"/></proof>
  </goal>
  <goal name="set&#39;vc.17" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.093846" steps="20384"/></proof>
  <proof prover="4"><result status="valid" time="0.028049" steps="118"/></proof>
  </goal>
  <goal name="set&#39;vc.18" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.039638" steps="179734"/></proof>
  <proof prover="3"><result status="valid" time="0.160266" steps="20399"/></proof>
  </goal>
  <goal name="set&#39;vc.19" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.235180" steps="29505"/></proof>
  <proof prover="4"><result status="valid" time="0.042526" steps="293"/></proof>
  </goal>
  <goal name="set&#39;vc.20" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.333334" steps="1012291"/></proof>
  </goal>
  <goal name="set&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.229476" steps="29029"/></proof>
  </goal>
  <goal name="set&#39;vc.22" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="set&#39;vc.22.0" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.314235" steps="37564"/></proof>
   </goal>
   <goal name="set&#39;vc.22.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.771265" steps="2733141"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="set&#39;vc.23" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="set&#39;vc.23.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.048344" steps="160643"/></proof>
   <proof prover="3"><result status="valid" time="0.206222" steps="24469"/></proof>
   </goal>
   <goal name="set&#39;vc.23.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.146411" steps="583334"/></proof>
   <proof prover="3"><result status="valid" time="0.309759" steps="36381"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="SparseArray_Create" proved="true">
 <goal name="create&#39;vc" expl="VC for create" proved="true">
 <proof prover="3"><result status="valid" time="0.434418" steps="69395"/></proof>
 <proof prover="4"><result status="valid" time="0.040253" steps="488"/></proof>
 </goal>
</theory>
<theory name="SparseArray_F" proved="true">
 <goal name="f&#39;vc" expl="VC for f" proved="true">
 <proof prover="0"><result status="valid" time="0.115563" steps="426111"/></proof>
 </goal>
</theory>
</file>
</why3session>
