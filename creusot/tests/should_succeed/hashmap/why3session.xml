<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.8.14" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="hashmap.mlcfg"/>
<theory name="Hashmap_Impl2_HashLog_Impl" proved="true">
 <goal name="hash_log&#39;vc" expl="VC for hash_log" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="4"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl2_Hash" proved="true">
 <goal name="hash&#39;vc" expl="VC for hash" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="34"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl2_HashLogEqModel_Impl" proved="true">
 <goal name="hash_log_eq_model&#39;vc" expl="VC for hash_log_eq_model" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="2"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_New" proved="true">
 <goal name="new&#39;vc" expl="VC for new" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="353"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Add" proved="true">
 <goal name="add&#39;vc" expl="VC for add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="28"/></proof>
  </goal>
  <goal name="add&#39;vc.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="54"/></proof>
  </goal>
  <goal name="add&#39;vc.2" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="34"/></proof>
  </goal>
  <goal name="add&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="265"/></proof>
  </goal>
  <goal name="add&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="364"/></proof>
  </goal>
  <goal name="add&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="77"/></proof>
  </goal>
  <goal name="add&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.16" steps="579463"/></proof>
  </goal>
  <goal name="add&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="80"/></proof>
  </goal>
  <goal name="add&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="80"/></proof>
  </goal>
  <goal name="add&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="81"/></proof>
  </goal>
  <goal name="add&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="542"/></proof>
  </goal>
  <goal name="add&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="81"/></proof>
  </goal>
  <goal name="add&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="148"/></proof>
  </goal>
  <goal name="add&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.16" steps="36048"/></proof>
  </goal>
  <goal name="add&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.41" steps="14839"/></proof>
  </goal>
  <goal name="add&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.23" steps="9460"/></proof>
  </goal>
  <goal name="add&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.38" steps="17671"/></proof>
  </goal>
  <goal name="add&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="453"/></proof>
  </goal>
  <goal name="add&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.16" steps="35873"/></proof>
  </goal>
  <goal name="add&#39;vc.19" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.32" steps="52618"/></proof>
  </goal>
  <goal name="add&#39;vc.20" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="317"/></proof>
  </goal>
  <goal name="add&#39;vc.21" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="253"/></proof>
  </goal>
  <goal name="add&#39;vc.22" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="185"/></proof>
  </goal>
  <goal name="add&#39;vc.23" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.20" steps="45530"/></proof>
  </goal>
  <goal name="add&#39;vc.24" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.24.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.05" steps="283463"/></proof>
   </goal>
   <goal name="add&#39;vc.24.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.04" steps="149907"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.25" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.25.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.28" steps="59598"/></proof>
   </goal>
   <goal name="add&#39;vc.25.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.23" steps="42620"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Get" proved="true">
 <goal name="get&#39;vc" expl="VC for get" proved="true">
 <proof prover="0"><result status="valid" time="0.20" steps="51199"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Resize" proved="true">
 <goal name="resize&#39;vc" expl="VC for resize" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="resize&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="36"/></proof>
  </goal>
  <goal name="resize&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="44"/></proof>
  </goal>
  <goal name="resize&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="129"/></proof>
  </goal>
  <goal name="resize&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="67"/></proof>
  </goal>
  <goal name="resize&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="55"/></proof>
  </goal>
  <goal name="resize&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="32"/></proof>
  </goal>
  <goal name="resize&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="32"/></proof>
  </goal>
  <goal name="resize&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="36"/></proof>
  </goal>
  <goal name="resize&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="62"/></proof>
  </goal>
  <goal name="resize&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="110"/></proof>
  </goal>
  <goal name="resize&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="1379"/></proof>
  </goal>
  <goal name="resize&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="81"/></proof>
  </goal>
  <goal name="resize&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="122"/></proof>
  </goal>
  <goal name="resize&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="159"/></proof>
  </goal>
  <goal name="resize&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="160"/></proof>
  </goal>
  <goal name="resize&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="406"/></proof>
  </goal>
  <goal name="resize&#39;vc.16" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="272"/></proof>
  </goal>
  <goal name="resize&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="298"/></proof>
  </goal>
  <goal name="resize&#39;vc.18" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="153"/></proof>
  </goal>
  <goal name="resize&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="158"/></proof>
  </goal>
  <goal name="resize&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="28377"/></proof>
  </goal>
  <goal name="resize&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="964"/></proof>
  </goal>
  <goal name="resize&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="29407"/></proof>
  </goal>
  <goal name="resize&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="223"/></proof>
  </goal>
  <goal name="resize&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="1588"/></proof>
  </goal>
  <goal name="resize&#39;vc.25" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="185"/></proof>
  </goal>
  <goal name="resize&#39;vc.26" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.12" steps="151491"/></proof>
  </goal>
  <goal name="resize&#39;vc.27" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="174"/></proof>
  </goal>
  <goal name="resize&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="200"/></proof>
  </goal>
  <goal name="resize&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="181"/></proof>
  </goal>
  <goal name="resize&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="313"/></proof>
  </goal>
  <goal name="resize&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="132"/></proof>
  </goal>
  <goal name="resize&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="132"/></proof>
  </goal>
  <goal name="resize&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="134"/></proof>
  </goal>
  <goal name="resize&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="136"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hashmap_Main" proved="true">
 <goal name="main&#39;vc" expl="VC for main" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="105"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl2">
 <goal name="Hash1.hash&#39;refn&#39;vc" expl="VC for hash&#39;refn">
 <proof prover="2"><result status="valid" time="0.01" steps="2"/></proof>
 </goal>
 <goal name="hash_log_spec">
 <proof prover="2"><result status="valid" time="0.01" steps="2"/></proof>
 </goal>
 <goal name="hash_log_eq_model_spec">
 <proof prover="2"><result status="valid" time="0.01" steps="2"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl0">
 <goal name="Clone1.clone&#39;&#39;refn&#39;vc" expl="VC for clone&#39;&#39;refn">
 <proof prover="2"><result status="valid" time="0.02" steps="0"/></proof>
 </goal>
</theory>
</file>
</why3session>
