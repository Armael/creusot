<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.15" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="hashmap.mlcfg"/>
<theory name="Hashmap_Impl5_New" proved="true">
 <goal name="new&#39;vc" expl="VC for new" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="538"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Get" proved="true">
 <goal name="get&#39;vc" expl="VC for get" proved="true">
 <proof prover="2"><result status="valid" time="1.76" steps="18786"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Add" proved="true">
 <goal name="add&#39;vc" expl="VC for add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="56"/></proof>
  </goal>
  <goal name="add&#39;vc.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="85"/></proof>
  </goal>
  <goal name="add&#39;vc.2" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="48"/></proof>
  </goal>
  <goal name="add&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="366"/></proof>
  </goal>
  <goal name="add&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="467"/></proof>
  </goal>
  <goal name="add&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="87"/></proof>
  </goal>
  <goal name="add&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.97" steps="1469957"/></proof>
  </goal>
  <goal name="add&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="91"/></proof>
  </goal>
  <goal name="add&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="91"/></proof>
  </goal>
  <goal name="add&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="91"/></proof>
  </goal>
  <goal name="add&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="674"/></proof>
  </goal>
  <goal name="add&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="91"/></proof>
  </goal>
  <goal name="add&#39;vc.12" expl="unreachable point" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.12.0" expl="unreachable point" proved="true">
   <proof prover="0"><result status="valid" time="0.33" steps="40705"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.13" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.27" steps="2650"/></proof>
  </goal>
  <goal name="add&#39;vc.14" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.59" steps="6482"/></proof>
  </goal>
  <goal name="add&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="137"/></proof>
  </goal>
  <goal name="add&#39;vc.16" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.16.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.33" steps="53002"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.45" steps="3234"/></proof>
  </goal>
  <goal name="add&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="2711"/></proof>
  </goal>
  <goal name="add&#39;vc.19" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.19.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.42" steps="50140"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.31" steps="2464"/></proof>
  </goal>
  <goal name="add&#39;vc.21" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.21.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.41" steps="52745"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.22" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.22.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.51" steps="67802"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.23" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.23.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.49" steps="66950"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="212"/></proof>
  </goal>
  <goal name="add&#39;vc.25" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.25.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.78" steps="62556"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.26" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.26.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.50" steps="55538"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.27" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="176"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hashmap_Impl2_HashLog_Impl" proved="true">
 <goal name="hash_log&#39;vc" expl="VC for hash_log" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="27"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl2_Hash" proved="true">
 <goal name="hash&#39;vc" expl="VC for hash" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="75"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl2_HashLogEqModel_Impl" proved="true">
 <goal name="hash_log_eq_model&#39;vc" expl="VC for hash_log_eq_model" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl2" proved="true">
 <goal name="Hash1.hash&#39;refn&#39;vc" expl="VC for hash&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="hash_log_spec" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="hash_log_eq_model_spec" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Main" proved="true">
 <goal name="main&#39;vc" expl="VC for main" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="146"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Resize" proved="true">
 <goal name="resize&#39;vc" expl="VC for resize" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="resize&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="62"/></proof>
  </goal>
  <goal name="resize&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="75"/></proof>
  </goal>
  <goal name="resize&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="187"/></proof>
  </goal>
  <goal name="resize&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="92"/></proof>
  </goal>
  <goal name="resize&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="67"/></proof>
  </goal>
  <goal name="resize&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="44"/></proof>
  </goal>
  <goal name="resize&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="44"/></proof>
  </goal>
  <goal name="resize&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="48"/></proof>
  </goal>
  <goal name="resize&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="86"/></proof>
  </goal>
  <goal name="resize&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.27" steps="1461"/></proof>
  </goal>
  <goal name="resize&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="136"/></proof>
  </goal>
  <goal name="resize&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="95"/></proof>
  </goal>
  <goal name="resize&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="136"/></proof>
  </goal>
  <goal name="resize&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="186"/></proof>
  </goal>
  <goal name="resize&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="189"/></proof>
  </goal>
  <goal name="resize&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="500"/></proof>
  </goal>
  <goal name="resize&#39;vc.16" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="339"/></proof>
  </goal>
  <goal name="resize&#39;vc.17" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resize&#39;vc.17.0" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.19" steps="46512"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resize&#39;vc.18" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="156"/></proof>
  </goal>
  <goal name="resize&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="163"/></proof>
  </goal>
  <goal name="resize&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="773"/></proof>
  </goal>
  <goal name="resize&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.04" steps="767"/></proof>
  </goal>
  <goal name="resize&#39;vc.22" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resize&#39;vc.22.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.45" steps="47295"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resize&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="227"/></proof>
  </goal>
  <goal name="resize&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.19" steps="793"/></proof>
  </goal>
  <goal name="resize&#39;vc.25" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="238447"/></proof>
  </goal>
  <goal name="resize&#39;vc.26" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="202"/></proof>
  </goal>
  <goal name="resize&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="1"><result status="valid" time="0.04" steps="235799"/></proof>
  </goal>
  <goal name="resize&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="207"/></proof>
  </goal>
  <goal name="resize&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.28" steps="46414"/></proof>
  </goal>
  <goal name="resize&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="147"/></proof>
  </goal>
  <goal name="resize&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="147"/></proof>
  </goal>
  <goal name="resize&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="1"><result status="valid" time="0.04" steps="239069"/></proof>
  </goal>
  <goal name="resize&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="150"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hashmap_Impl0" proved="true">
 <goal name="Clone1.clone&#39;&#39;refn&#39;vc" expl="VC for clone&#39;&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
</file>
</why3session>
