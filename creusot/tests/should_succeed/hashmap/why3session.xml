<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.8.15" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="hashmap.mlcfg"/>
<theory name="Hashmap_Impl5_New" proved="true">
 <goal name="new&#39;vc" expl="VC for new" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="537"/></proof>
 </goal>
</theory>
<theory name="Alloc_Vec_Impl16" proved="true">
 <goal name="Index1.index&#39;refn&#39;vc" expl="VC for index&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="Core_Slice_Index_Impl2" proved="true">
 <goal name="GetUncheckedMut1.get_unchecked_mut&#39;refn&#39;vc" expl="VC for get_unchecked_mut&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="GetUnchecked1.get_unchecked&#39;refn&#39;vc" expl="VC for get_unchecked&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="IndexMut1.index_mut&#39;refn&#39;vc" expl="VC for index_mut&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="Index1.index&#39;refn&#39;vc" expl="VC for index&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="GetMut1.get_mut&#39;refn&#39;vc" expl="VC for get_mut&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="Get1.get&#39;refn&#39;vc" expl="VC for get&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Get" proved="true">
 <goal name="get&#39;vc" expl="VC for get" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="4606"/></proof>
 </goal>
</theory>
<theory name="Alloc_Vec_Impl17" proved="true">
 <goal name="IndexMut1.index_mut&#39;refn&#39;vc" expl="VC for index_mut&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Add" proved="true">
 <goal name="add&#39;vc" expl="VC for add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="56"/></proof>
  </goal>
  <goal name="add&#39;vc.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="88"/></proof>
  </goal>
  <goal name="add&#39;vc.2" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="52"/></proof>
  </goal>
  <goal name="add&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="355"/></proof>
  </goal>
  <goal name="add&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="464"/></proof>
  </goal>
  <goal name="add&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="94"/></proof>
  </goal>
  <goal name="add&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.47" steps="48752"/></proof>
  </goal>
  <goal name="add&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="97"/></proof>
  </goal>
  <goal name="add&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="97"/></proof>
  </goal>
  <goal name="add&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="98"/></proof>
  </goal>
  <goal name="add&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="661"/></proof>
  </goal>
  <goal name="add&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="98"/></proof>
  </goal>
  <goal name="add&#39;vc.12" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="209"/></proof>
  </goal>
  <goal name="add&#39;vc.13" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="1843"/></proof>
  </goal>
  <goal name="add&#39;vc.14" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.57" steps="4398"/></proof>
  </goal>
  <goal name="add&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="145"/></proof>
  </goal>
  <goal name="add&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.59" steps="7654"/></proof>
  </goal>
  <goal name="add&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.32" steps="1987"/></proof>
  </goal>
  <goal name="add&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.30" steps="1913"/></proof>
  </goal>
  <goal name="add&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.33" steps="2200"/></proof>
  </goal>
  <goal name="add&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="1634"/></proof>
  </goal>
  <goal name="add&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.57" steps="7334"/></proof>
  </goal>
  <goal name="add&#39;vc.22" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.22.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.42" steps="69946"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.23" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.23.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.86" steps="24129"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="209"/></proof>
  </goal>
  <goal name="add&#39;vc.25" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.50" steps="64056"/></proof>
  </goal>
  <goal name="add&#39;vc.26" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.38" steps="56828"/></proof>
  </goal>
  <goal name="add&#39;vc.27" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="177"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hashmap_Impl2_Hash" proved="true">
 <goal name="hash&#39;vc" expl="VC for hash" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="75"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl2_HashLogEqModel_Impl" proved="true">
 <goal name="hash_log_eq_model&#39;vc" expl="VC for hash_log_eq_model" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl2" proved="true">
 <goal name="Hash1.hash&#39;refn&#39;vc" expl="VC for hash&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Main" proved="true">
 <goal name="main&#39;vc" expl="VC for main" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="146"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Resize" proved="true">
 <goal name="resize&#39;vc" expl="VC for resize" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="resize&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="65"/></proof>
  </goal>
  <goal name="resize&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="77"/></proof>
  </goal>
  <goal name="resize&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="193"/></proof>
  </goal>
  <goal name="resize&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="1"><result status="valid" time="0.06" steps="203110"/></proof>
  </goal>
  <goal name="resize&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="71"/></proof>
  </goal>
  <goal name="resize&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="47"/></proof>
  </goal>
  <goal name="resize&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="48"/></proof>
  </goal>
  <goal name="resize&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="53"/></proof>
  </goal>
  <goal name="resize&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="90"/></proof>
  </goal>
  <goal name="resize&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="846"/></proof>
  </goal>
  <goal name="resize&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="136"/></proof>
  </goal>
  <goal name="resize&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="97"/></proof>
  </goal>
  <goal name="resize&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="137"/></proof>
  </goal>
  <goal name="resize&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="189"/></proof>
  </goal>
  <goal name="resize&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="187"/></proof>
  </goal>
  <goal name="resize&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="494"/></proof>
  </goal>
  <goal name="resize&#39;vc.16" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="1"><result status="valid" time="0.07" steps="240026"/></proof>
  </goal>
  <goal name="resize&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="355"/></proof>
  </goal>
  <goal name="resize&#39;vc.18" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="159"/></proof>
  </goal>
  <goal name="resize&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="165"/></proof>
  </goal>
  <goal name="resize&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="626"/></proof>
  </goal>
  <goal name="resize&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="613"/></proof>
  </goal>
  <goal name="resize&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="1802"/></proof>
  </goal>
  <goal name="resize&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="224"/></proof>
  </goal>
  <goal name="resize&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="776"/></proof>
  </goal>
  <goal name="resize&#39;vc.25" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="632"/></proof>
  </goal>
  <goal name="resize&#39;vc.26" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="201"/></proof>
  </goal>
  <goal name="resize&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="235"/></proof>
  </goal>
  <goal name="resize&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="205"/></proof>
  </goal>
  <goal name="resize&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="267564"/></proof>
  </goal>
  <goal name="resize&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="148"/></proof>
  </goal>
  <goal name="resize&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="148"/></proof>
  </goal>
  <goal name="resize&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="241304"/></proof>
  </goal>
  <goal name="resize&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="152"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hashmap_Impl0" proved="true">
 <goal name="Clone1.clone&#39;&#39;refn&#39;vc" expl="VC for clone&#39;&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
</file>
</why3session>
