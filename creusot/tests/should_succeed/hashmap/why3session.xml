<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.11.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="hashmap.mlcfg"/>
<theory name="Hashmap_Impl2_Hash" proved="true">
 <goal name="hash&#39;vc" expl="VC for hash" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="16"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_New" proved="true">
 <goal name="new&#39;vc" expl="VC for new" proved="true">
 <proof prover="6"><result status="valid" time="0.02" steps="313"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Add" proved="true">
 <goal name="add&#39;vc" expl="VC for add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add&#39;vc.0" expl="remainder by zero" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="40"/></proof>
  </goal>
  <goal name="add&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
  <goal name="add&#39;vc.2" expl="division by zero" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="27"/></proof>
  </goal>
  <goal name="add&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="234"/></proof>
  </goal>
  <goal name="add&#39;vc.4" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="322"/></proof>
  </goal>
  <goal name="add&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="66274"/></proof>
  </goal>
  <goal name="add&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="315316"/></proof>
  </goal>
  <goal name="add&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="65"/></proof>
  </goal>
  <goal name="add&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="65"/></proof>
  </goal>
  <goal name="add&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="65"/></proof>
  </goal>
  <goal name="add&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="478"/></proof>
  </goal>
  <goal name="add&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="67"/></proof>
  </goal>
  <goal name="add&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="129"/></proof>
  </goal>
  <goal name="add&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.09" steps="404380"/></proof>
  </goal>
  <goal name="add&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.29" steps="34899"/></proof>
  </goal>
  <goal name="add&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="133565"/></proof>
  </goal>
  <goal name="add&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.20" steps="30619"/></proof>
  </goal>
  <goal name="add&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.03" steps="397"/></proof>
  </goal>
  <goal name="add&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.21" steps="30410"/></proof>
  </goal>
  <goal name="add&#39;vc.19" expl="assertion" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="add&#39;vc.19.0" expl="assertion" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="add&#39;vc.19.0.0" expl="VC for add" proved="true">
    <proof prover="6"><result status="valid" time="0.01" steps="376"/></proof>
    </goal>
    <goal name="add&#39;vc.19.0.1" expl="VC for add" proved="true">
    <proof prover="6"><result status="valid" time="1.07" steps="28261"/></proof>
    </goal>
    <goal name="add&#39;vc.19.0.2" expl="VC for add" proved="true">
    <proof prover="6"><result status="valid" time="0.36" steps="11460"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.20" expl="unreachable point" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="293"/></proof>
  </goal>
  <goal name="add&#39;vc.21" expl="unreachable point" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="229"/></proof>
  </goal>
  <goal name="add&#39;vc.22" expl="unreachable point" proved="true">
  <proof prover="6"><result status="valid" time="0.03" steps="163"/></proof>
  </goal>
  <goal name="add&#39;vc.23" expl="assertion" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="add&#39;vc.23.0" expl="assertion" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="add&#39;vc.23.0.0" expl="VC for add" proved="true">
    <proof prover="6"><result status="valid" time="0.02" steps="167"/></proof>
    </goal>
    <goal name="add&#39;vc.23.0.1" expl="VC for add" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="add&#39;vc.23.0.1.0" expl="VC for add" proved="true">
     <proof prover="6" timelimit="5" memlimit="2000"><result status="valid" time="0.31" steps="7205"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="add&#39;vc.23.0.2" expl="VC for add" proved="true">
    <proof prover="1"><result status="valid" time="0.28" steps="39523"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.24" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="237814"/></proof>
  </goal>
  <goal name="add&#39;vc.25" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.25.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.72" steps="110856"/></proof>
   </goal>
   <goal name="add&#39;vc.25.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.45" steps="213331"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Get" proved="true">
 <goal name="get&#39;vc" expl="VC for get" proved="true">
 <proof prover="6"><result status="valid" time="0.18" steps="5695"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Resize" proved="true">
 <goal name="resize&#39;vc" expl="VC for resize" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="resize&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="resize&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="resize&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="107156"/></proof>
  </goal>
  <goal name="resize&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="54"/></proof>
  </goal>
  <goal name="resize&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="40"/></proof>
  </goal>
  <goal name="resize&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="resize&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="resize&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="15906"/></proof>
  </goal>
  <goal name="resize&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="42"/></proof>
  </goal>
  <goal name="resize&#39;vc.9" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="81"/></proof>
  </goal>
  <goal name="resize&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="81"/></proof>
  </goal>
  <goal name="resize&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="107"/></proof>
  </goal>
  <goal name="resize&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="109"/></proof>
  </goal>
  <goal name="resize&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="297353"/></proof>
  </goal>
  <goal name="resize&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="235"/></proof>
  </goal>
  <goal name="resize&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="295"/></proof>
  </goal>
  <goal name="resize&#39;vc.16" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="64142"/></proof>
  </goal>
  <goal name="resize&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="106"/></proof>
  </goal>
  <goal name="resize&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.05" steps="933"/></proof>
  </goal>
  <goal name="resize&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.05" steps="953"/></proof>
  </goal>
  <goal name="resize&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.21" steps="33197"/></proof>
  </goal>
  <goal name="resize&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="122318"/></proof>
  </goal>
  <goal name="resize&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.06" steps="1177"/></proof>
  </goal>
  <goal name="resize&#39;vc.23" expl="unreachable point" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="127"/></proof>
  </goal>
  <goal name="resize&#39;vc.24" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.13" steps="4197"/></proof>
  </goal>
  <goal name="resize&#39;vc.25" expl="integer overflow" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="119"/></proof>
  </goal>
  <goal name="resize&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="143"/></proof>
  </goal>
  <goal name="resize&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="124"/></proof>
  </goal>
  <goal name="resize&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="268"/></proof>
  </goal>
  <goal name="resize&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="88"/></proof>
  </goal>
  <goal name="resize&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="67730"/></proof>
  </goal>
  <goal name="resize&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.02" steps="132"/></proof>
  </goal>
  <goal name="resize&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="98"/></proof>
  </goal>
  <goal name="resize&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="72"/></proof>
  </goal>
  <goal name="resize&#39;vc.34" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="117389"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hashmap_Main" proved="true">
 <goal name="main&#39;vc" expl="VC for main" proved="true">
 <proof prover="6"><result status="valid" time="0.02" steps="101"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl0" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl2" proved="true">
 <goal name="hash_refn" proved="true">
 <proof prover="6"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
</file>
</why3session>
