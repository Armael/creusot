<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.14" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="hashmap.stdout"/>
<theory name="Hashmap_Impl5_New" proved="true">
 <goal name="new&#39;vc" expl="VC for new" proved="true">
 <proof prover="2"><result status="valid" time="0.07" steps="474"/></proof>
 </goal>
</theory>
<theory name="CreusotContracts_Std1_Vec_Impl3" proved="true">
 <goal name="Index1.index&#39;refn&#39;vc" expl="VC for index&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Get" proved="true">
 <goal name="get&#39;vc" expl="VC for get" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.15" steps="62199"/></proof>
 <proof prover="2"><result status="valid" time="0.86" steps="29505"/></proof>
 </goal>
</theory>
<theory name="CreusotContracts_Std1_Vec_Impl2" proved="true">
 <goal name="IndexMut1.index_mut&#39;refn&#39;vc" expl="VC for index_mut&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Add" proved="true">
 <goal name="add&#39;vc" expl="VC for add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="60"/></proof>
  </goal>
  <goal name="add&#39;vc.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="72"/></proof>
  </goal>
  <goal name="add&#39;vc.2" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="52"/></proof>
  </goal>
  <goal name="add&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="441"/></proof>
  </goal>
  <goal name="add&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="615"/></proof>
  </goal>
  <goal name="add&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="95"/></proof>
  </goal>
  <goal name="add&#39;vc.6" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.6.0" expl="loop invariant init" proved="true">
   <proof prover="3"><result status="valid" time="0.30" steps="1325123"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="98"/></proof>
  </goal>
  <goal name="add&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="98"/></proof>
  </goal>
  <goal name="add&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="99"/></proof>
  </goal>
  <goal name="add&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="839"/></proof>
  </goal>
  <goal name="add&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="100"/></proof>
  </goal>
  <goal name="add&#39;vc.12" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="242"/></proof>
  </goal>
  <goal name="add&#39;vc.13" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="3177"/></proof>
  </goal>
  <goal name="add&#39;vc.14" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="7522"/></proof>
  </goal>
  <goal name="add&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="145"/></proof>
  </goal>
  <goal name="add&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.52" steps="16640"/></proof>
  </goal>
  <goal name="add&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="3760"/></proof>
  </goal>
  <goal name="add&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.21" steps="3401"/></proof>
  </goal>
  <goal name="add&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="3683"/></proof>
  </goal>
  <goal name="add&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="2875"/></proof>
  </goal>
  <goal name="add&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.45" steps="15005"/></proof>
  </goal>
  <goal name="add&#39;vc.22" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.22.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.31" steps="67350"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.23" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.23.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="1.46" steps="46714"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.24" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.24.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="271"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.25" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.25.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.73" steps="2170526"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.26" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.26.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.33" steps="9385"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;vc.27" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;vc.27.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="197"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hashmap_Impl2_Hash" proved="true">
 <goal name="hash&#39;vc" expl="VC for hash" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="74"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl2_HashLogEqModel_Impl" proved="true">
 <goal name="hash_log_eq_model&#39;vc" expl="VC for hash_log_eq_model" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl2" proved="true">
 <goal name="Hash1.hash&#39;refn&#39;vc" expl="VC for hash&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Main" proved="true">
 <goal name="main&#39;vc" expl="VC for main" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="152"/></proof>
 </goal>
</theory>
<theory name="Hashmap_Impl5_Resize" proved="true">
 <goal name="resize&#39;vc" expl="VC for resize" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="resize&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="65"/></proof>
  </goal>
  <goal name="resize&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="64"/></proof>
  </goal>
  <goal name="resize&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="209"/></proof>
  </goal>
  <goal name="resize&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="101"/></proof>
  </goal>
  <goal name="resize&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="71"/></proof>
  </goal>
  <goal name="resize&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="resize&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="resize&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="52"/></proof>
  </goal>
  <goal name="resize&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="resize&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="765"/></proof>
  </goal>
  <goal name="resize&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="147"/></proof>
  </goal>
  <goal name="resize&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="100"/></proof>
  </goal>
  <goal name="resize&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="141"/></proof>
  </goal>
  <goal name="resize&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="197"/></proof>
  </goal>
  <goal name="resize&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="195"/></proof>
  </goal>
  <goal name="resize&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="717"/></proof>
  </goal>
  <goal name="resize&#39;vc.16" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="823"/></proof>
  </goal>
  <goal name="resize&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="512"/></proof>
  </goal>
  <goal name="resize&#39;vc.18" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="571"/></proof>
  </goal>
  <goal name="resize&#39;vc.19" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="162"/></proof>
  </goal>
  <goal name="resize&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="167"/></proof>
  </goal>
  <goal name="resize&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="992"/></proof>
  </goal>
  <goal name="resize&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="926"/></proof>
  </goal>
  <goal name="resize&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="1219"/></proof>
  </goal>
  <goal name="resize&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="1410"/></proof>
  </goal>
  <goal name="resize&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="234"/></proof>
  </goal>
  <goal name="resize&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="858"/></proof>
  </goal>
  <goal name="resize&#39;vc.27" expl="assertion" proved="true">
  <transf name="destruct_term_subst" proved="true" arg1="(get4
  (model4
   ( * model2
       (CreusotContracts_Logic_Ghost_Ghost self_old_2:
        creusotcontracts_logic_ghost_ghost (borrowed (hashmap_myhashmap k1
        v)))))
  (model6 k))">
   <goal name="resize&#39;vc.27.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="203"/></proof>
   </goal>
   <goal name="resize&#39;vc.27.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="147"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resize&#39;vc.28" expl="assertion" proved="true">
  <transf name="destruct_term_subst" proved="true" arg1="(get4 (model4 (Hashmap_MyHashMap new_5)) (model6 k))">
   <goal name="resize&#39;vc.28.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="200"/></proof>
   </goal>
   <goal name="resize&#39;vc.28.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="147"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resize&#39;vc.29" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="3683"/></proof>
  </goal>
  <goal name="resize&#39;vc.30" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="212"/></proof>
  </goal>
  <goal name="resize&#39;vc.31" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resize&#39;vc.31.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="250"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resize&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="214"/></proof>
  </goal>
  <goal name="resize&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="531"/></proof>
  </goal>
  <goal name="resize&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="151"/></proof>
  </goal>
  <goal name="resize&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="151"/></proof>
  </goal>
  <goal name="resize&#39;vc.36" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="419"/></proof>
  </goal>
  <goal name="resize&#39;vc.37" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="155"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hashmap_Impl0" proved="true">
 <goal name="Clone1.clone&#39;&#39;refn&#39;vc" expl="VC for clone&#39;&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
</file>
</why3session>
