<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.8.15" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="heapsort_generic.mlcfg"/>
<theory name="HeapsortGeneric_HeapFragMax_Impl" proved="true">
 <goal name="heap_frag_max&#39;vc" expl="VC for heap_frag_max" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="866"/></proof>
 </goal>
</theory>
<theory name="Alloc_Vec_Impl16" proved="true">
 <goal name="Index1.index&#39;refn&#39;vc" expl="VC for index&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="Alloc_Vec_Impl11" proved="true">
 <goal name="DerefMut1.deref_mut&#39;refn&#39;vc" expl="VC for deref_mut&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="Core_Slice_Index_Impl2" proved="true">
 <goal name="GetUncheckedMut1.get_unchecked_mut&#39;refn&#39;vc" expl="VC for get_unchecked_mut&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="GetUnchecked1.get_unchecked&#39;refn&#39;vc" expl="VC for get_unchecked&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="IndexMut1.index_mut&#39;refn&#39;vc" expl="VC for index_mut&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="Index1.index&#39;refn&#39;vc" expl="VC for index&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="GetMut1.get_mut&#39;refn&#39;vc" expl="VC for get_mut&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="Get1.get&#39;refn&#39;vc" expl="VC for get&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
</theory>
<theory name="HeapsortGeneric_SiftDown" proved="true">
 <goal name="sift_down&#39;vc" expl="VC for sift_down" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sift_down&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="107"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="41"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="43"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="76"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="198"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="402"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="644"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="67"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.9" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="68"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="169"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="845"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="720"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.13" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="979"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="944"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.15" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="1054"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="1153"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.17" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="199"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="208"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="1263"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="534"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="12404"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.52" steps="7496"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.96" steps="14503"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="532"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="233"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.26" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="301723"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.27" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="2026"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.28" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="360"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.27" steps="3847"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.30" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="132"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.31" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="132"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.32" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="132"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.33" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="132"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.34" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="132"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="132"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.36" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="132"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.37" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="132"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.38" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="132"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.39" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="132"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.40" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="132"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.41" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="132"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.42" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="132"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.43" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="132"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.44" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="132"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.45" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="132"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.46" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="132"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.47" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="787"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.48" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="338"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.49" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="888"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.50" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="1001"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.51" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="1079"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.52" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="1234"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.53" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="522"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.54" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="257"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.55" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="1305"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.56" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="551"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.57" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.59" steps="63227"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.58" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.92" steps="109543"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.59" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.73" steps="86294"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.60" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.60.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.75" steps="87757"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.61" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.61.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.82" steps="94665"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.62" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="306777"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.63" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.59" steps="2461"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.64" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="454"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.65" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.65.0" expl="postcondition" proved="true">
   <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="1.29" steps="9134"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.66" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="371"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.67" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="1014"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.68" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.31" steps="1109"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.69" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.30" steps="1220"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.70" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="542"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.71" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="258"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.72" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.31" steps="1297"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.73" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="569"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.74" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.65" steps="62323"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.75" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.75.0" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="2.65" steps="19077"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.76" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.76.0" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="2.54" steps="18057"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.77" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.77.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.90" steps="96258"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.78" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.78.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.78" steps="92559"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.79" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="311952"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.80" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.42" steps="3081"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.81" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="473"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.82" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.82.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.94" steps="6833"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.83" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="295678"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.84" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.34" steps="1115"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.85" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="192"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.86" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.41" steps="2002"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="HeapsortGeneric_HeapSort" proved="true">
 <goal name="heap_sort&#39;vc" expl="VC for heap_sort" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="heap_sort&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="37"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="39"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="103"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="333"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="45"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="1001"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="156"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="180"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="63"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="63"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="210"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="281"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="194"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="209"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.26" steps="1622"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.15" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="221"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="257"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.17" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="103"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.18" expl="assertion" proved="true">
  <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="1.20" steps="13559"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.19" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="295"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.20" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="122"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.21" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.39" steps="614271"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.22" steps="866"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.37" steps="1771"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="122"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="289"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.26" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="heap_sort&#39;vc.26.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.84" steps="6309"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.27" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="heap_sort&#39;vc.27.0" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="3.55" steps="16100"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.28" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="174"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.29" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="73"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.30" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="242"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.31" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="212"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.21" steps="1382"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="81"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="714"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="872"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
