<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="10" steplimit="0" memlimit="4000"/>
<prover id="2" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="heapsort_generic.mlcfg"/>
<theory name="HeapsortGeneric_HeapFragMax_Impl" proved="true">
 <goal name="heap_frag_max&#39;vc" expl="VC for heap_frag_max" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="444"/></proof>
 </goal>
</theory>
<theory name="HeapsortGeneric_SiftDown" proved="true">
 <goal name="sift_down&#39;vc" expl="VC for sift_down" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sift_down&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="39"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="90"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="242"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="433"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.7" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.8" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="27"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="90"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="398"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="442"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="548"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="455"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="129"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.15" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="493"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.16" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="317"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.17" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="1115"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.18" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="1113"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.19" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="1167"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.20" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="1253"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="1181"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="1359"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.20" steps="37821"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.68" steps="127774"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.71" steps="113924"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.41" steps="63516"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.46" steps="72463"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.28" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.65" steps="107253"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="346"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="389"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="2728"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="HeapsortGeneric_HeapSort" proved="true">
 <goal name="heap_sort&#39;vc" expl="VC for heap_sort" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="heap_sort&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="12"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="68"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="236"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="450"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="108"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="128"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="29"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="151"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="216"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="141"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="1077"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="141"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.13" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="148"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="159"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.15" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="160"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.16" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="1.28" steps="485390"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.17" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.28" steps="46259"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.18" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="57"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.19" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="176"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="666"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="1334"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="183"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.23" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="heap_sort&#39;vc.23.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="1.49" steps="515317"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.24" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="heap_sort&#39;vc.24.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="1.42" steps="412120"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.25" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="121"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.26" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="143"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.27" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="173"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.28" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="149"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="1073"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="562"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="733"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
