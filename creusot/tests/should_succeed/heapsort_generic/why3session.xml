<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.5.3" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="heapsort_generic.coma"/>
<theory name="HeapsortGeneric_HeapFragMax_Impl" proved="true">
 <goal name="vc_heap_frag_max" proved="true">
 <proof prover="3"><result status="valid" time="0.041633" steps="14037"/></proof>
 </goal>
</theory>
<theory name="HeapsortGeneric_SiftDown" proved="true">
 <goal name="vc_sift_down" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_sift_down.0" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.025689" steps="19"/></proof>
  </goal>
  <goal name="vc_sift_down.1" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.046587" steps="177"/></proof>
  </goal>
  <goal name="vc_sift_down.2" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.038317" steps="230"/></proof>
  </goal>
  <goal name="vc_sift_down.3" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.016670" steps="74"/></proof>
  </goal>
  <goal name="vc_sift_down.4" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.014239" steps="69"/></proof>
  </goal>
  <goal name="vc_sift_down.5" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.014849" steps="37"/></proof>
  </goal>
  <goal name="vc_sift_down.6" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_sift_down.6.0" expl="loop invariant" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_sift_down.6.0.0" expl="loop invariant" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_sift_down.6.0.0.0" expl="loop invariant" proved="true">
     <proof prover="0"><result status="valid" time="0.118756" steps="33784"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="vc_sift_down.6.1" expl="loop invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.113366" steps="33778"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_sift_down.7" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.093148" steps="28231"/></proof>
  </goal>
  <goal name="vc_sift_down.8" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.061636" steps="22220"/></proof>
  </goal>
  <goal name="vc_sift_down.9" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.015840" steps="35"/></proof>
  </goal>
  <goal name="vc_sift_down.10" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.010878" steps="39"/></proof>
  </goal>
  <goal name="vc_sift_down.11" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.018377" steps="65"/></proof>
  </goal>
  <goal name="vc_sift_down.12" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.024626" steps="318"/></proof>
  </goal>
  <goal name="vc_sift_down.13" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.016701" steps="120"/></proof>
  </goal>
  <goal name="vc_sift_down.14" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.019934" steps="498"/></proof>
  </goal>
  <goal name="vc_sift_down.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.020984" steps="92"/></proof>
  </goal>
  <goal name="vc_sift_down.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.026241" steps="93"/></proof>
  </goal>
  <goal name="vc_sift_down.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.028754" steps="238"/></proof>
  </goal>
  <goal name="vc_sift_down.18" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.023855" steps="57"/></proof>
  </goal>
  <goal name="vc_sift_down.19" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.023309" steps="102"/></proof>
  </goal>
  <goal name="vc_sift_down.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.020994" steps="110"/></proof>
  </goal>
  <goal name="vc_sift_down.21" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.025095" steps="111"/></proof>
  </goal>
  <goal name="vc_sift_down.22" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.032025" steps="274"/></proof>
  </goal>
  <goal name="vc_sift_down.23" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.021428" steps="65"/></proof>
  </goal>
  <goal name="vc_sift_down.24" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.023626" steps="67"/></proof>
  </goal>
  <goal name="vc_sift_down.25" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.017967" steps="67"/></proof>
  </goal>
  <goal name="vc_sift_down.26" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.019431" steps="122"/></proof>
  </goal>
  <goal name="vc_sift_down.27" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.017907" steps="64"/></proof>
  </goal>
  <goal name="vc_sift_down.28" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.148482" steps="45914"/></proof>
  </goal>
  <goal name="vc_sift_down.29" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.109288" steps="31981"/></proof>
  </goal>
  <goal name="vc_sift_down.30" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.066788" steps="23102"/></proof>
  </goal>
  <goal name="vc_sift_down.31" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.226676" steps="63721"/></proof>
  </goal>
  <goal name="vc_sift_down.32" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.013637" steps="101"/></proof>
  </goal>
  <goal name="vc_sift_down.33" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.023660" steps="101"/></proof>
  </goal>
  <goal name="vc_sift_down.34" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.029142" steps="1483"/></proof>
  </goal>
  <goal name="vc_sift_down.35" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.020127" steps="53"/></proof>
  </goal>
  <goal name="vc_sift_down.36" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.017522" steps="113"/></proof>
  </goal>
  <goal name="vc_sift_down.37" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.021304" steps="114"/></proof>
  </goal>
  <goal name="vc_sift_down.38" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.026394" steps="314"/></proof>
  </goal>
  <goal name="vc_sift_down.39" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.013160" steps="59"/></proof>
  </goal>
  <goal name="vc_sift_down.40" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.025049" steps="61"/></proof>
  </goal>
  <goal name="vc_sift_down.41" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.017235" steps="61"/></proof>
  </goal>
  <goal name="vc_sift_down.42" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.018833" steps="122"/></proof>
  </goal>
  <goal name="vc_sift_down.43" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.018318" steps="129"/></proof>
  </goal>
  <goal name="vc_sift_down.44" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.189003" steps="37183"/></proof>
  </goal>
  <goal name="vc_sift_down.45" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.037728" steps="289"/></proof>
  </goal>
  <goal name="vc_sift_down.46" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.018339" steps="133"/></proof>
  </goal>
  <goal name="vc_sift_down.47" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.375311" steps="95086"/></proof>
  </goal>
  <goal name="vc_sift_down.48" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.690230" steps="161350"/></proof>
  </goal>
  <goal name="vc_sift_down.49" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_sift_down.49.0" expl="loop invariant" proved="true">
   <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="1.675378" steps="305753"/></proof>
   </goal>
   <goal name="vc_sift_down.49.1" expl="loop invariant" proved="true">
   <proof prover="3"><result status="valid" time="0.866506" steps="206914"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_sift_down.50" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_sift_down.50.0" expl="loop invariant" proved="true">
   <transf name="remove" proved="true" arg1="abs,singleton,cons,snoc,mem,iseq,occ,occ_all,seq_eq_sub,permut,permut_sub,permut_all,borrow_logic,get_id,usize&#39;maxInt,usize&#39;minInt,usize&#39;eq,in_bounds,slice&#39;eq,id1,invariant&#39;8,max&#39;0,invariant&#39;3,resolve&#39;3,deep_model&#39;2,has_value&#39;0,in_bounds&#39;0,shallow_model&#39;4,permutation_of&#39;0,shallow_model&#39;3,shallow_model&#39;1,Abs_le,Abs_pos,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Div_inf,Mod_inf,Div_mult,Mod_mult,Numof_append,numof_increasing,numof_strictly_increasing,numof_change_any,numof_change_some,numof_change_equiv,length_nonnegative,(==)&#39;spec,(==)&#39;spec&#39;0,create&#39;spec,create&#39;spec&#39;0,empty&#39;def,set&#39;spec,set&#39;spec&#39;0,set&#39;spec&#39;1,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,singleton&#39;spec&#39;0,cons&#39;spec,cons&#39;spec&#39;0,cons&#39;spec&#39;1,snoc&#39;spec,snoc&#39;spec&#39;0,snoc&#39;spec&#39;1,([..])&#39;spec,([..])&#39;spec&#39;0,(++)&#39;spec,(++)&#39;spec&#39;0,(++)&#39;spec&#39;1,mem_append,mem_tail,occ_cons,occ_snoc,occ_tail,append_num_occ,exchange_set,exchange_permut_sub,Permut_sub_weakening,permut_refl,permut_sym,permut_trans,permut_exists,permut_all_mem,exchange_permut_all,to_int_in_bounds,extensionality,new_spec,slice&#39;invariant,slice&#39;inj,slice_ext,spec,inv&#39;10,inv&#39;9,inv&#39;8,inv&#39;7,inv&#39;6,inv&#39;5,inv&#39;4,shallow_model&#39;2_spec,inv&#39;2,eq_cmp&#39;0_spec,antisym2&#39;0_spec,antisym1&#39;0_spec,trans&#39;0_spec,refl&#39;0_spec,cmp_gt_log&#39;0_spec,cmp_ge_log&#39;0_spec,cmp_lt_log&#39;0_spec,cmp_le_log&#39;0_spec,inv&#39;1,inv&#39;0,shallow_model&#39;6_spec,Assert38,Assert37,Assert36,Assert35,Assert34,Assert33,Assert32,Assert29,Assert28,Assert27,Assert26,Assert25,Assert17,Assert16,Assert15,Assert14,Assert13,Assert12,Assert11,Assert10,Assert9,Assert8,Assert7,Assert4,Assert,H20,H19,H18,H17,H15,H14,H13,H12,H11,H10,H9,H8,H25,H24,H23,H22,H6,H5,H4">
    <goal name="vc_sift_down.50.0.0" expl="loop invariant" proved="true">
    <proof prover="1" timelimit="0.035859" memlimit="2000"><result status="valid" time="0.035599" steps="573"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="vc_sift_down.50.1" expl="loop invariant" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_sift_down.50.1.0" expl="loop invariant" proved="true">
    <transf name="remove" proved="true" arg1="Assert12,Assert10,Assert9,Assert8,Assert7,Assert4,Assert,H14,H13,H24,H23,H22,H7,H6,H5,H4,Assert27,Assert26,Assert22,Assert21">
     <goal name="vc_sift_down.50.1.0.0" expl="loop invariant" proved="true">
     <proof prover="3"><result status="valid" time="0.309725" steps="88853"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="vc_sift_down.50.1.1" expl="loop invariant" proved="true">
    <transf name="remove" proved="true" arg1="Assert47,Assert41,Assert35,Assert34,Assert17,Assert16,Assert15,Assert,H23,H22,H21,H7,H6,H5,H4,Assert28,Assert27,Assert26,Assert25,Assert24,Assert23,Assert22,Assert21">
     <goal name="vc_sift_down.50.1.1.0" expl="loop invariant" proved="true">
     <proof prover="3"><result status="valid" time="0.324307" steps="80345"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_sift_down.51" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.222661" steps="57856"/></proof>
  </goal>
  <goal name="vc_sift_down.52" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.042343" steps="829"/></proof>
  </goal>
  <goal name="vc_sift_down.53" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.231607" steps="60709"/></proof>
  </goal>
  <goal name="vc_sift_down.54" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.075997" steps="23339"/></proof>
  </goal>
  <goal name="vc_sift_down.55" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.015273" steps="120"/></proof>
  </goal>
  <goal name="vc_sift_down.56" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.096784" steps="1039"/></proof>
  </goal>
  <goal name="vc_sift_down.57" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.042006" steps="382"/></proof>
  </goal>
  <goal name="vc_sift_down.58" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.036215" steps="125"/></proof>
  </goal>
  <goal name="vc_sift_down.59" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_sift_down.59.0" expl="postcondition" proved="true">
   <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,([]),singleton,cons,snoc,(++),mem,iseq,occ,occ_all,seq_eq_sub,exchange,permut_sub,permut_all,( *_),(^_),borrow_logic,get_id,usize&#39;maxInt,usize&#39;minInt,usize&#39;eq,in_bounds,slice&#39;eq,id,invariant&#39;8,max&#39;0,invariant&#39;3,resolve&#39;2,shallow_model&#39;5,shallow_model&#39;0,in_bounds&#39;0,shallow_model&#39;3,shallow_model&#39;1,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Div_bound,Mod_bound,Div_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Mod_inf,Div_mult,Mod_mult,Numof_bounds,Numof_append,Numof_left_no_add,Numof_left_add,Empty,Full,numof_increasing,numof_strictly_increasing,numof_change_any,numof_change_some,numof_change_equiv,length_nonnegative,(==)&#39;spec,(==)&#39;spec&#39;0,create&#39;spec,create&#39;spec&#39;0,empty&#39;def,set&#39;spec,set&#39;spec&#39;0,set&#39;spec&#39;1,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,singleton&#39;spec&#39;0,cons&#39;spec,cons&#39;spec&#39;0,cons&#39;spec&#39;1,snoc&#39;spec,snoc&#39;spec&#39;0,snoc&#39;spec&#39;1,([..])&#39;spec,([..])&#39;spec&#39;0,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,(++)&#39;spec&#39;0,(++)&#39;spec&#39;1,mem_append,mem_tail,occ_cons,occ_snoc,occ_tail,append_num_occ,exchange_set,exchange_permut_sub,Permut_sub_weakening,permut_refl,permut_sym,permut_trans,permut_exists,permut_all_mem,exchange_permut_all,usize&#39;inj,to_int_in_bounds,extensionality,inner_spec,slice&#39;invariant,slice&#39;inj,slice_ext,spec,inv&#39;10,inv&#39;9,inv&#39;8,inv&#39;7,inv&#39;6,inv&#39;5,inv&#39;4,shallow_model&#39;2_spec,inv&#39;2,antisym2&#39;0_spec,antisym1&#39;0_spec,trans&#39;0_spec,refl&#39;0_spec,cmp_gt_log&#39;0_spec,cmp_ge_log&#39;0_spec,cmp_lt_log&#39;0_spec,cmp_le_log&#39;0_spec,inv&#39;1,inv&#39;0,shallow_model&#39;6_spec,Assert34,Assert32,Assert31,Assert30,Assert29,Assert27,Assert26,Assert25,Assert2,Assert1,Assert23,Assert22,Assert21,Assert20,Assert19,Assert13,Assert11,Assert10,Assert9,Assert7,Assert6,Assert4,H13,H12,H11,H10,H9,H7,H6,H5,H4,H3,H2,H1,H,H17,H16,H15,H14">
    <goal name="vc_sift_down.59.0.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.029015" steps="239"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="vc_sift_down.59.1" expl="postcondition" proved="true">
   <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),([]),(++),mem,iseq,occ,occ_all,seq_eq_sub,exchange,permut_sub,permut_all,( *_),(^_),borrow_logic,get_id,usize&#39;maxInt,in_bounds,id,invariant&#39;8,max&#39;0,invariant&#39;3,resolve&#39;2,shallow_model&#39;5,shallow_model&#39;0,in_bounds&#39;0,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Mod_sign_neg,Rounds_toward_zero,Mod_1,Div_inf,Div_mult,Mod_mult,numof&#39;def,Numof_bounds,Numof_append,Numof_left_no_add,Numof_left_add,Empty,Full,numof_increasing,numof_strictly_increasing,numof_change_any,numof_change_some,numof_change_equiv,length_nonnegative,(==)&#39;spec,(==)&#39;spec&#39;0,create&#39;spec,create&#39;spec&#39;0,empty&#39;def,set&#39;spec&#39;0,set&#39;spec&#39;1,set&#39;def,singleton&#39;spec,singleton&#39;spec&#39;0,cons&#39;spec&#39;0,cons&#39;spec&#39;1,([..])&#39;spec,([..])&#39;spec&#39;0,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec&#39;0,(++)&#39;spec&#39;1,mem_append,mem_tail,occ_cons,occ_snoc,occ_tail,append_num_occ,exchange_permut_sub,Permut_sub_weakening,permut_refl,permut_sym,permut_trans,permut_exists,permut_all_mem,exchange_permut_all,to_int_in_bounds,slice&#39;inj,spec,inv&#39;10,inv&#39;9,inv&#39;8,inv&#39;7,inv&#39;6,inv&#39;5,inv&#39;4,shallow_model&#39;2_spec,inv&#39;2,cmp_gt_log&#39;0_spec,cmp_ge_log&#39;0_spec,shallow_model&#39;6_spec,Assert41,Assert40,Assert39,Assert38,Assert36,Assert35,Assert34,Assert2,Assert1,Assert32,Assert31,Assert30,Assert13,Assert11,Assert10,Assert9,Assert7,Assert6,Assert4,Assert23,H6,H5,H4,H3,Assert22,Assert20,Assert19,Assert17,Assert15,Assert14">
    <goal name="vc_sift_down.59.1.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.092745" steps="20386"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="HeapsortGeneric_HeapSort" proved="true">
 <goal name="vc_heap_sort" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_heap_sort.0" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.024357" steps="19"/></proof>
  <proof prover="3"><result status="valid" time="0.057257" steps="17864"/></proof>
  </goal>
  <goal name="vc_heap_sort.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.025331" steps="21"/></proof>
  <proof prover="3"><result status="valid" time="0.055733" steps="18016"/></proof>
  </goal>
  <goal name="vc_heap_sort.2" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.017072" steps="22"/></proof>
  <proof prover="3"><result status="valid" time="0.049399" steps="17578"/></proof>
  </goal>
  <goal name="vc_heap_sort.3" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.017631" steps="25"/></proof>
  <proof prover="3"><result status="valid" time="0.046008" steps="17210"/></proof>
  </goal>
  <goal name="vc_heap_sort.4" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.020859" steps="48"/></proof>
  <proof prover="3"><result status="valid" time="0.074220" steps="19258"/></proof>
  </goal>
  <goal name="vc_heap_sort.5" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.121038" steps="28261"/></proof>
  <proof prover="3"><result status="valid" time="0.052457" steps="18199"/></proof>
  </goal>
  <goal name="vc_heap_sort.6" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.021175" steps="514"/></proof>
  <proof prover="3"><result status="valid" time="0.113369" steps="32014"/></proof>
  </goal>
  <goal name="vc_heap_sort.7" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.078124" steps="21812"/></proof>
  </goal>
  <goal name="vc_heap_sort.8" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.025503" steps="56"/></proof>
  <proof prover="3"><result status="valid" time="0.051473" steps="18192"/></proof>
  </goal>
  <goal name="vc_heap_sort.9" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.044527" steps="35"/></proof>
  <proof prover="3"><result status="valid" time="0.052915" steps="17162"/></proof>
  </goal>
  <goal name="vc_heap_sort.10" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.021280" steps="73"/></proof>
  <proof prover="3"><result status="valid" time="0.071636" steps="20102"/></proof>
  </goal>
  <goal name="vc_heap_sort.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.020543" steps="69"/></proof>
  <proof prover="3"><result status="valid" time="0.051271" steps="18181"/></proof>
  </goal>
  <goal name="vc_heap_sort.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.021334" steps="79"/></proof>
  <proof prover="3"><result status="valid" time="0.058748" steps="18204"/></proof>
  </goal>
  <goal name="vc_heap_sort.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.025681" steps="87"/></proof>
  <proof prover="3"><result status="valid" time="0.055323" steps="18557"/></proof>
  </goal>
  <goal name="vc_heap_sort.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.024946" steps="106"/></proof>
  <proof prover="3"><result status="valid" time="0.089983" steps="23066"/></proof>
  </goal>
  <goal name="vc_heap_sort.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.022169" steps="86"/></proof>
  <proof prover="3"><result status="valid" time="0.077125" steps="20686"/></proof>
  </goal>
  <goal name="vc_heap_sort.16" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.066753" steps="336"/></proof>
  <proof prover="3"><result status="valid" time="0.109990" steps="28232"/></proof>
  </goal>
  <goal name="vc_heap_sort.17" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.023292" steps="347"/></proof>
  <proof prover="3"><result status="valid" time="0.106477" steps="28684"/></proof>
  </goal>
  <goal name="vc_heap_sort.18" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.116444" steps="29403"/></proof>
  </goal>
  <goal name="vc_heap_sort.19" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.066316" steps="21353"/></proof>
  </goal>
  <goal name="vc_heap_sort.20" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.041493" steps="55"/></proof>
  <proof prover="3"><result status="valid" time="0.055141" steps="21359"/></proof>
  </goal>
  <goal name="vc_heap_sort.21" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.022330" steps="61"/></proof>
  <proof prover="3"><result status="valid" time="0.057778" steps="18129"/></proof>
  </goal>
  <goal name="vc_heap_sort.22" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.044096" steps="80"/></proof>
  <proof prover="3"><result status="valid" time="0.062529" steps="21215"/></proof>
  </goal>
  <goal name="vc_heap_sort.23" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.082070" steps="23307"/></proof>
  </goal>
  <goal name="vc_heap_sort.24" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.019227" steps="92"/></proof>
  <proof prover="3"><result status="valid" time="0.100867" steps="23356"/></proof>
  </goal>
  <goal name="vc_heap_sort.25" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.065398" steps="20706"/></proof>
  </goal>
  <goal name="vc_heap_sort.26" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.084933" steps="79"/></proof>
  <proof prover="3"><result status="valid" time="0.067698" steps="21363"/></proof>
  </goal>
  <goal name="vc_heap_sort.27" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.023670" steps="50"/></proof>
  <proof prover="3"><result status="valid" time="0.065464" steps="20733"/></proof>
  </goal>
  <goal name="vc_heap_sort.28" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.018304" steps="90"/></proof>
  <proof prover="3"><result status="valid" time="0.063268" steps="21395"/></proof>
  </goal>
  <goal name="vc_heap_sort.29" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.018802" steps="96"/></proof>
  <proof prover="3"><result status="valid" time="0.074851" steps="21902"/></proof>
  </goal>
  <goal name="vc_heap_sort.30" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.087161" steps="1422"/></proof>
  <proof prover="3"><result status="valid" time="0.112122" steps="29132"/></proof>
  </goal>
  <goal name="vc_heap_sort.31" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.013388" steps="108"/></proof>
  <proof prover="3"><result status="valid" time="0.082807" steps="23822"/></proof>
  </goal>
  <goal name="vc_heap_sort.32" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.019788" steps="100"/></proof>
  <proof prover="3"><result status="valid" time="0.061741" steps="21460"/></proof>
  </goal>
  <goal name="vc_heap_sort.33" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.017633" steps="107"/></proof>
  <proof prover="3"><result status="valid" time="0.061976" steps="21612"/></proof>
  </goal>
  <goal name="vc_heap_sort.34" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.022899" steps="116"/></proof>
  <proof prover="3"><result status="valid" time="0.080890" steps="24477"/></proof>
  </goal>
  <goal name="vc_heap_sort.35" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.023403" steps="73"/></proof>
  <proof prover="3"><result status="valid" time="0.074897" steps="21027"/></proof>
  </goal>
  <goal name="vc_heap_sort.36" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.020713" steps="112"/></proof>
  <proof prover="3"><result status="valid" time="0.065912" steps="21696"/></proof>
  </goal>
  <goal name="vc_heap_sort.37" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.744302" steps="251668"/></proof>
  </goal>
  <goal name="vc_heap_sort.38" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.016496" steps="119"/></proof>
  <proof prover="3"><result status="valid" time="0.061438" steps="21961"/></proof>
  </goal>
  <goal name="vc_heap_sort.39" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.022062" steps="132"/></proof>
  <proof prover="3"><result status="valid" time="0.129020" steps="25300"/></proof>
  </goal>
  <goal name="vc_heap_sort.40" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.018917" steps="81"/></proof>
  <proof prover="3"><result status="valid" time="0.071258" steps="21309"/></proof>
  </goal>
  <goal name="vc_heap_sort.41" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.237854" steps="65516"/></proof>
  </goal>
  <goal name="vc_heap_sort.42" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.211267" steps="52036"/></proof>
  </goal>
  <goal name="vc_heap_sort.43" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_heap_sort.43.0" expl="loop invariant" proved="true">
   <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="1.247895" steps="312095"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_heap_sort.44" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.021768" steps="142"/></proof>
  <proof prover="3"><result status="valid" time="0.066864" steps="23805"/></proof>
  </goal>
  <goal name="vc_heap_sort.45" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.132547" steps="32366"/></proof>
  </goal>
  <goal name="vc_heap_sort.46" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.026258" steps="577"/></proof>
  <proof prover="3"><result status="valid" time="0.105721" steps="30936"/></proof>
  </goal>
  <goal name="vc_heap_sort.47" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.033132" steps="138"/></proof>
  <proof prover="3"><result status="valid" time="0.056697" steps="22147"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
