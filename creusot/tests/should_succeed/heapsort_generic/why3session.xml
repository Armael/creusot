<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.11.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="heapsort_generic.mlcfg"/>
<theory name="HeapsortGeneric_HeapFragMax_Impl" proved="true">
 <goal name="heap_frag_max&#39;vc" expl="VC for heap_frag_max" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="444"/></proof>
 </goal>
</theory>
<theory name="HeapsortGeneric_SiftDown" proved="true">
 <goal name="sift_down&#39;vc" expl="VC for sift_down" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sift_down&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="68"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="29"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="51"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="165"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="364"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="180109"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="49"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.9" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="50"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="137"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="726"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="694"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.13" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="779"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="717"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.15" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="307"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="814"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.17" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="418"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.18" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="1375"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.19" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="1426"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.20" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="1550"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.21" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="1723"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="179"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="1618"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="1993"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.23" steps="52255"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.26" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.26.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.26.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sift_down&#39;vc.26.0.0.0" expl="loop invariant preservation" proved="true">
     <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="0.94" steps="12144"/></proof>
     </goal>
     <goal name="sift_down&#39;vc.26.0.0.1" expl="loop invariant preservation" proved="true">
     <proof prover="0" timelimit="1"><result status="valid" time="0.64" steps="110739"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sift_down&#39;vc.26.1" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.26.1.0" expl="loop invariant preservation" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sift_down&#39;vc.26.1.0.0" expl="loop invariant preservation" proved="true">
     <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="0.10" steps="33955"/></proof>
     </goal>
     <goal name="sift_down&#39;vc.26.1.0.1" expl="loop invariant preservation" proved="true">
     <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="2.44" steps="28854"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="2000"><result status="valid" time="0.90" steps="116963"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.59" steps="92683"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.88" steps="120180"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.73" steps="113926"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="414"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.32" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="476"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="0" memlimit="2000"><result status="valid" time="0.25" steps="45111"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="HeapsortGeneric_HeapSort" proved="true">
 <goal name="heap_sort&#39;vc" expl="VC for heap_sort" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="heap_sort&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="17"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="19"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="73"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="270"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="25"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="515"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="125"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="152"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="43"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="43"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="178"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="248"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="165"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="1188"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="181"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.15" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="188"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="208"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.17" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="224"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.18" expl="assertion" proved="true">
  <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="1.28" steps="485821"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.19" expl="precondition" proved="true">
  <proof prover="0" memlimit="2000"><result status="valid" time="0.28" steps="46822"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.20" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="95"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.21" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="253"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="779"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="1507"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="99"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="256"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.26" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="heap_sort&#39;vc.26.0" expl="loop invariant preservation" proved="true">
   <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="1.49" steps="514933"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.27" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="heap_sort&#39;vc.27.0" expl="loop invariant preservation" proved="true">
   <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="1.42" steps="412565"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.28" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="143"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.29" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="178"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.30" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="211"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.31" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="183"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="1173"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="60"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="620"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="796"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
