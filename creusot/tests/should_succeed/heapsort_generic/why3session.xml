<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.14" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="heapsort_generic.mlcfg"/>
<theory name="HeapsortGeneric_HeapFragMax_Impl" proved="true">
 <goal name="heap_frag_max&#39;vc" expl="VC for heap_frag_max" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="803"/></proof>
 </goal>
</theory>
<theory name="HeapsortGeneric_SiftDown" proved="true">
 <goal name="sift_down&#39;vc" expl="VC for sift_down" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sift_down&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="103"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="39"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="73"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="193"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="398"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="641"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="62"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.9" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="63"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="164"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="806"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="695"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.13" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="949"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="782"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.15" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="332"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="882"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.17" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="441"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.18" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.21" steps="1442"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.19" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="1493"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.20" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="1626"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.21" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.21" steps="1775"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="201"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.29" steps="1666"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.31" steps="2150"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.66" steps="63796"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="1.45" steps="106954"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.27" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.27.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.27.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sift_down&#39;vc.27.0.0.0" expl="loop invariant preservation" proved="true">
     <proof prover="2"><result status="valid" time="0.79" steps="7744"/></proof>
     </goal>
     <goal name="sift_down&#39;vc.27.0.0.1" expl="loop invariant preservation" proved="true">
     <proof prover="0"><result status="valid" time="0.74" steps="84853"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sift_down&#39;vc.27.1" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.27.1.0" expl="loop invariant preservation" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sift_down&#39;vc.27.1.0.0" expl="loop invariant preservation" proved="true">
     <proof prover="2"><result status="valid" time="0.03" steps="124"/></proof>
     </goal>
     <goal name="sift_down&#39;vc.27.1.0.1" expl="loop invariant preservation" proved="true">
     <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="1.03" steps="11607"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="1.28" steps="85741"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.29" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.29.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.29.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sift_down&#39;vc.29.0.0.0" expl="loop invariant preservation" proved="true">
     <proof prover="2"><result status="valid" time="0.04" steps="226"/></proof>
     </goal>
     <goal name="sift_down&#39;vc.29.0.0.1" expl="loop invariant preservation" proved="true">
     <proof prover="0"><result status="valid" time="0.83" steps="93330"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sift_down&#39;vc.29.1" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.87" steps="91511"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="2.88" steps="158519"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="483"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.32" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="761"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.60" steps="63953"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="HeapsortGeneric_HeapSort" proved="true">
 <goal name="heap_sort&#39;vc" expl="VC for heap_sort" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="heap_sort&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="31"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="33"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="98"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="330"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="40"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="992"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="151"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="175"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="56"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="56"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="204"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="275"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="188"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="1486"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="203"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.15" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="214"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="235"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.17" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="251"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.18" expl="assertion" proved="true">
  <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="1.63" steps="11937"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.19" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.63" steps="545656"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.20" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="114"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.21" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="290"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="853"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.23" steps="1766"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="115"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="281"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.26" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="heap_sort&#39;vc.26.0" expl="loop invariant preservation" proved="true">
   <transf name="subst_all" proved="true" >
    <goal name="heap_sort&#39;vc.26.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="2"><result status="valid" time="1.59" steps="8142"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.27" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="heap_sort&#39;vc.27.0" expl="loop invariant preservation" proved="true">
   <transf name="subst_all" proved="true" >
    <goal name="heap_sort&#39;vc.27.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="2"><result status="valid" time="0.76" steps="4339"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.28" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="168"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.29" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="206"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.30" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="241"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.31" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="77"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.21" steps="1399"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="75"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="709"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="874"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
