<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="10" steplimit="0" memlimit="4000"/>
<prover id="1" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.2" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="heapsort_generic.mlcfg"/>
<theory name="HeapsortGeneric_HeapFragMax_Impl" proved="true">
 <goal name="heap_frag_max&#39;vc" expl="VC for heap_frag_max" proved="true">
 <proof prover="1"><result status="valid" time="0.05" steps="443"/></proof>
 </goal>
</theory>
<theory name="HeapsortGeneric_SiftDown" proved="true">
 <goal name="sift_down&#39;vc" expl="VC for sift_down" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sift_down&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="68"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="29"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="50"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="164"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="364"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="607"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.7" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="49"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.8" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="49"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="136"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="784"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="587"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="738"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="687"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="286"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="783"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.16" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="394"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="1325"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="1373"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="1504"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="1672"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="1563"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="1903"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.21" steps="38501"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.84" steps="149725"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.80" steps="130438"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.38" steps="58880"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.48" steps="73919"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.28" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.67" steps="107906"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="415"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="478"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.87" steps="11888"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="HeapsortGeneric_HeapSort" proved="true">
 <goal name="heap_sort&#39;vc" expl="VC for heap_sort" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="heap_sort&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="17"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="19"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="73"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="269"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="511"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="125"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="139"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="39"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="164"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="231"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="152"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="1133"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="154"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.13" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="161"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="181"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="195"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.16" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="1.28" steps="485615"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.17" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.28" steps="46670"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="80"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="220"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="740"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="1462"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="225"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.23" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="heap_sort&#39;vc.23.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="1.45" steps="514849"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.24" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="heap_sort&#39;vc.24.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="1.42" steps="412494"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.25" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="130"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.26" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="164"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.27" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="196"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.28" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="169"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="1142"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="604"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.17" steps="780"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
