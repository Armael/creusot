<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.11.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="heapsort_generic.mlcfg"/>
<theory name="HeapsortGeneric_HeapFragMax_Impl" proved="true">
 <goal name="heap_frag_max&#39;vc" expl="VC for heap_frag_max" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="444"/></proof>
 </goal>
</theory>
<theory name="HeapsortGeneric_SiftDown" proved="true">
 <goal name="sift_down&#39;vc" expl="VC for sift_down" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sift_down&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="39"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="17"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="143562"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="242"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="433"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.9" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="27"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="91"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="442"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="495"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.13" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="534"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="455"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.15" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="129"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="493"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.17" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="317"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.18" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="1114"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.19" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="1114"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.20" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="1166"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.21" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.19" steps="1253"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="100"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="1180"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="1313"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.23" steps="50873"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="1.19" steps="184239"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.88" steps="125236"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.28" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.28.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.28.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sift_down&#39;vc.28.0.0.0" expl="loop invariant preservation" proved="true">
     <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="0.02" steps="243"/></proof>
     </goal>
     <goal name="sift_down&#39;vc.28.0.0.1" expl="loop invariant preservation" proved="true">
     <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="0.49" steps="79518"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sift_down&#39;vc.28.1" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.28.1.0" expl="loop invariant preservation" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sift_down&#39;vc.28.1.0.0" expl="loop invariant preservation" proved="true">
     <proof prover="0" timelimit="1"><result status="valid" time="0.11" steps="33820"/></proof>
     </goal>
     <goal name="sift_down&#39;vc.28.1.0.1" expl="loop invariant preservation" proved="true">
     <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="1.28" steps="17107"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="2000"><result status="valid" time="0.90" steps="125055"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.20" steps="190634"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="331"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.32" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="375"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.33" expl="postcondition" proved="true">
  <proof prover="0" memlimit="2000"><result status="valid" time="0.25" steps="44650"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="HeapsortGeneric_HeapSort" proved="true">
 <goal name="heap_sort&#39;vc" expl="VC for heap_sort" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="heap_sort&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="12"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="68"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="236"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="17"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="450"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="108"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="128"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="29"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="29"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="151"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="216"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="141"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="1060"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="141"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.15" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="148"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="159"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.17" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="160"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.18" expl="assertion" proved="true">
  <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="1.28" steps="485435"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.19" expl="precondition" proved="true">
  <proof prover="0" memlimit="2000"><result status="valid" time="0.28" steps="46288"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.20" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="58"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.21" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="177"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="665"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="1334"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="64"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="184"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.26" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="heap_sort&#39;vc.26.0" expl="loop invariant preservation" proved="true">
   <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="1.49" steps="515366"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.27" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="heap_sort&#39;vc.27.0" expl="loop invariant preservation" proved="true">
   <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="1.42" steps="412225"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.28" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="121"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.29" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="143"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.30" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="173"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.31" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="149"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="1076"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="37"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="563"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="736"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
