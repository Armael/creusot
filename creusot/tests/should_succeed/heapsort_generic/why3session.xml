<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.11.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="heapsort_generic.mlcfg"/>
<theory name="HeapsortGeneric_HeapFragMax_Impl" proved="true">
 <goal name="heap_frag_max&#39;vc" expl="VC for heap_frag_max" proved="true">
 <proof prover="1"><result status="valid" time="0.050000" steps="443"/></proof>
 </goal>
</theory>
<theory name="HeapsortGeneric_SiftDown" proved="true">
 <goal name="sift_down&#39;vc" expl="VC for sift_down" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sift_down&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="52"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="18"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="20"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="173643"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="119"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="296"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="186354"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.7" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="34"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.8" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="37"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="182374"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="418"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="452"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="185886"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="188069"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="137"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.15" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="188898"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.16" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="164"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="614"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.18" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="189540"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.19" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="194436"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.20" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.040000" steps="239202"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.030000" steps="195738"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="696"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.220000" steps="38524"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.24" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.24.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.24.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="0"><result status="valid" time="0.556275" steps="112172"/></proof>
    </goal>
    <goal name="sift_down&#39;vc.24.0.1" expl="loop invariant preservation" proved="true">
    <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.778778" steps="10266"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sift_down&#39;vc.24.1" expl="loop invariant preservation" proved="true">
   <transf name="remove" proved="true" arg1="zero,abs,uint64&#39;maxInt,uint64&#39;minInt,max_uint64,singleton,cons,snoc,mem,iseq,occ,occ_all,seq_eq_sub,permut_sub,permut_all,id,mAX&#39;,shallow_model5,heap_frag,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Full,numof_increasing,numof_strictly_increasing,numof_change_any,numof_change_some,numof_change_equiv,extensionality,set&#39;spec,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,cons&#39;spec,snoc&#39;spec,([..])&#39;spec,([..])&#39;def,([_..])&#39;def,mem_append,mem_tail,occ_cons,occ_snoc,occ_tail,exchange_permut_sub,Permut_sub_weakening,permut_refl,permut_sym,permut_trans,permut_exists,permut_all_mem,exchange_permut_all,new&#39;spec,shallow_model_spec1,eq_cmp_spec,antisym2_spec,antisym1_spec,cmp_ge_log_spec,cmp_lt_log_spec,H20,H15,Ensures12,Ensures11,Assert,Ensures10,H14,Ensures9,Ensures8,Ensures7,H13,Ensures6,Assume2,Ensures5,Assume1,H10,H19,H18,H17,H16,H12,H11">
    <goal name="sift_down&#39;vc.24.1.0" expl="loop invariant preservation" proved="true">
    <proof prover="1"><result status="valid" time="0.030000" steps="305"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.600000" steps="76161"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.520000" steps="64980"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.620000" steps="77088"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.28" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.28.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.28.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sift_down&#39;vc.28.0.0.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="0.560000" steps="52480"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sift_down&#39;vc.28.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.853601" steps="148042"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.030000" steps="362"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.030000" steps="411"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.190000" steps="33329"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="HeapsortGeneric_HeapSort" proved="true">
 <goal name="heap_sort&#39;vc" expl="VC for heap_sort" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="heap_sort&#39;vc.0" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.050000" steps="15"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.030000" steps="21"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.070000" steps="71"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.050000" steps="251"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.070000" steps="476"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.050000" steps="114"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.050000" steps="130"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="153"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.070000" steps="185"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.030000" steps="160"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.180000" steps="1114"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.130000" steps="588"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.160000" steps="760"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.070000" steps="135"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="37"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="159"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.16" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.080000" steps="225"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.060000" steps="148"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.18" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.060000" steps="157"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="175"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.060000" steps="175"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.21" expl="assertion" proved="true">
  <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="1.020000" steps="310843"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.22" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.200000" steps="47683"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.060000" steps="71"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.24" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.090000" steps="190"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.160000" steps="699"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.200000" steps="1390"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.110000" steps="193"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.28" expl="loop invariant preservation" proved="true">
  <transf name="remove" proved="true" arg1="to_int_in_bounds,extensionality,zero_unsigned_is_zero,(==)&#39;spec,create&#39;spec,set&#39;spec,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,cons&#39;spec,snoc&#39;spec,([..])&#39;spec,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,mem_append,mem_tail,occ_cons,occ_snoc,occ_tail,append_num_occ">
   <goal name="heap_sort&#39;vc.28.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.800000" steps="202116"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.29" expl="loop invariant preservation" proved="true">
  <transf name="remove" proved="true" arg1="(-),uint64&#39;maxInt,uint64&#39;minInt,max_uint64,length1,radix,min_unsigned,in_bounds1,singleton,cons,snoc,(++),mem,iseq,occ,occ_all,seq_eq_sub,permut_sub,permut_all,id,mAX&#39;,shallow_model5,in_bounds,resolve,index_logic2,heap_frag,Assoc1,CompatOrderMult,Abs_le,Abs_pos,Div_sign_pos,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,numof&#39;def,Numof_bounds,Numof_append,Numof_left_no_add,Numof_left_add,Empty,Full,numof_increasing,numof_strictly_increasing,numof_change_any,numof_change_some,numof_change_equiv,to_int_in_bounds,extensionality,zero_unsigned_is_zero,(==)&#39;spec,create&#39;spec,set&#39;spec,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,cons&#39;spec,snoc&#39;spec,([..])&#39;spec,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,mem_append,mem_tail,occ_cons,occ_snoc,occ_tail,append_num_occ">
   <goal name="heap_sort&#39;vc.29.0" expl="loop invariant preservation" proved="true">
   <proof prover="3"><result status="valid" time="0.160000" steps="29622"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.180000" steps="1105"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.070000" steps="149"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
