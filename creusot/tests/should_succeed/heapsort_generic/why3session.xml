<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="4000"/>
<prover id="1" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.11.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="heapsort_generic.mlcfg"/>
<theory name="HeapsortGeneric_HeapFragMax_Impl" proved="true">
 <goal name="heap_frag_max&#39;vc" expl="VC for heap_frag_max" proved="true">
 <proof prover="1"><result status="valid" time="0.05" steps="443"/></proof>
 </goal>
</theory>
<theory name="HeapsortGeneric_SiftDown" proved="true">
 <goal name="sift_down&#39;vc" expl="VC for sift_down" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sift_down&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="52"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="173643"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="119"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="296"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="186354"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.7" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="33"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.8" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="182256"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="416"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="450"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="185768"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="187951"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="136"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.15" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="188780"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.16" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="163"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="613"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.18" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="189422"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.19" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="194318"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.20" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="239063"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="195612"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="712"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.22" steps="38521"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.24" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.24.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.24.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="2.66" steps="326805"/></proof>
    </goal>
    <goal name="sift_down&#39;vc.24.0.1" expl="loop invariant preservation" proved="true">
    <proof prover="1"><result status="valid" time="0.81" steps="10288"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sift_down&#39;vc.24.1" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.24.1.0" expl="loop invariant preservation" proved="true">
    <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="2.03" steps="23393"/></proof>
    </goal>
    <goal name="sift_down&#39;vc.24.1.1" expl="loop invariant preservation" proved="true">
    <proof prover="1"><result status="valid" time="0.01" steps="51"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.60" steps="76158"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.52" steps="64977"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.62" steps="77085"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.28" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.28.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.06" steps="622"/></proof>
   </goal>
   <goal name="sift_down&#39;vc.28.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.28.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sift_down&#39;vc.28.1.0.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="0.53" steps="72063"/></proof>
     </goal>
     <goal name="sift_down&#39;vc.28.1.0.1" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="0.56" steps="85327"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="sift_down&#39;vc.28.1.1" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.48" steps="67812"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="361"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="408"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.19" steps="33436"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="HeapsortGeneric_HeapSort" proved="true">
 <goal name="heap_sort&#39;vc" expl="VC for heap_sort" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="heap_sort&#39;vc.0" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="15"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="19"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="71"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="250"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="492"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="114"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="129"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="153"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="184"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="160"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="1111"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="586"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.16" steps="758"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="135"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="159"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.16" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="224"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="148"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.18" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="156"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="173"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="175"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.21" expl="assertion" proved="true">
  <proof prover="0" timelimit="10"><result status="valid" time="1.02" steps="310823"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.22" expl="precondition" proved="true">
  <proof prover="0" memlimit="2000"><result status="valid" time="0.20" steps="47676"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="69"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.24" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.09" steps="188"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.16" steps="694"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.20" steps="1393"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="193"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.28" expl="loop invariant preservation" proved="true">
  <transf name="remove" proved="true" arg1="to_int_in_bounds,extensionality,zero_unsigned_is_zero,(==)&#39;spec,create&#39;spec,set&#39;spec,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,cons&#39;spec,snoc&#39;spec,([..])&#39;spec,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,mem_append,mem_tail,occ_cons,occ_snoc,occ_tail,append_num_occ">
   <goal name="heap_sort&#39;vc.28.0" expl="loop invariant preservation" proved="true">
   <proof prover="0" timelimit="1" memlimit="1000"><result status="valid" time="0.80" steps="202144"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.29" expl="loop invariant preservation" proved="true">
  <transf name="remove" proved="true" arg1="(-),uint64&#39;maxInt,uint64&#39;minInt,max_uint64,length1,radix,min_unsigned,in_bounds1,singleton,cons,snoc,(++),mem,iseq,occ,occ_all,seq_eq_sub,permut_sub,permut_all,id,mAX&#39;,shallow_model5,in_bounds,resolve,index_logic2,heap_frag,Assoc1,CompatOrderMult,Abs_le,Abs_pos,Div_sign_pos,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,numof&#39;def,Numof_bounds,Numof_append,Numof_left_no_add,Numof_left_add,Empty,Full,numof_increasing,numof_strictly_increasing,numof_change_any,numof_change_some,numof_change_equiv,to_int_in_bounds,extensionality,zero_unsigned_is_zero,(==)&#39;spec,create&#39;spec,set&#39;spec,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,cons&#39;spec,snoc&#39;spec,([..])&#39;spec,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,mem_append,mem_tail,occ_cons,occ_snoc,occ_tail,append_num_occ">
   <goal name="heap_sort&#39;vc.29.0" expl="loop invariant preservation" proved="true">
   <proof prover="3"><result status="valid" time="0.16" steps="29619"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="1104"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="149"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
