<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="30" steplimit="0" memlimit="4000"/>
<prover id="1" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.12.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="heapsort_generic.mlcfg"/>
<theory name="HeapsortGeneric_HeapFragMax_Impl" proved="true">
 <goal name="heap_frag_max&#39;vc" expl="VC for heap_frag_max" proved="true">
 <proof prover="1"><result status="valid" time="0.050000" steps="414"/></proof>
 </goal>
</theory>
<theory name="HeapsortGeneric_SiftDown" proved="true">
 <goal name="sift_down&#39;vc" expl="VC for sift_down" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sift_down&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="49"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="16"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="24"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="62"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="155280"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="293"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="166608"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.7" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="31"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.8" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="35"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="160844"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="444"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="441"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="526"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.13" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="166414"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="133"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.15" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="167199"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.16" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="170652"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="606"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.18" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="167776"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.19" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="172868"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.20" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.040000" steps="260265"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.030000" steps="180353"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="705"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.159045" steps="38816"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.24" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.24.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.24.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="0"><result status="valid" time="0.476230" steps="111945"/></proof>
    </goal>
    <goal name="sift_down&#39;vc.24.0.1" expl="loop invariant preservation" proved="true">
    <proof prover="0"><result status="valid" time="0.590918" steps="139274"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="sift_down&#39;vc.24.1" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.24.1.0" expl="loop invariant preservation" proved="true">
    <proof prover="0"><result status="valid" time="0.959732" steps="178111"/></proof>
    </goal>
    <goal name="sift_down&#39;vc.24.1.1" expl="loop invariant preservation" proved="true">
    <proof prover="0"><result status="valid" time="0.123682" steps="34487"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.503655" steps="76448"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.394651" steps="65209"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.27" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.27.0" expl="loop invariant preservation" proved="true">
   <proof prover="3"><result status="valid" time="0.528617" steps="77728"/></proof>
   </goal>
   <goal name="sift_down&#39;vc.27.1" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.27.1.0" expl="loop invariant preservation" proved="true">
    <proof prover="3"><result status="valid" time="0.564626" steps="71131"/></proof>
    </goal>
    <goal name="sift_down&#39;vc.27.1.1" expl="loop invariant preservation" proved="true">
    <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.045506" steps="49"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.28" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.28.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.28.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sift_down&#39;vc.28.0.0.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="0.385274" steps="52901"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sift_down&#39;vc.28.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.28.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sift_down&#39;vc.28.1.0.0" expl="postcondition" proved="true">
     <proof prover="0" timelimit="1" memlimit="1000"><result status="valid" time="0.475104" steps="95174"/></proof>
     </goal>
     <goal name="sift_down&#39;vc.28.1.0.1" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="0.556956" steps="88043"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="sift_down&#39;vc.28.1.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sift_down&#39;vc.28.1.1.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="0.521574" steps="67395"/></proof>
     </goal>
     <goal name="sift_down&#39;vc.28.1.1.1" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="0.212369" steps="21889"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.030000" steps="354"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.134008" steps="442"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.227075" steps="33724"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="HeapsortGeneric_HeapSort" proved="true">
 <goal name="heap_sort&#39;vc" expl="VC for heap_sort" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="heap_sort&#39;vc.0" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.050000" steps="15"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="1"><result status="valid" time="0.030000" steps="19"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.070000" steps="70"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.050000" steps="249"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.070000" steps="470"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.050000" steps="111"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.050000" steps="124"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="149"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.070000" steps="180"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.030000" steps="156"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.082448" steps="1105"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.130000" steps="584"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.160000" steps="758"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.070000" steps="131"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="35"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="156"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.16" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.080000" steps="223"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.060000" steps="144"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.18" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.060000" steps="151"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.040000" steps="169"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.060000" steps="171"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.21" expl="assertion" proved="true">
  <proof prover="0" timelimit="10"><result status="valid" time="0.747817" steps="306236"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.22" expl="precondition" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.137511" steps="48424"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.060000" steps="69"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.24" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.090000" steps="184"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.160000" steps="698"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.100540" steps="1390"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.110000" steps="189"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.28" expl="loop invariant preservation" proved="true">
  <transf name="remove" proved="true" arg1="to_int_in_bounds,extensionality,zero_unsigned_is_zero,(==)&#39;spec,create&#39;spec,set&#39;spec,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,cons&#39;spec,snoc&#39;spec,([..])&#39;spec,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,mem_append,mem_tail,occ_cons,occ_snoc,occ_tail,append_num_occ">
   <goal name="heap_sort&#39;vc.28.0" expl="loop invariant preservation" proved="true">
   <proof prover="0" timelimit="1" memlimit="1000"><result status="valid" time="1.018581" steps="329157"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.217933" steps="63323"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.180000" steps="1089"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.070000" steps="145"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
