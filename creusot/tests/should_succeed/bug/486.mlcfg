
module C486_HasMutRef_Type
  use prelude.Borrow
  type c486_hasmutref_type 't =
    | C486_HasMutRef_Type (borrowed 't)
    
  let function c486_hasmutref_type_HasMutRef_0 (self : c486_hasmutref_type 't) : borrowed 't
   = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C486_HasMutRef_Type a -> a
      end
end
module C486_Test_Interface
  use prelude.Borrow
  use mach.int.UInt32
  use mach.int.Int
  use mach.int.Int32
  use C486_HasMutRef_Type
  val test [@cfg:stackify] (x : C486_HasMutRef_Type.c486_hasmutref_type uint32) : ()
    ensures { [#"../486.rs" 6 10 6 20] UInt32.to_int ( ^ C486_HasMutRef_Type.c486_hasmutref_type_HasMutRef_0 x) = 5 }
    
end
module C486_Test
  use prelude.Borrow
  use mach.int.UInt32
  use mach.int.Int
  use mach.int.Int32
  use C486_HasMutRef_Type
  let rec cfg test [@cfg:stackify] [#"../486.rs" 7 0 7 34] (x : C486_HasMutRef_Type.c486_hasmutref_type uint32) : ()
    ensures { [#"../486.rs" 6 10 6 20] UInt32.to_int ( ^ C486_HasMutRef_Type.c486_hasmutref_type_HasMutRef_0 x) = 5 }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var x_1 : C486_HasMutRef_Type.c486_hasmutref_type uint32;
  {
    x_1 <- x;
    goto BB0
  }
  BB0 {
    x_1 <- (let C486_HasMutRef_Type.C486_HasMutRef_Type a = x_1 in C486_HasMutRef_Type.C486_HasMutRef_Type ({ (C486_HasMutRef_Type.c486_hasmutref_type_HasMutRef_0 x_1) with current = (5 : uint32) }));
    _0 <- ();
    return _0
  }
  
end
