
module C02Derive_Lit_Type
  type c02derive_lit_type  =
    | C02Derive_Lit_Type
    
end
module C02Derive_Impl0_Clone_Interface
  use prelude.Borrow
  use C02Derive_Lit_Type
  val clone' [@cfg:stackify] (self : C02Derive_Lit_Type.c02derive_lit_type) : C02Derive_Lit_Type.c02derive_lit_type
end
module C02Derive_Impl0_Clone
  use prelude.Borrow
  use C02Derive_Lit_Type
  let rec cfg clone' [@cfg:stackify] [#"../02_derive.rs" 3 9 3 14] (self : C02Derive_Lit_Type.c02derive_lit_type) : C02Derive_Lit_Type.c02derive_lit_type
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : C02Derive_Lit_Type.c02derive_lit_type;
  var self_1 : C02Derive_Lit_Type.c02derive_lit_type;
  {
    self_1 <- self;
    goto BB0
  }
  BB0 {
    _0 <- C02Derive_Lit_Type.C02Derive_Lit_Type;
    return _0
  }
  
end
module Core_Clone_Clone_CloneFrom_Interface
  type self
  use prelude.Borrow
  val clone_from [@cfg:stackify] (self : borrowed self) (source : self) : ()
    requires {false}
    
end
module Core_Clone_Clone_CloneFrom
  type self
  use prelude.Borrow
  val clone_from [@cfg:stackify] (self : borrowed self) (source : self) : ()
    requires {false}
    
end
module Core_Clone_Clone_Clone_Interface
  type self
  use prelude.Borrow
  val clone' [@cfg:stackify] (self : self) : self
    ensures { result = self }
    
end
module Core_Clone_Clone_Clone
  type self
  use prelude.Borrow
  val clone' [@cfg:stackify] (self : self) : self
    ensures { result = self }
    
end
module C02Derive_Impl0
  use C02Derive_Lit_Type
  clone Core_Clone_Clone_CloneFrom_Interface as CloneFrom0 with type self = C02Derive_Lit_Type.c02derive_lit_type
  clone C02Derive_Impl0_Clone_Interface as Clone0
  clone Core_Clone_Clone_Clone_Interface as Clone1 with type self = C02Derive_Lit_Type.c02derive_lit_type,
  val clone' = Clone0.clone'
end
