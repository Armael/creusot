<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.12.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.5.3" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="hillel.coma"/>
<theory name="Hillel_RightPad" proved="true">
 <goal name="vc_right_pad" proved="true">
 <proof prover="3"><result status="valid" time="0.089802" steps="1574"/></proof>
 </goal>
</theory>
<theory name="Hillel_LeftPad" proved="true">
 <goal name="vc_left_pad" proved="true">
 <proof prover="3"><result status="valid" time="0.352262" steps="6038"/></proof>
 </goal>
</theory>
<theory name="Hillel_SubsetPush_Impl" proved="true">
 <goal name="vc_subset_push" proved="true">
 <proof prover="3"><result status="valid" time="0.020148" steps="151"/></proof>
 </goal>
</theory>
<theory name="Hillel_InsertUnique" proved="true">
 <goal name="vc_insert_unique" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_insert_unique.0" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.012053" steps="52"/></proof>
  </goal>
  <goal name="vc_insert_unique.1" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.008179" steps="18"/></proof>
  </goal>
  <goal name="vc_insert_unique.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.015161" steps="22"/></proof>
  </goal>
  <goal name="vc_insert_unique.3" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.054720" steps="8571"/></proof>
  </goal>
  <goal name="vc_insert_unique.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.008736" steps="26"/></proof>
  </goal>
  <goal name="vc_insert_unique.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.016028" steps="28"/></proof>
  </goal>
  <goal name="vc_insert_unique.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010113" steps="30"/></proof>
  </goal>
  <goal name="vc_insert_unique.7" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.010165" steps="40"/></proof>
  </goal>
  <goal name="vc_insert_unique.8" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.012699" steps="42"/></proof>
  </goal>
  <goal name="vc_insert_unique.9" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.013089" steps="78"/></proof>
  </goal>
  <goal name="vc_insert_unique.10" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.010622" steps="50"/></proof>
  </goal>
  <goal name="vc_insert_unique.11" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.013434" steps="62"/></proof>
  </goal>
  <goal name="vc_insert_unique.12" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.062995" steps="860"/></proof>
  </goal>
  <goal name="vc_insert_unique.13" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.017413" steps="78"/></proof>
  </goal>
  <goal name="vc_insert_unique.14" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.012297" steps="78"/></proof>
  </goal>
  <goal name="vc_insert_unique.15" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.016910" steps="80"/></proof>
  </goal>
  <goal name="vc_insert_unique.16" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010556" steps="62"/></proof>
  </goal>
  <goal name="vc_insert_unique.17" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.013205" steps="77"/></proof>
  </goal>
  <goal name="vc_insert_unique.18" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.018590" steps="83"/></proof>
  </goal>
  <goal name="vc_insert_unique.19" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.113528" steps="2092"/></proof>
  </goal>
  <goal name="vc_insert_unique.20" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.015891" steps="91"/></proof>
  </goal>
  <goal name="vc_insert_unique.21" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.019563" steps="93"/></proof>
  </goal>
  <goal name="vc_insert_unique.22" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.011158" steps="95"/></proof>
  </goal>
  <goal name="vc_insert_unique.23" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.009967" steps="96"/></proof>
  </goal>
  <goal name="vc_insert_unique.24" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.020310" steps="101"/></proof>
  </goal>
  <goal name="vc_insert_unique.25" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.051527" steps="772"/></proof>
  </goal>
  <goal name="vc_insert_unique.26" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.048130" steps="616"/></proof>
  </goal>
  <goal name="vc_insert_unique.27" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.020560" steps="95"/></proof>
  </goal>
  <goal name="vc_insert_unique.28" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.010374" steps="96"/></proof>
  </goal>
  <goal name="vc_insert_unique.29" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.014948" steps="100"/></proof>
  </goal>
  <goal name="vc_insert_unique.30" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.018409" steps="102"/></proof>
  </goal>
  <goal name="vc_insert_unique.31" expl="type invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.093686" steps="1529"/></proof>
  </goal>
  <goal name="vc_insert_unique.32" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_insert_unique.32.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.012023" steps="63"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_insert_unique.33" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.055327" steps="884"/></proof>
  </goal>
  <goal name="vc_insert_unique.34" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.023033" steps="11551"/></proof>
  </goal>
  <goal name="vc_insert_unique.35" expl="precondition" proved="true">
  <transf name="remove" proved="true" arg1="abs,uint64&#39;maxInt,uint64&#39;minInt,uint64&#39;eq,max_uint64,length1,radix,to_int,min_unsigned,in_bounds,singleton,cons,(++),get_id,borrow_logic,slice&#39;eq,id1,max0,invariant8,produces_trans0,produces_refl0,is_unique0,deep_model4,resolve5,into_iter_pre0,subset_push0,Abs_le,Abs_pos,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,uint64&#39;inj,to_int_in_bounds,extensionality,zero_unsigned_is_zero,length_nonnegative,(==)&#39;spec&#39;0,set&#39;spec,set&#39;spec&#39;0,set&#39;spec&#39;1,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,singleton&#39;spec&#39;0,cons&#39;spec,cons&#39;spec&#39;0,cons&#39;spec&#39;1,snoc&#39;spec&#39;0,([..])&#39;spec,([..])&#39;spec&#39;0,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,inner_spec,slice&#39;invariant,slice&#39;inj,slice_ext,length&#39;def,get&#39;def,some_0&#39;def,inv15,inv14,inv13,inv12,inv111,inv10,inv9,shallow_model3_spec,inv7,inv6,inv5,inv4,shallow_model5_spec,produces_trans0_spec,produces_refl0_spec,inv3,inv2,inv0,subset_push0_spec,Requires2,Requires1,Requires,H9,Assume5,H8,Assert2,Assume4,Ensures8,Assert1,Assume3,Ensures5,Assume2,H6,Assert,Assume1,H4,H2,Ensures3,H1,Ensures1,Assume,Ensures">
   <goal name="vc_insert_unique.35.0" expl="precondition" proved="true">
   <proof prover="1" timelimit="0.037067"><result status="valid" time="0.052825" steps="54329"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_insert_unique.36" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.028797" steps="12500"/></proof>
  </goal>
  <goal name="vc_insert_unique.37" expl="postcondition" proved="true">
  <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,uint64&#39;maxInt,uint64&#39;minInt,max_uint64,length1,radix,to_int,min_unsigned,in_bounds,singleton,cons,(++),id,mAX&#39;5,index_logic3,shallow_model6,produces,produces_trans,produces_refl,is_unique,deep_model2,deep_model1,resolve5,shallow_model1,completed,index_logic,into_iter_post,into_iter_pre,shallow_model,subset_push,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,to_int_in_bounds,extensionality,zero_unsigned_is_zero,(==)&#39;spec,(==)&#39;spec&#39;0,create&#39;spec&#39;0,empty&#39;def,set&#39;spec,set&#39;spec&#39;0,set&#39;spec&#39;1,([&lt;-])&#39;def,singleton&#39;spec,singleton&#39;spec&#39;0,cons&#39;spec,cons&#39;spec&#39;0,cons&#39;spec&#39;1,([..])&#39;spec,([..])&#39;spec&#39;0,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,(++)&#39;spec&#39;0,(++)&#39;spec&#39;1,new_spec,slice&#39;invariant,slice_ext,length&#39;def,get&#39;def,some_0&#39;def,inv_trivial15,inv_trivial14,inv_trivial13,inv_trivial12,inv_trivial11,inv_trivial10,inv_trivial9,inv_trivial7,inv_trivial6,inv_trivial5,inv_trivial4,shallow_model_spec1,to_ref_seq_spec,produces_trans_spec,produces_refl_spec,inv_trivial3,inv_trivial2,inv_trivial1,inv_trivial,shallow_model_spec,subset_push_spec">
   <goal name="vc_insert_unique.37.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.027065" steps="77990"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_insert_unique.38" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.056142" steps="1162"/></proof>
  </goal>
  <goal name="vc_insert_unique.39" expl="postcondition" proved="true">
  <transf name="remove" proved="true" arg1="abs,singleton,cons,snoc,(++),borrow_logic,get_id,usize&#39;maxInt,usize&#39;minInt,usize&#39;eq,min,max,to_int,in_bounds,slice&#39;eq,id2,max&#39;0,invariant&#39;8,produces_refl&#39;0,is_unique&#39;0,deep_model&#39;4,resolve&#39;5,into_iter_pre&#39;0,subset_push&#39;0,Abs_le,Abs_pos,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,set&#39;spec,set&#39;spec&#39;0,([&lt;-])&#39;def,singleton&#39;spec,singleton&#39;spec&#39;0,cons&#39;spec,cons&#39;spec&#39;0,cons&#39;spec&#39;1,snoc&#39;spec&#39;0,snoc&#39;spec&#39;1,([..])&#39;spec&#39;0,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,usize&#39;inj,to_int_in_bounds,extensionality,inner_spec,slice&#39;invariant,slice&#39;inj,spec,inv&#39;15,inv&#39;14,inv&#39;13,inv&#39;12,inv&#39;111,inv&#39;10,inv&#39;9,shallow_model&#39;3_spec,inv&#39;7,inv&#39;6,inv&#39;5,inv&#39;4,shallow_model&#39;5_spec,produces_refl&#39;0_spec,inv&#39;3,inv&#39;2,inv&#39;0,subset_push&#39;0_spec,Assert33,Assert32,Assert31,Assert30,Assert27,Assert17,Assert,Assert29,Assert28,Assert26,Assert24,Assert23,Assert21,Assert19,Assert18,Assert14,Assert13,Assert11,H6,H5,H4,H3,H2,H1,H,Assert10,Assert9,Assert8,Assert7,Assert6,Assert5,Assert3">
   <goal name="vc_insert_unique.39.0" expl="postcondition" proved="true">
   <proof prover="3" timelimit="5"><result status="valid" time="0.366286" steps="8925"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_insert_unique.40" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.156713" steps="3065"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hillel_Unique" proved="true">
 <goal name="vc_unique" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_unique.0" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.026806" steps="10662"/></proof>
  </goal>
  <goal name="vc_unique.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.021163" steps="10223"/></proof>
  </goal>
  <goal name="vc_unique.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.027885" steps="11266"/></proof>
  </goal>
  <goal name="vc_unique.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.021445" steps="10360"/></proof>
  </goal>
  <goal name="vc_unique.4" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.052329" steps="17177"/></proof>
  </goal>
  <goal name="vc_unique.5" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.054217" steps="17216"/></proof>
  </goal>
  <goal name="vc_unique.6" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.055399" steps="17600"/></proof>
  </goal>
  <goal name="vc_unique.7" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.040308" steps="15491"/></proof>
  </goal>
  <goal name="vc_unique.8" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.030114" steps="14196"/></proof>
  </goal>
  <goal name="vc_unique.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.040174" steps="15465"/></proof>
  </goal>
  <goal name="vc_unique.10" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.030820" steps="14569"/></proof>
  </goal>
  <goal name="vc_unique.11" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.058443" steps="19491"/></proof>
  </goal>
  <goal name="vc_unique.12" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.036394" steps="689"/></proof>
  </goal>
  <goal name="vc_unique.13" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.040998" steps="16116"/></proof>
  </goal>
  <goal name="vc_unique.14" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.040794" steps="16216"/></proof>
  </goal>
  <goal name="vc_unique.15" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.030885" steps="14759"/></proof>
  </goal>
  <goal name="vc_unique.16" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.031315" steps="14760"/></proof>
  </goal>
  <goal name="vc_unique.17" expl="index in bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.073440" steps="22998"/></proof>
  </goal>
  <goal name="vc_unique.18" proved="true">
  <proof prover="0"><result status="valid" time="0.039340" steps="16041"/></proof>
  </goal>
  <goal name="vc_unique.19" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.043226" steps="16490"/></proof>
  </goal>
  <goal name="vc_unique.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.032300" steps="15085"/></proof>
  </goal>
  <goal name="vc_unique.21" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.042595" steps="16513"/></proof>
  </goal>
  <goal name="vc_unique.22" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.044281" steps="17118"/></proof>
  </goal>
  <goal name="vc_unique.23" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.042980" steps="16870"/></proof>
  </goal>
  <goal name="vc_unique.24" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.042526" steps="16829"/></proof>
  </goal>
  <goal name="vc_unique.25" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_unique.25.0" expl="loop invariant" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="1.428413" steps="3131343"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_unique.26" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.257980" steps="5269"/></proof>
  </goal>
  <goal name="vc_unique.27" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.042501" steps="16879"/></proof>
  </goal>
  <goal name="vc_unique.28" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.073420" steps="22887"/></proof>
  </goal>
  <goal name="vc_unique.29" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.042401" steps="16784"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hillel_SumRange_Impl" proved="true">
 <goal name="vc_sum_range" proved="true">
 <proof prover="3"><result status="valid" time="0.010961" steps="12"/></proof>
 </goal>
</theory>
<theory name="Hillel_SumRangeSplit_Impl" proved="true">
 <goal name="vc_sum_range_split" proved="true">
 <proof prover="3"><result status="valid" time="0.016419" steps="134"/></proof>
 </goal>
</theory>
<theory name="Hillel_Score_Impl" proved="true">
 <goal name="vc_score" proved="true">
 <proof prover="0"><result status="valid" time="0.080000" steps="8076"/></proof>
 </goal>
</theory>
<theory name="Hillel_Fulcrum" proved="true">
 <goal name="vc_fulcrum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_fulcrum.0" expl="precondition" proved="true">
  <transf name="remove" proved="true" arg1="singleton,snoc">
   <goal name="vc_fulcrum.0.0" expl="precondition" proved="true">
   <proof prover="1" memlimit="2000"><result status="valid" time="0.019330" steps="69527"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_fulcrum.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.009193" steps="6"/></proof>
  </goal>
  <goal name="vc_fulcrum.2" expl="loop invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.493091" steps="1939288"/></proof>
  </goal>
  <goal name="vc_fulcrum.3" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.482850" steps="64626"/></proof>
  </goal>
  <goal name="vc_fulcrum.4" expl="loop invariant" proved="true">
  <proof prover="1" timelimit="1"><result status="valid" time="0.047097" steps="94492"/></proof>
  </goal>
  <goal name="vc_fulcrum.5" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.060296" steps="14309"/></proof>
  </goal>
  <goal name="vc_fulcrum.6" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.180477" steps="751019"/></proof>
  </goal>
  <goal name="vc_fulcrum.7" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.203116" steps="23464"/></proof>
  </goal>
  <goal name="vc_fulcrum.8" expl="loop invariant" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.453528" steps="80658"/></proof>
  </goal>
  <goal name="vc_fulcrum.9" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.020566" steps="1708"/></proof>
  </goal>
  <goal name="vc_fulcrum.10" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.013269" steps="66"/></proof>
  </goal>
  <goal name="vc_fulcrum.11" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.015370" steps="607"/></proof>
  </goal>
  <goal name="vc_fulcrum.12" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.021379" steps="46"/></proof>
  </goal>
  <goal name="vc_fulcrum.13" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.047140" steps="55"/></proof>
  </goal>
  <goal name="vc_fulcrum.14" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.057375" steps="38"/></proof>
  </goal>
  <goal name="vc_fulcrum.15" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.012927" steps="78"/></proof>
  </goal>
  <goal name="vc_fulcrum.16" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.051798" steps="16127"/></proof>
  </goal>
  <goal name="vc_fulcrum.17" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.009177" steps="63"/></proof>
  </goal>
  <goal name="vc_fulcrum.18" expl="loop invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.122688" steps="25052"/></proof>
  </goal>
  <goal name="vc_fulcrum.19" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.019303" steps="198"/></proof>
  </goal>
  <goal name="vc_fulcrum.20" expl="loop invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_fulcrum.20.0" expl="loop invariant" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_fulcrum.20.0.0" expl="loop invariant" proved="true">
    <proof prover="1" memlimit="2000"><result status="valid" time="0.023968" steps="112779"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_fulcrum.21" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.011925" steps="50"/></proof>
  </goal>
  <goal name="vc_fulcrum.22" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.011700" steps="93"/></proof>
  </goal>
  <goal name="vc_fulcrum.23" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.023401" steps="683"/></proof>
  </goal>
  <goal name="vc_fulcrum.24" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.063863" steps="18930"/></proof>
  </goal>
  <goal name="vc_fulcrum.25" expl="integer overflow" proved="true">
  <proof prover="3"><result status="valid" time="0.013023" steps="124"/></proof>
  </goal>
  <goal name="vc_fulcrum.26" expl="index in bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.392881" steps="6941"/></proof>
  </goal>
  <goal name="vc_fulcrum.27" proved="true">
  <proof prover="3"><result status="valid" time="0.015116" steps="161"/></proof>
  </goal>
  <goal name="vc_fulcrum.28" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.222541" steps="46319"/></proof>
  </goal>
  <goal name="vc_fulcrum.29" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.329194" steps="49256"/></proof>
  </goal>
  <goal name="vc_fulcrum.30" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.219728" steps="41977"/></proof>
  </goal>
  <goal name="vc_fulcrum.31" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="1.031241" steps="16924"/></proof>
  </goal>
  <goal name="vc_fulcrum.32" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.276216" steps="47371"/></proof>
  </goal>
  <goal name="vc_fulcrum.33" expl="loop invariant" proved="true">
  <proof prover="1" timelimit="1"><result status="valid" time="0.505694" steps="3380836"/></proof>
  </goal>
  <goal name="vc_fulcrum.34" expl="loop invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.101165" steps="24057"/></proof>
  </goal>
  <goal name="vc_fulcrum.35" expl="loop invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.020152" steps="202"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
