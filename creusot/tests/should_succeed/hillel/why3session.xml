<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.11.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="hillel.mlcfg"/>
<theory name="Hillel_RightPad" proved="true">
 <goal name="right_pad&#39;vc" expl="VC for right_pad" proved="true">
 <proof prover="4"><result status="valid" time="0.13" steps="869"/></proof>
 </goal>
</theory>
<theory name="Hillel_LeftPad" proved="true">
 <goal name="left_pad&#39;vc" expl="VC for left_pad" proved="true">
 <proof prover="4"><result status="valid" time="0.21" steps="5349"/></proof>
 </goal>
</theory>
<theory name="Hillel_SubsetPush_Impl" proved="true">
 <goal name="subset_push&#39;vc" expl="VC for subset_push" proved="true">
 <proof prover="4"><result status="valid" time="0.27" steps="8289"/></proof>
 </goal>
</theory>
<theory name="Hillel_InsertUnique" proved="true">
 <goal name="insert_unique&#39;vc" expl="VC for insert_unique" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert_unique&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.6" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="484"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.7" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.09" steps="868"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.8" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="661"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="71"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="76"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="232"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="515366"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="270913"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.53" steps="96118"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11" steps="22056"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hillel_Unique" proved="true">
 <goal name="unique&#39;vc" expl="VC for unique" proved="true">
 <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,uint64&#39;maxInt,uint64&#39;minInt,max_uint64,length1,radix,min_unsigned,in_bounds,singleton,cons,snoc,(++),mAX&#39;,index_logic,is_inhabited,resolve2,new,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,to_int_in_bounds,extensionality,zero_unsigned_is_zero,length_nonnegative,set&#39;spec,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,cons&#39;spec,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,new&#39;spec,slice&#39;invariant,shallow_model_spec,produces_trans_spec,produces_refl_spec,is_inhabited_spec">
  <goal name="unique&#39;vc.0" expl="VC for unique" proved="true">
  <proof prover="2" timelimit="0.06"><result status="valid" time="0.06" steps="362749"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hillel_SumRange_Impl" proved="true">
 <goal name="sum_range&#39;vc" expl="VC for sum_range" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="43"/></proof>
 </goal>
</theory>
<theory name="Hillel_SumRangeSplit_Impl" proved="true">
 <goal name="sum_range_split&#39;vc" expl="VC for sum_range_split" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="99"/></proof>
 </goal>
</theory>
<theory name="Hillel_Score_Impl" proved="true">
 <goal name="score&#39;vc" expl="VC for score" proved="true">
 <proof prover="0"><result status="valid" time="0.08" steps="9062"/></proof>
 </goal>
</theory>
<theory name="Hillel_Fulcrum" proved="true">
 <goal name="fulcrum&#39;vc" expl="VC for fulcrum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fulcrum&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="78"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="43"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.5" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="135"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="50"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="50"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="60"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="76"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="164"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="92"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="107"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="115"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="136"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="107"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="433"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.17" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="142"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.18" expl="index in bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.19" steps="28890"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.19" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="90"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.20" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.26" steps="44186"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="92"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="17908"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="560354"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.29" steps="37572"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.17" steps="30726"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="5"><result status="valid" time="0.06" steps="1178733"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.49" steps="53737"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.28" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.33" steps="59139"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="56"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="77"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.31" expl="loop invariant preservation" proved="true">
  <transf name="remove" proved="true" arg1="singleton,snoc">
   <goal name="fulcrum&#39;vc.31.0" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="0.42" steps="67271"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.20" steps="22418"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
