<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.15" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="hillel.mlcfg"/>
<theory name="Hillel_RightPad" proved="true">
 <goal name="right_pad&#39;vc" expl="VC for right_pad" proved="true">
 <proof prover="1"><result status="valid" time="0.18" steps="1429"/></proof>
 </goal>
</theory>
<theory name="Hillel_LeftPad" proved="true">
 <goal name="left_pad&#39;vc" expl="VC for left_pad" proved="true">
 <proof prover="1"><result status="valid" time="0.49" steps="3407"/></proof>
 </goal>
</theory>
<theory name="Hillel_SubsetPush_Impl" proved="true">
 <goal name="subset_push&#39;vc" expl="VC for subset_push" proved="true">
 <proof prover="1"><result status="valid" time="0.42" steps="8051"/></proof>
 </goal>
</theory>
<theory name="Hillel_InsertUnique" proved="true">
 <goal name="insert_unique&#39;vc" expl="VC for insert_unique" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert_unique&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="30"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="32"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="40"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.5" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="661"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="81"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.7" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="84"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.8" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="222"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.9" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="insert_unique&#39;vc.9.0" expl="assertion" proved="true">
   <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="1.00" steps="2159870"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_unique&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert_unique&#39;vc.10.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.19" steps="1771"/></proof>
   </goal>
   <goal name="insert_unique&#39;vc.10.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="92"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_unique&#39;vc.11" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert_unique&#39;vc.11.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.05" steps="169790"/></proof>
   </goal>
   <goal name="insert_unique&#39;vc.11.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.03" steps="282"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_unique&#39;vc.12" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert_unique&#39;vc.12.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.06" steps="799"/></proof>
   </goal>
   <goal name="insert_unique&#39;vc.12.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="96"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_unique&#39;vc.13" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert_unique&#39;vc.13.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.05" steps="347"/></proof>
   </goal>
   <goal name="insert_unique&#39;vc.13.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="98"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hillel_Unique" proved="true">
 <goal name="unique&#39;vc" expl="VC for unique" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unique&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="24"/></proof>
  </goal>
  <goal name="unique&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="43"/></proof>
  </goal>
  <goal name="unique&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="77"/></proof>
  </goal>
  <goal name="unique&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="80"/></proof>
  </goal>
  <goal name="unique&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="101"/></proof>
  </goal>
  <goal name="unique&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="40"/></proof>
  </goal>
  <goal name="unique&#39;vc.6" expl="assertion" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="255"/></proof>
  </goal>
  <goal name="unique&#39;vc.7" expl="assertion" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="471"/></proof>
  </goal>
  <goal name="unique&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="56"/></proof>
  </goal>
  <goal name="unique&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="57"/></proof>
  </goal>
  <goal name="unique&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="83"/></proof>
  </goal>
  <goal name="unique&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.01" steps="80"/></proof>
  </goal>
  <goal name="unique&#39;vc.12" expl="assertion" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.03" steps="543"/></proof>
  </goal>
  <goal name="unique&#39;vc.13" expl="precondition" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="101"/></proof>
  </goal>
  <goal name="unique&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="102"/></proof>
  </goal>
  <goal name="unique&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.02" steps="130"/></proof>
  </goal>
  <goal name="unique&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="0.01" steps="134"/></proof>
  </goal>
  <goal name="unique&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.30" steps="6412"/></proof>
  </goal>
  <goal name="unique&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.23" steps="1110378"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hillel_SumRange_Impl" proved="true">
 <goal name="sum_range&#39;vc" expl="VC for sum_range" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="43"/></proof>
 </goal>
</theory>
<theory name="Hillel_SumRangeSplit_Impl" proved="true">
 <goal name="sum_range_split&#39;vc" expl="VC for sum_range_split" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="99"/></proof>
 </goal>
</theory>
<theory name="Hillel_Score_Impl" proved="true">
 <goal name="score&#39;vc" expl="VC for score" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="75834"/></proof>
 </goal>
</theory>
<theory name="Hillel_Fulcrum" proved="true">
 <goal name="fulcrum&#39;vc" expl="VC for fulcrum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fulcrum&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="22"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="90"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="57"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="41"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.5" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="184"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="73"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="105"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="210"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="122"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="136"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="156"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="177"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="90"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="151"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="619"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.16" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="196"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.17" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="151"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.18" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.18.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.20" steps="2906"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.19" expl="integer overflow" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.19.0" expl="integer overflow" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="214571"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="101"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.21" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.21.0" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="359"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.22" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.22.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.23" steps="800235"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="359230"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.24" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.24.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="fulcrum&#39;vc.24.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="1"><result status="valid" time="0.12" steps="1388"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="fulcrum&#39;vc.24.1" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="fulcrum&#39;vc.24.1.0" expl="loop invariant preservation" proved="true">
    <proof prover="1"><result status="valid" time="0.03" steps="449"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.25" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.25.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.27" steps="914718"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.26" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.26.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.19" steps="757321"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.27" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="206178"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="58"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="99"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="318464"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="247652"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
