
module SpecTests_T_Type
  type spectests_t_type  =
    | SpecTests_T_A_Type
    | SpecTests_T_B_Type
    
end
module SpecTests_S_Type
  type spectests_s_type 'a 'b =
    | SpecTests_S_Type 'a 'b
    
end
module SpecTests_TestSpecs_Interface
  use mach.int.Int
  use mach.int.UInt32
  use SpecTests_S_Type
  use SpecTests_T_Type
  val test_specs [@cfg:stackify] (_ : ()) : ()
    ensures { [#"../spec_tests.rs" 16 10 16 22] SpecTests_T_Type.SpecTests_T_A_Type = SpecTests_T_Type.SpecTests_T_B_Type }
    ensures { [#"../spec_tests.rs" 17 10 17 41] SpecTests_S_Type.SpecTests_S_Type (0 : uint32) true = SpecTests_S_Type.SpecTests_S_Type (1 : uint32) false }
    
end
module SpecTests_TestSpecs
  use mach.int.Int
  use mach.int.UInt32
  use SpecTests_S_Type
  use SpecTests_T_Type
  let rec cfg test_specs [@cfg:stackify] [#"../spec_tests.rs" 18 0 18 19] (_ : ()) : ()
    ensures { [#"../spec_tests.rs" 16 10 16 22] SpecTests_T_Type.SpecTests_T_A_Type = SpecTests_T_Type.SpecTests_T_B_Type }
    ensures { [#"../spec_tests.rs" 17 10 17 41] SpecTests_S_Type.SpecTests_S_Type (0 : uint32) true = SpecTests_S_Type.SpecTests_S_Type (1 : uint32) false }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  {
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
