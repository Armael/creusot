
module Core_Option_Option_Type
  type t_option 't =
    | C_None
    | C_Some 't
    
end
module Core_Option_Impl0_IsSome_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val is_some [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) : bool
    ensures { result = (self <> Core_Option_Option_Type.C_None) }
    
end
module Core_Option_Impl0_IsSome
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val is_some [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) : bool
    ensures { result = (self <> Core_Option_Option_Type.C_None) }
    
end
module Core_Option_Impl0_IsNone_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val is_none [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) : bool
    ensures { result = (self = Core_Option_Option_Type.C_None) }
    
end
module Core_Option_Impl0_IsNone
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val is_none [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) : bool
    ensures { result = (self = Core_Option_Option_Type.C_None) }
    
end
module Core_Option_Impl0_Unwrap_Interface
  type t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val unwrap [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) : t
    requires {self <> Core_Option_Option_Type.C_None}
    ensures { Core_Option_Option_Type.C_Some result = self }
    
end
module Core_Option_Impl0_Unwrap
  type t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val unwrap [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) : t
    requires {self <> Core_Option_Option_Type.C_None}
    ensures { Core_Option_Option_Type.C_Some result = self }
    
end
module Core_Option_Impl0_Expect_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val expect [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) (msg : string) : t
    requires {self <> Core_Option_Option_Type.C_None}
    ensures { Core_Option_Option_Type.C_Some result = self }
    
end
module Core_Option_Impl0_Expect
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val expect [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) (msg : string) : t
    requires {self <> Core_Option_Option_Type.C_None}
    ensures { Core_Option_Option_Type.C_Some result = self }
    
end
module Core_Option_Impl0_UnwrapOr_Interface
  type t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val unwrap_or [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) (default : t) : t
    ensures { self = Core_Option_Option_Type.C_None -> result = default }
    ensures { self = Core_Option_Option_Type.C_None \/ self = Core_Option_Option_Type.C_Some result }
    
end
module Core_Option_Impl0_UnwrapOr
  type t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val unwrap_or [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) (default : t) : t
    ensures { self = Core_Option_Option_Type.C_None -> result = default }
    ensures { self = Core_Option_Option_Type.C_None \/ self = Core_Option_Option_Type.C_Some result }
    
end
module Core_Option_Impl0_AsMut_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val as_mut [@cfg:stackify] (self : borrowed (Core_Option_Option_Type.t_option t)) : Core_Option_Option_Type.t_option (borrowed t)
    ensures {  * self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None /\  ^ self = Core_Option_Option_Type.C_None }
    ensures {  * self = Core_Option_Option_Type.C_None \/ (exists r : borrowed t . result = Core_Option_Option_Type.C_Some r /\  * self = Core_Option_Option_Type.C_Some ( * r) /\  ^ self = Core_Option_Option_Type.C_Some ( ^ r)) }
    
end
module Core_Option_Impl0_AsMut
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val as_mut [@cfg:stackify] (self : borrowed (Core_Option_Option_Type.t_option t)) : Core_Option_Option_Type.t_option (borrowed t)
    ensures {  * self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None /\  ^ self = Core_Option_Option_Type.C_None }
    ensures {  * self = Core_Option_Option_Type.C_None \/ (exists r : borrowed t . result = Core_Option_Option_Type.C_Some r /\  * self = Core_Option_Option_Type.C_Some ( * r) /\  ^ self = Core_Option_Option_Type.C_Some ( ^ r)) }
    
end
module CreusotContracts_Logic_Resolve_Impl1_Resolve_Interface
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t)
end
module CreusotContracts_Logic_Resolve_Impl1_Resolve
  type t
  use prelude.Borrow
  predicate resolve (self : borrowed t) =
     ^ self =  * self
  val resolve (self : borrowed t) : bool
    ensures { result = resolve self }
    
end
module Core_Option_Impl0_AsRef_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val as_ref [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option t
    ensures { self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { self = Core_Option_Option_Type.C_None \/ (exists r : t . result = Core_Option_Option_Type.C_Some r /\ self = Core_Option_Option_Type.C_Some r) }
    
end
module Core_Option_Impl0_AsRef
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val as_ref [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option t
    ensures { self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { self = Core_Option_Option_Type.C_None \/ (exists r : t . result = Core_Option_Option_Type.C_Some r /\ self = Core_Option_Option_Type.C_Some r) }
    
end
module Core_Option_Impl0_And_Interface
  type t
  type u
  use Core_Option_Option_Type as Core_Option_Option_Type
  val and [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) (optb : Core_Option_Option_Type.t_option u) : Core_Option_Option_Type.t_option u
    ensures { self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { self = Core_Option_Option_Type.C_None \/ result = optb }
    
end
module Core_Option_Impl0_And
  type t
  type u
  use Core_Option_Option_Type as Core_Option_Option_Type
  val and [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) (optb : Core_Option_Option_Type.t_option u) : Core_Option_Option_Type.t_option u
    ensures { self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { self = Core_Option_Option_Type.C_None \/ result = optb }
    
end
module Core_Option_Impl0_Or_Interface
  type t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val or [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) (optb : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option t
    ensures { self = Core_Option_Option_Type.C_None -> result = optb }
    ensures { self = Core_Option_Option_Type.C_None \/ result = self }
    
end
module Core_Option_Impl0_Or
  type t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val or [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) (optb : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option t
    ensures { self = Core_Option_Option_Type.C_None -> result = optb }
    ensures { self = Core_Option_Option_Type.C_None \/ result = self }
    
end
module Core_Option_Impl0_Take_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val take [@cfg:stackify] (self : borrowed (Core_Option_Option_Type.t_option t)) : Core_Option_Option_Type.t_option t
    ensures { result =  * self /\  ^ self = Core_Option_Option_Type.C_None }
    
end
module Core_Option_Impl0_Take
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val take [@cfg:stackify] (self : borrowed (Core_Option_Option_Type.t_option t)) : Core_Option_Option_Type.t_option t
    ensures { result =  * self /\  ^ self = Core_Option_Option_Type.C_None }
    
end
module Core_Option_Impl0_Replace_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val replace [@cfg:stackify] (self : borrowed (Core_Option_Option_Type.t_option t)) (value : t) : Core_Option_Option_Type.t_option t
    ensures { result =  * self /\  ^ self = Core_Option_Option_Type.C_Some value }
    
end
module Core_Option_Impl0_Replace
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val replace [@cfg:stackify] (self : borrowed (Core_Option_Option_Type.t_option t)) (value : t) : Core_Option_Option_Type.t_option t
    ensures { result =  * self /\  ^ self = Core_Option_Option_Type.C_Some value }
    
end
module CreusotContracts_Std1_Default_DefaultSpec_DefaultLog_Interface
  type self
  function default_log (_ : ()) : self
end
module CreusotContracts_Std1_Default_DefaultSpec_DefaultLog
  type self
  function default_log (_ : ()) : self
  val default_log (_wild0 : ()) : self
    ensures { result = default_log _wild0 }
    
end
module Core_Option_Impl0_UnwrapOrDefault_Interface
  type t
  clone CreusotContracts_Std1_Default_DefaultSpec_DefaultLog_Interface as DefaultLog0 with type self = t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val unwrap_or_default [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) : t
    ensures { self = Core_Option_Option_Type.C_None -> result = DefaultLog0.default_log () }
    ensures { self = Core_Option_Option_Type.C_None \/ self = Core_Option_Option_Type.C_Some result }
    
end
module Core_Option_Impl0_UnwrapOrDefault
  type t
  clone CreusotContracts_Std1_Default_DefaultSpec_DefaultLog_Interface as DefaultLog0 with type self = t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val unwrap_or_default [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) : t
    ensures { self = Core_Option_Option_Type.C_None -> result = DefaultLog0.default_log () }
    ensures { self = Core_Option_Option_Type.C_None \/ self = Core_Option_Option_Type.C_Some result }
    
end
module Core_Option_Impl2_Copied_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val copied [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option t
    ensures { self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { self = Core_Option_Option_Type.C_None \/ (exists t : t . self = Core_Option_Option_Type.C_Some t /\ result = Core_Option_Option_Type.C_Some t) }
    
end
module Core_Option_Impl2_Copied
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val copied [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option t
    ensures { self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { self = Core_Option_Option_Type.C_None \/ (exists t : t . self = Core_Option_Option_Type.C_Some t /\ result = Core_Option_Option_Type.C_Some t) }
    
end
module Core_Option_Impl3_Copied_Interface
  type t
  use prelude.Borrow
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve_Interface as Resolve0 with type t = t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val copied [@cfg:stackify] (self : Core_Option_Option_Type.t_option (borrowed t)) : Core_Option_Option_Type.t_option t
    ensures { self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { self = Core_Option_Option_Type.C_None \/ (exists t : borrowed t . self = Core_Option_Option_Type.C_Some t /\ result = Core_Option_Option_Type.C_Some ( * t) /\ Resolve0.resolve t) }
    
end
module Core_Option_Impl3_Copied
  type t
  use prelude.Borrow
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve_Interface as Resolve0 with type t = t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val copied [@cfg:stackify] (self : Core_Option_Option_Type.t_option (borrowed t)) : Core_Option_Option_Type.t_option t
    ensures { self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { self = Core_Option_Option_Type.C_None \/ (exists t : borrowed t . self = Core_Option_Option_Type.C_Some t /\ result = Core_Option_Option_Type.C_Some ( * t) /\ Resolve0.resolve t) }
    
end
module Core_Option_Impl2_Cloned_Interface
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val cloned [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option t
    ensures { self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { self = Core_Option_Option_Type.C_None \/ (exists t : t . self = Core_Option_Option_Type.C_Some t /\ result = Core_Option_Option_Type.C_Some t) }
    
end
module Core_Option_Impl2_Cloned
  type t
  use prelude.Borrow
  use Core_Option_Option_Type as Core_Option_Option_Type
  val cloned [@cfg:stackify] (self : Core_Option_Option_Type.t_option t) : Core_Option_Option_Type.t_option t
    ensures { self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { self = Core_Option_Option_Type.C_None \/ (exists t : t . self = Core_Option_Option_Type.C_Some t /\ result = Core_Option_Option_Type.C_Some t) }
    
end
module Core_Option_Impl3_Cloned_Interface
  type t
  use prelude.Borrow
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve_Interface as Resolve0 with type t = t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val cloned [@cfg:stackify] (self : Core_Option_Option_Type.t_option (borrowed t)) : Core_Option_Option_Type.t_option t
    ensures { self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { self = Core_Option_Option_Type.C_None \/ (exists t : borrowed t . self = Core_Option_Option_Type.C_Some t /\ result = Core_Option_Option_Type.C_Some ( * t) /\ Resolve0.resolve t) }
    
end
module Core_Option_Impl3_Cloned
  type t
  use prelude.Borrow
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve_Interface as Resolve0 with type t = t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val cloned [@cfg:stackify] (self : Core_Option_Option_Type.t_option (borrowed t)) : Core_Option_Option_Type.t_option t
    ensures { self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { self = Core_Option_Option_Type.C_None \/ (exists t : borrowed t . self = Core_Option_Option_Type.C_Some t /\ result = Core_Option_Option_Type.C_Some ( * t) /\ Resolve0.resolve t) }
    
end
module Core_Option_Impl39_Flatten_Interface
  type t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val flatten [@cfg:stackify] (self : Core_Option_Option_Type.t_option (Core_Option_Option_Type.t_option t)) : Core_Option_Option_Type.t_option t
    ensures { self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { self = Core_Option_Option_Type.C_None \/ self = Core_Option_Option_Type.C_Some result }
    
end
module Core_Option_Impl39_Flatten
  type t
  use Core_Option_Option_Type as Core_Option_Option_Type
  val flatten [@cfg:stackify] (self : Core_Option_Option_Type.t_option (Core_Option_Option_Type.t_option t)) : Core_Option_Option_Type.t_option t
    ensures { self = Core_Option_Option_Type.C_None -> result = Core_Option_Option_Type.C_None }
    ensures { self = Core_Option_Option_Type.C_None \/ self = Core_Option_Option_Type.C_Some result }
    
end
module CreusotContracts_Logic_Resolve_Impl1
  type t
end
module CreusotContracts_Std1_Default_Impl9_DefaultLog_Interface
  use mach.int.Int
  use mach.int.Int32
  function default_log (_ : ()) : int32
end
module CreusotContracts_Std1_Default_Impl9_DefaultLog
  use mach.int.Int
  use mach.int.Int32
  function default_log (_ : ()) : int32 =
    (0 : int32)
  val default_log (_wild0 : ()) : int32
    ensures { result = default_log _wild0 }
    
end
module CreusotContracts_Std1_Default_Impl9
  
end
module Option_TestOption_Interface
  val test_option [@cfg:stackify] (_ : ()) : ()
end
module Option_TestOption
  use mach.int.Int
  use mach.int.Int32
  use prelude.Borrow
  clone CreusotContracts_Std1_Default_Impl9_DefaultLog as DefaultLog0
  use Core_Option_Option_Type as Core_Option_Option_Type
  clone Core_Option_Impl39_Flatten_Interface as Flatten0 with type t = int32
  clone CreusotContracts_Logic_Resolve_Impl1_Resolve as Resolve0 with type t = int32
  clone Core_Option_Impl3_Cloned_Interface as Cloned1 with type t = int32, predicate Resolve0.resolve = Resolve0.resolve
  clone Core_Option_Impl2_Cloned_Interface as Cloned0 with type t = int32
  clone Core_Option_Impl3_Copied_Interface as Copied1 with type t = int32, predicate Resolve0.resolve = Resolve0.resolve
  clone Core_Option_Impl2_Copied_Interface as Copied0 with type t = int32
  clone Core_Option_Impl0_UnwrapOrDefault_Interface as UnwrapOrDefault0 with type t = int32,
  function DefaultLog0.default_log = DefaultLog0.default_log
  clone Core_Option_Impl0_Replace_Interface as Replace0 with type t = int32
  clone Core_Option_Impl0_Take_Interface as Take0 with type t = int32
  clone Core_Option_Impl0_Or_Interface as Or0 with type t = int32
  clone Core_Option_Impl0_And_Interface as And0 with type t = int32, type u = int32
  clone Core_Option_Impl0_Unwrap_Interface as Unwrap2 with type t = int32
  clone Core_Option_Impl0_IsNone_Interface as IsNone2 with type t = int32
  clone Core_Option_Impl0_AsRef_Interface as AsRef0 with type t = int32
  clone Core_Option_Impl0_Unwrap_Interface as Unwrap1 with type t = borrowed int32
  clone Core_Option_Impl0_IsNone_Interface as IsNone1 with type t = borrowed int32
  clone Core_Option_Impl0_AsMut_Interface as AsMut0 with type t = int32
  clone Core_Option_Impl0_UnwrapOr_Interface as UnwrapOr0 with type t = int32
  clone Core_Option_Impl0_Expect_Interface as Expect0 with type t = int32
  clone Core_Option_Impl0_Unwrap_Interface as Unwrap0 with type t = int32
  clone Core_Option_Impl0_IsNone_Interface as IsNone0 with type t = int32
  clone Core_Option_Impl0_IsSome_Interface as IsSome0 with type t = int32
  let rec cfg test_option [@cfg:stackify] [#"../option.rs" 3 0 3 20] (_ : ()) : () = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var none_1 : Core_Option_Option_Type.t_option int32;
  var some_2 : Core_Option_Option_Type.t_option int32;
  var _3 : ();
  var _4 : bool;
  var _5 : bool;
  var _6 : bool;
  var _7 : Core_Option_Option_Type.t_option int32;
  var _8 : bool;
  var _9 : bool;
  var _10 : Core_Option_Option_Type.t_option int32;
  var _11 : ();
  var _12 : ();
  var _13 : bool;
  var _14 : bool;
  var _15 : bool;
  var _16 : Core_Option_Option_Type.t_option int32;
  var _17 : bool;
  var _18 : bool;
  var _19 : Core_Option_Option_Type.t_option int32;
  var _20 : ();
  var _21 : ();
  var _22 : bool;
  var _23 : bool;
  var _24 : int32;
  var _25 : Core_Option_Option_Type.t_option int32;
  var _26 : ();
  var _27 : ();
  var _28 : bool;
  var _29 : bool;
  var _30 : int32;
  var _31 : Core_Option_Option_Type.t_option int32;
  var _32 : string;
  var _33 : string;
  var _34 : ();
  var _35 : ();
  var _36 : bool;
  var _37 : bool;
  var _38 : int32;
  var _39 : Core_Option_Option_Type.t_option int32;
  var _40 : ();
  var _41 : ();
  var _42 : bool;
  var _43 : bool;
  var _44 : int32;
  var _45 : Core_Option_Option_Type.t_option int32;
  var _46 : ();
  var _47 : ();
  var _48 : bool;
  var _49 : bool;
  var _50 : Core_Option_Option_Type.t_option (borrowed int32);
  var _51 : Core_Option_Option_Type.t_option (borrowed int32);
  var _52 : borrowed (Core_Option_Option_Type.t_option int32);
  var _53 : ();
  var _54 : borrowed int32;
  var _55 : Core_Option_Option_Type.t_option (borrowed int32);
  var _56 : borrowed (Core_Option_Option_Type.t_option int32);
  var _57 : ();
  var _58 : bool;
  var _59 : bool;
  var _60 : int32;
  var _61 : Core_Option_Option_Type.t_option int32;
  var _62 : ();
  var _63 : borrowed int32;
  var _64 : Core_Option_Option_Type.t_option (borrowed int32);
  var _65 : borrowed (Core_Option_Option_Type.t_option int32);
  var _66 : ();
  var _67 : bool;
  var _68 : bool;
  var _69 : int32;
  var _70 : Core_Option_Option_Type.t_option int32;
  var _71 : ();
  var _72 : ();
  var _73 : bool;
  var _74 : bool;
  var _75 : Core_Option_Option_Type.t_option int32;
  var _76 : Core_Option_Option_Type.t_option int32;
  var _77 : Core_Option_Option_Type.t_option int32;
  var _78 : ();
  var _79 : ();
  var _80 : bool;
  var _81 : bool;
  var _82 : int32;
  var _83 : int32;
  var _84 : Core_Option_Option_Type.t_option int32;
  var _85 : Core_Option_Option_Type.t_option int32;
  var _86 : ();
  var _87 : ();
  var _88 : bool;
  var _89 : bool;
  var _90 : Core_Option_Option_Type.t_option int32;
  var _91 : Core_Option_Option_Type.t_option int32;
  var _92 : Core_Option_Option_Type.t_option int32;
  var _93 : Core_Option_Option_Type.t_option int32;
  var _94 : ();
  var _95 : ();
  var _96 : bool;
  var _97 : bool;
  var _98 : Core_Option_Option_Type.t_option int32;
  var _99 : Core_Option_Option_Type.t_option int32;
  var _100 : Core_Option_Option_Type.t_option int32;
  var _101 : Core_Option_Option_Type.t_option int32;
  var _102 : ();
  var _103 : ();
  var _104 : bool;
  var _105 : bool;
  var _106 : Core_Option_Option_Type.t_option int32;
  var _107 : Core_Option_Option_Type.t_option int32;
  var _108 : Core_Option_Option_Type.t_option int32;
  var _109 : Core_Option_Option_Type.t_option int32;
  var _110 : ();
  var _111 : ();
  var _112 : bool;
  var _113 : bool;
  var _114 : int32;
  var _115 : Core_Option_Option_Type.t_option int32;
  var _116 : Core_Option_Option_Type.t_option int32;
  var _117 : Core_Option_Option_Type.t_option int32;
  var _118 : ();
  var _119 : ();
  var _120 : bool;
  var _121 : bool;
  var _122 : Core_Option_Option_Type.t_option int32;
  var _123 : Core_Option_Option_Type.t_option int32;
  var _124 : Core_Option_Option_Type.t_option int32;
  var _125 : Core_Option_Option_Type.t_option int32;
  var _126 : ();
  var _127 : ();
  var _128 : bool;
  var _129 : bool;
  var _130 : int32;
  var _131 : Core_Option_Option_Type.t_option int32;
  var _132 : Core_Option_Option_Type.t_option int32;
  var _133 : Core_Option_Option_Type.t_option int32;
  var _134 : ();
  var _135 : ();
  var _136 : bool;
  var _137 : bool;
  var _138 : int32;
  var _139 : Core_Option_Option_Type.t_option int32;
  var _140 : Core_Option_Option_Type.t_option int32;
  var _141 : Core_Option_Option_Type.t_option int32;
  var _142 : ();
  var _143 : ();
  var _144 : bool;
  var _145 : bool;
  var _146 : int32;
  var _147 : Core_Option_Option_Type.t_option int32;
  var _148 : Core_Option_Option_Type.t_option int32;
  var _149 : Core_Option_Option_Type.t_option int32;
  var _150 : ();
  var _151 : ();
  var _152 : bool;
  var _153 : bool;
  var _154 : Core_Option_Option_Type.t_option int32;
  var _155 : Core_Option_Option_Type.t_option int32;
  var _156 : borrowed (Core_Option_Option_Type.t_option int32);
  var _157 : ();
  var _158 : ();
  var _159 : bool;
  var _160 : bool;
  var _161 : Core_Option_Option_Type.t_option int32;
  var _162 : ();
  var _163 : ();
  var _164 : bool;
  var _165 : bool;
  var _166 : int32;
  var _167 : Core_Option_Option_Type.t_option int32;
  var _168 : borrowed (Core_Option_Option_Type.t_option int32);
  var _169 : ();
  var _170 : ();
  var _171 : bool;
  var _172 : bool;
  var _173 : Core_Option_Option_Type.t_option int32;
  var _174 : ();
  var _175 : Core_Option_Option_Type.t_option int32;
  var _176 : ();
  var _177 : bool;
  var _178 : bool;
  var _179 : Core_Option_Option_Type.t_option int32;
  var _180 : Core_Option_Option_Type.t_option int32;
  var _181 : borrowed (Core_Option_Option_Type.t_option int32);
  var _182 : ();
  var _183 : ();
  var _184 : bool;
  var _185 : bool;
  var _186 : int32;
  var _187 : Core_Option_Option_Type.t_option int32;
  var _188 : ();
  var _189 : Core_Option_Option_Type.t_option int32;
  var _190 : ();
  var _191 : bool;
  var _192 : bool;
  var _193 : int32;
  var _194 : Core_Option_Option_Type.t_option int32;
  var _195 : borrowed (Core_Option_Option_Type.t_option int32);
  var _196 : ();
  var _197 : ();
  var _198 : bool;
  var _199 : bool;
  var _200 : int32;
  var _201 : Core_Option_Option_Type.t_option int32;
  var _202 : ();
  var _203 : ();
  var _204 : bool;
  var _205 : bool;
  var _206 : int32;
  var _207 : Core_Option_Option_Type.t_option int32;
  var _208 : borrowed (Core_Option_Option_Type.t_option int32);
  var _209 : ();
  var _210 : ();
  var _211 : bool;
  var _212 : bool;
  var _213 : int32;
  var _214 : Core_Option_Option_Type.t_option int32;
  var _215 : ();
  var _216 : ();
  var _217 : bool;
  var _218 : bool;
  var _219 : int32;
  var _220 : Core_Option_Option_Type.t_option int32;
  var _221 : ();
  var _222 : ();
  var _223 : bool;
  var _224 : bool;
  var _225 : int32;
  var _226 : Core_Option_Option_Type.t_option int32;
  var _227 : ();
  var _228 : ();
  var _229 : bool;
  var _230 : bool;
  var _231 : Core_Option_Option_Type.t_option int32;
  var _232 : Core_Option_Option_Type.t_option int32;
  var _233 : Core_Option_Option_Type.t_option int32;
  var _234 : Core_Option_Option_Type.t_option int32;
  var _235 : ();
  var _236 : ();
  var _237 : bool;
  var _238 : bool;
  var _239 : int32;
  var _240 : Core_Option_Option_Type.t_option int32;
  var _241 : Core_Option_Option_Type.t_option int32;
  var _242 : Core_Option_Option_Type.t_option int32;
  var _243 : ();
  var _244 : ();
  var _245 : bool;
  var _246 : bool;
  var _247 : Core_Option_Option_Type.t_option int32;
  var _248 : Core_Option_Option_Type.t_option int32;
  var _249 : Core_Option_Option_Type.t_option (borrowed int32);
  var _250 : borrowed (Core_Option_Option_Type.t_option int32);
  var _251 : ();
  var _252 : ();
  var _253 : bool;
  var _254 : bool;
  var _255 : int32;
  var _256 : Core_Option_Option_Type.t_option int32;
  var _257 : Core_Option_Option_Type.t_option (borrowed int32);
  var _258 : borrowed (Core_Option_Option_Type.t_option int32);
  var _259 : ();
  var _260 : ();
  var _261 : bool;
  var _262 : bool;
  var _263 : Core_Option_Option_Type.t_option int32;
  var _264 : Core_Option_Option_Type.t_option int32;
  var _265 : Core_Option_Option_Type.t_option int32;
  var _266 : Core_Option_Option_Type.t_option int32;
  var _267 : ();
  var _268 : ();
  var _269 : bool;
  var _270 : bool;
  var _271 : int32;
  var _272 : Core_Option_Option_Type.t_option int32;
  var _273 : Core_Option_Option_Type.t_option int32;
  var _274 : Core_Option_Option_Type.t_option int32;
  var _275 : ();
  var _276 : ();
  var _277 : bool;
  var _278 : bool;
  var _279 : Core_Option_Option_Type.t_option int32;
  var _280 : Core_Option_Option_Type.t_option int32;
  var _281 : Core_Option_Option_Type.t_option (borrowed int32);
  var _282 : borrowed (Core_Option_Option_Type.t_option int32);
  var _283 : ();
  var _284 : ();
  var _285 : bool;
  var _286 : bool;
  var _287 : int32;
  var _288 : Core_Option_Option_Type.t_option int32;
  var _289 : Core_Option_Option_Type.t_option (borrowed int32);
  var _290 : borrowed (Core_Option_Option_Type.t_option int32);
  var _291 : ();
  var opt_292 : Core_Option_Option_Type.t_option (Core_Option_Option_Type.t_option int32);
  var _293 : ();
  var _294 : bool;
  var _295 : bool;
  var _296 : Core_Option_Option_Type.t_option int32;
  var _297 : Core_Option_Option_Type.t_option int32;
  var _298 : Core_Option_Option_Type.t_option (Core_Option_Option_Type.t_option int32);
  var _299 : ();
  var opt_300 : Core_Option_Option_Type.t_option (Core_Option_Option_Type.t_option int32);
  var _301 : Core_Option_Option_Type.t_option int32;
  var _302 : ();
  var _303 : bool;
  var _304 : bool;
  var _305 : Core_Option_Option_Type.t_option int32;
  var _306 : Core_Option_Option_Type.t_option int32;
  var _307 : Core_Option_Option_Type.t_option (Core_Option_Option_Type.t_option int32);
  var _308 : ();
  var opt_309 : Core_Option_Option_Type.t_option (Core_Option_Option_Type.t_option int32);
  var _310 : Core_Option_Option_Type.t_option int32;
  var _311 : ();
  var _312 : bool;
  var _313 : bool;
  var _314 : int32;
  var _315 : Core_Option_Option_Type.t_option int32;
  var _316 : Core_Option_Option_Type.t_option (Core_Option_Option_Type.t_option int32);
  var _317 : ();
  {
    goto BB0
  }
  BB0 {
    none_1 <- Core_Option_Option_Type.C_None;
    some_2 <- Core_Option_Option_Type.C_Some (1 : int32);
    _7 <- some_2;
    _6 <- ([#"../option.rs" 8 12 8 26] IsSome0.is_some _7);
    goto BB4
  }
  BB1 {
    _5 <- false;
    goto BB3
  }
  BB2 {
    _10 <- none_1;
    _9 <- ([#"../option.rs" 8 31 8 45] IsSome0.is_some _10);
    goto BB5
  }
  BB3 {
    _4 <- not _5;
    switch (_4)
      | False -> goto BB7
      | True -> goto BB6
      end
  }
  BB4 {
    switch (_6)
      | False -> goto BB1
      | True -> goto BB2
      end
  }
  BB5 {
    _8 <- not _9;
    _5 <- _8;
    _8 <- any bool;
    goto BB3
  }
  BB6 {
    absurd
  }
  BB7 {
    _3 <- ();
    _16 <- none_1;
    _15 <- ([#"../option.rs" 10 12 10 26] IsNone0.is_none _16);
    goto BB11
  }
  BB8 {
    _14 <- false;
    goto BB10
  }
  BB9 {
    _19 <- some_2;
    _18 <- ([#"../option.rs" 10 31 10 45] IsNone0.is_none _19);
    goto BB12
  }
  BB10 {
    _13 <- not _14;
    switch (_13)
      | False -> goto BB14
      | True -> goto BB13
      end
  }
  BB11 {
    switch (_15)
      | False -> goto BB8
      | True -> goto BB9
      end
  }
  BB12 {
    _17 <- not _18;
    _14 <- _17;
    _17 <- any bool;
    goto BB10
  }
  BB13 {
    absurd
  }
  BB14 {
    _12 <- ();
    _25 <- some_2;
    _24 <- ([#"../option.rs" 13 12 13 25] Unwrap0.unwrap _25);
    goto BB15
  }
  BB15 {
    _23 <- ([#"../option.rs" 13 12 13 30] _24 = (1 : int32));
    _22 <- not _23;
    switch (_22)
      | False -> goto BB17
      | True -> goto BB16
      end
  }
  BB16 {
    absurd
  }
  BB17 {
    _21 <- ();
    _31 <- some_2;
    _33 <- "failed";
    _32 <- _33;
    _30 <- ([#"../option.rs" 15 12 15 33] Expect0.expect _31 _32);
    goto BB18
  }
  BB18 {
    _29 <- ([#"../option.rs" 15 12 15 38] _30 = (1 : int32));
    _28 <- not _29;
    switch (_28)
      | False -> goto BB20
      | True -> goto BB19
      end
  }
  BB19 {
    absurd
  }
  BB20 {
    _27 <- ();
    _39 <- some_2;
    _38 <- ([#"../option.rs" 18 12 18 29] UnwrapOr0.unwrap_or _39 (2 : int32));
    goto BB21
  }
  BB21 {
    _37 <- ([#"../option.rs" 18 12 18 34] _38 = (1 : int32));
    _36 <- not _37;
    switch (_36)
      | False -> goto BB23
      | True -> goto BB22
      end
  }
  BB22 {
    absurd
  }
  BB23 {
    _35 <- ();
    _45 <- none_1;
    _44 <- ([#"../option.rs" 19 12 19 29] UnwrapOr0.unwrap_or _45 (2 : int32));
    goto BB24
  }
  BB24 {
    _43 <- ([#"../option.rs" 19 12 19 34] _44 = (2 : int32));
    _42 <- not _43;
    switch (_42)
      | False -> goto BB26
      | True -> goto BB25
      end
  }
  BB25 {
    absurd
  }
  BB26 {
    _41 <- ();
    _52 <- borrow_mut none_1;
    none_1 <-  ^ _52;
    _51 <- ([#"../option.rs" 22 12 22 25] AsMut0.as_mut _52);
    goto BB27
  }
  BB27 {
    _50 <- _51;
    _49 <- ([#"../option.rs" 22 12 22 35] IsNone1.is_none _50);
    goto BB28
  }
  BB28 {
    _48 <- not _49;
    switch (_48)
      | False -> goto BB30
      | True -> goto BB29
      end
  }
  BB29 {
    absurd
  }
  BB30 {
    _47 <- ();
    _56 <- borrow_mut some_2;
    some_2 <-  ^ _56;
    _55 <- ([#"../option.rs" 23 5 23 18] AsMut0.as_mut _56);
    goto BB31
  }
  BB31 {
    _54 <- ([#"../option.rs" 23 5 23 27] Unwrap1.unwrap _55);
    goto BB32
  }
  BB32 {
    _54 <- { _54 with current = (2 : int32) };
    assume { Resolve0.resolve _54 };
    _61 <- some_2;
    _60 <- ([#"../option.rs" 24 12 24 25] Unwrap0.unwrap _61);
    goto BB33
  }
  BB33 {
    _59 <- ([#"../option.rs" 24 12 24 30] _60 = (2 : int32));
    _58 <- not _59;
    switch (_58)
      | False -> goto BB35
      | True -> goto BB34
      end
  }
  BB34 {
    absurd
  }
  BB35 {
    _57 <- ();
    _65 <- borrow_mut some_2;
    some_2 <-  ^ _65;
    _64 <- ([#"../option.rs" 25 5 25 18] AsMut0.as_mut _65);
    goto BB36
  }
  BB36 {
    _63 <- ([#"../option.rs" 25 5 25 27] Unwrap1.unwrap _64);
    goto BB37
  }
  BB37 {
    _63 <- { _63 with current = (1 : int32) };
    assume { Resolve0.resolve _63 };
    _70 <- some_2;
    _69 <- ([#"../option.rs" 26 12 26 25] Unwrap0.unwrap _70);
    goto BB38
  }
  BB38 {
    _68 <- ([#"../option.rs" 26 12 26 30] _69 = (1 : int32));
    _67 <- not _68;
    switch (_67)
      | False -> goto BB40
      | True -> goto BB39
      end
  }
  BB39 {
    absurd
  }
  BB40 {
    _66 <- ();
    _77 <- none_1;
    _76 <- ([#"../option.rs" 28 12 28 25] AsRef0.as_ref _77);
    goto BB41
  }
  BB41 {
    _75 <- _76;
    _74 <- ([#"../option.rs" 28 12 28 35] IsNone2.is_none _75);
    goto BB42
  }
  BB42 {
    _73 <- not _74;
    switch (_73)
      | False -> goto BB44
      | True -> goto BB43
      end
  }
  BB43 {
    absurd
  }
  BB44 {
    _72 <- ();
    _85 <- some_2;
    _84 <- ([#"../option.rs" 29 13 29 26] AsRef0.as_ref _85);
    goto BB45
  }
  BB45 {
    _83 <- ([#"../option.rs" 29 13 29 35] Unwrap2.unwrap _84);
    goto BB46
  }
  BB46 {
    _82 <- _83;
    _81 <- ([#"../option.rs" 29 12 29 40] _82 = (1 : int32));
    _80 <- not _81;
    switch (_80)
      | False -> goto BB48
      | True -> goto BB47
      end
  }
  BB47 {
    absurd
  }
  BB48 {
    _79 <- ();
    _92 <- none_1;
    _93 <- none_1;
    _91 <- ([#"../option.rs" 32 12 32 26] And0.and _92 _93);
    goto BB49
  }
  BB49 {
    _90 <- _91;
    _89 <- ([#"../option.rs" 32 12 32 36] IsNone0.is_none _90);
    goto BB50
  }
  BB50 {
    _88 <- not _89;
    switch (_88)
      | False -> goto BB52
      | True -> goto BB51
      end
  }
  BB51 {
    absurd
  }
  BB52 {
    _87 <- ();
    _100 <- none_1;
    _101 <- Core_Option_Option_Type.C_Some (2 : int32);
    _99 <- ([#"../option.rs" 33 12 33 29] And0.and _100 _101);
    goto BB53
  }
  BB53 {
    _98 <- _99;
    _97 <- ([#"../option.rs" 33 12 33 39] IsNone0.is_none _98);
    goto BB54
  }
  BB54 {
    _96 <- not _97;
    switch (_96)
      | False -> goto BB56
      | True -> goto BB55
      end
  }
  BB55 {
    absurd
  }
  BB56 {
    _95 <- ();
    _108 <- some_2;
    _109 <- none_1;
    _107 <- ([#"../option.rs" 34 12 34 26] And0.and _108 _109);
    goto BB57
  }
  BB57 {
    _106 <- _107;
    _105 <- ([#"../option.rs" 34 12 34 36] IsNone0.is_none _106);
    goto BB58
  }
  BB58 {
    _104 <- not _105;
    switch (_104)
      | False -> goto BB60
      | True -> goto BB59
      end
  }
  BB59 {
    absurd
  }
  BB60 {
    _103 <- ();
    _116 <- some_2;
    _117 <- Core_Option_Option_Type.C_Some (2 : int32);
    _115 <- ([#"../option.rs" 35 12 35 29] And0.and _116 _117);
    goto BB61
  }
  BB61 {
    _114 <- ([#"../option.rs" 35 12 35 38] Unwrap0.unwrap _115);
    goto BB62
  }
  BB62 {
    _113 <- ([#"../option.rs" 35 12 35 43] _114 = (2 : int32));
    _112 <- not _113;
    switch (_112)
      | False -> goto BB64
      | True -> goto BB63
      end
  }
  BB63 {
    absurd
  }
  BB64 {
    _111 <- ();
    _124 <- none_1;
    _125 <- none_1;
    _123 <- ([#"../option.rs" 37 12 37 25] Or0.or _124 _125);
    goto BB65
  }
  BB65 {
    _122 <- _123;
    _121 <- ([#"../option.rs" 37 12 37 35] IsNone0.is_none _122);
    goto BB66
  }
  BB66 {
    _120 <- not _121;
    switch (_120)
      | False -> goto BB68
      | True -> goto BB67
      end
  }
  BB67 {
    absurd
  }
  BB68 {
    _119 <- ();
    _132 <- none_1;
    _133 <- Core_Option_Option_Type.C_Some (2 : int32);
    _131 <- ([#"../option.rs" 38 12 38 28] Or0.or _132 _133);
    goto BB69
  }
  BB69 {
    _130 <- ([#"../option.rs" 38 12 38 37] Unwrap0.unwrap _131);
    goto BB70
  }
  BB70 {
    _129 <- ([#"../option.rs" 38 12 38 42] _130 = (2 : int32));
    _128 <- not _129;
    switch (_128)
      | False -> goto BB72
      | True -> goto BB71
      end
  }
  BB71 {
    absurd
  }
  BB72 {
    _127 <- ();
    _140 <- some_2;
    _141 <- none_1;
    _139 <- ([#"../option.rs" 39 12 39 25] Or0.or _140 _141);
    goto BB73
  }
  BB73 {
    _138 <- ([#"../option.rs" 39 12 39 34] Unwrap0.unwrap _139);
    goto BB74
  }
  BB74 {
    _137 <- ([#"../option.rs" 39 12 39 39] _138 = (1 : int32));
    _136 <- not _137;
    switch (_136)
      | False -> goto BB76
      | True -> goto BB75
      end
  }
  BB75 {
    absurd
  }
  BB76 {
    _135 <- ();
    _148 <- some_2;
    _149 <- Core_Option_Option_Type.C_Some (2 : int32);
    _147 <- ([#"../option.rs" 40 12 40 28] Or0.or _148 _149);
    goto BB77
  }
  BB77 {
    _146 <- ([#"../option.rs" 40 12 40 37] Unwrap0.unwrap _147);
    goto BB78
  }
  BB78 {
    _145 <- ([#"../option.rs" 40 12 40 42] _146 = (1 : int32));
    _144 <- not _145;
    switch (_144)
      | False -> goto BB80
      | True -> goto BB79
      end
  }
  BB79 {
    absurd
  }
  BB80 {
    _143 <- ();
    _156 <- borrow_mut none_1;
    none_1 <-  ^ _156;
    _155 <- ([#"../option.rs" 43 12 43 23] Take0.take _156);
    goto BB81
  }
  BB81 {
    _154 <- _155;
    _153 <- ([#"../option.rs" 43 12 43 33] IsNone0.is_none _154);
    goto BB82
  }
  BB82 {
    _152 <- not _153;
    switch (_152)
      | False -> goto BB84
      | True -> goto BB83
      end
  }
  BB83 {
    absurd
  }
  BB84 {
    _151 <- ();
    _161 <- none_1;
    _160 <- ([#"../option.rs" 44 12 44 26] IsNone0.is_none _161);
    goto BB85
  }
  BB85 {
    _159 <- not _160;
    switch (_159)
      | False -> goto BB87
      | True -> goto BB86
      end
  }
  BB86 {
    absurd
  }
  BB87 {
    _158 <- ();
    _168 <- borrow_mut some_2;
    some_2 <-  ^ _168;
    _167 <- ([#"../option.rs" 45 12 45 23] Take0.take _168);
    goto BB88
  }
  BB88 {
    _166 <- ([#"../option.rs" 45 12 45 32] Unwrap0.unwrap _167);
    goto BB89
  }
  BB89 {
    _165 <- ([#"../option.rs" 45 12 45 37] _166 = (1 : int32));
    _164 <- not _165;
    switch (_164)
      | False -> goto BB91
      | True -> goto BB90
      end
  }
  BB90 {
    absurd
  }
  BB91 {
    _163 <- ();
    _173 <- some_2;
    _172 <- ([#"../option.rs" 46 12 46 26] IsNone0.is_none _173);
    goto BB92
  }
  BB92 {
    _171 <- not _172;
    switch (_171)
      | False -> goto BB94
      | True -> goto BB93
      end
  }
  BB93 {
    absurd
  }
  BB94 {
    _170 <- ();
    _175 <- Core_Option_Option_Type.C_Some (1 : int32);
    some_2 <- _175;
    _175 <- any Core_Option_Option_Type.t_option int32;
    _181 <- borrow_mut none_1;
    none_1 <-  ^ _181;
    _180 <- ([#"../option.rs" 49 12 49 27] Replace0.replace _181 (2 : int32));
    goto BB95
  }
  BB95 {
    _179 <- _180;
    _178 <- ([#"../option.rs" 49 12 49 37] IsNone0.is_none _179);
    goto BB96
  }
  BB96 {
    _177 <- not _178;
    switch (_177)
      | False -> goto BB98
      | True -> goto BB97
      end
  }
  BB97 {
    absurd
  }
  BB98 {
    _176 <- ();
    _187 <- none_1;
    _186 <- ([#"../option.rs" 50 12 50 25] Unwrap0.unwrap _187);
    goto BB99
  }
  BB99 {
    _185 <- ([#"../option.rs" 50 12 50 30] _186 = (2 : int32));
    _184 <- not _185;
    switch (_184)
      | False -> goto BB101
      | True -> goto BB100
      end
  }
  BB100 {
    absurd
  }
  BB101 {
    _183 <- ();
    _189 <- Core_Option_Option_Type.C_None;
    none_1 <- _189;
    _189 <- any Core_Option_Option_Type.t_option int32;
    _195 <- borrow_mut some_2;
    some_2 <-  ^ _195;
    _194 <- ([#"../option.rs" 52 12 52 27] Replace0.replace _195 (2 : int32));
    goto BB102
  }
  BB102 {
    _193 <- ([#"../option.rs" 52 12 52 36] Unwrap0.unwrap _194);
    goto BB103
  }
  BB103 {
    _192 <- ([#"../option.rs" 52 12 52 41] _193 = (1 : int32));
    _191 <- not _192;
    switch (_191)
      | False -> goto BB105
      | True -> goto BB104
      end
  }
  BB104 {
    absurd
  }
  BB105 {
    _190 <- ();
    _201 <- some_2;
    _200 <- ([#"../option.rs" 53 12 53 25] Unwrap0.unwrap _201);
    goto BB106
  }
  BB106 {
    _199 <- ([#"../option.rs" 53 12 53 30] _200 = (2 : int32));
    _198 <- not _199;
    switch (_198)
      | False -> goto BB108
      | True -> goto BB107
      end
  }
  BB107 {
    absurd
  }
  BB108 {
    _197 <- ();
    _208 <- borrow_mut some_2;
    some_2 <-  ^ _208;
    _207 <- ([#"../option.rs" 54 12 54 27] Replace0.replace _208 (1 : int32));
    goto BB109
  }
  BB109 {
    _206 <- ([#"../option.rs" 54 12 54 36] Unwrap0.unwrap _207);
    goto BB110
  }
  BB110 {
    _205 <- ([#"../option.rs" 54 12 54 41] _206 = (2 : int32));
    _204 <- not _205;
    switch (_204)
      | False -> goto BB112
      | True -> goto BB111
      end
  }
  BB111 {
    absurd
  }
  BB112 {
    _203 <- ();
    _214 <- some_2;
    _213 <- ([#"../option.rs" 55 12 55 25] Unwrap0.unwrap _214);
    goto BB113
  }
  BB113 {
    _212 <- ([#"../option.rs" 55 12 55 30] _213 = (1 : int32));
    _211 <- not _212;
    switch (_211)
      | False -> goto BB115
      | True -> goto BB114
      end
  }
  BB114 {
    absurd
  }
  BB115 {
    _210 <- ();
    _220 <- none_1;
    _219 <- ([#"../option.rs" 58 12 58 36] UnwrapOrDefault0.unwrap_or_default _220);
    goto BB116
  }
  BB116 {
    _218 <- ([#"../option.rs" 58 12 58 41] _219 = (0 : int32));
    _217 <- not _218;
    switch (_217)
      | False -> goto BB118
      | True -> goto BB117
      end
  }
  BB117 {
    absurd
  }
  BB118 {
    _216 <- ();
    _226 <- some_2;
    _225 <- ([#"../option.rs" 59 12 59 36] UnwrapOrDefault0.unwrap_or_default _226);
    goto BB119
  }
  BB119 {
    _224 <- ([#"../option.rs" 59 12 59 41] _225 = (1 : int32));
    _223 <- not _224;
    switch (_223)
      | False -> goto BB121
      | True -> goto BB120
      end
  }
  BB120 {
    absurd
  }
  BB121 {
    _222 <- ();
    _234 <- none_1;
    _233 <- ([#"../option.rs" 62 12 62 25] AsRef0.as_ref _234);
    goto BB122
  }
  BB122 {
    _232 <- ([#"../option.rs" 62 12 62 34] Copied0.copied _233);
    goto BB123
  }
  BB123 {
    _231 <- _232;
    _230 <- ([#"../option.rs" 62 12 62 44] IsNone0.is_none _231);
    goto BB124
  }
  BB124 {
    _229 <- not _230;
    switch (_229)
      | False -> goto BB126
      | True -> goto BB125
      end
  }
  BB125 {
    absurd
  }
  BB126 {
    _228 <- ();
    _242 <- some_2;
    _241 <- ([#"../option.rs" 63 12 63 25] AsRef0.as_ref _242);
    goto BB127
  }
  BB127 {
    _240 <- ([#"../option.rs" 63 12 63 34] Copied0.copied _241);
    goto BB128
  }
  BB128 {
    _239 <- ([#"../option.rs" 63 12 63 43] Unwrap0.unwrap _240);
    goto BB129
  }
  BB129 {
    _238 <- ([#"../option.rs" 63 12 63 48] _239 = (1 : int32));
    _237 <- not _238;
    switch (_237)
      | False -> goto BB131
      | True -> goto BB130
      end
  }
  BB130 {
    absurd
  }
  BB131 {
    _236 <- ();
    _250 <- borrow_mut none_1;
    none_1 <-  ^ _250;
    _249 <- ([#"../option.rs" 64 12 64 25] AsMut0.as_mut _250);
    goto BB132
  }
  BB132 {
    _248 <- ([#"../option.rs" 64 12 64 34] Copied1.copied _249);
    goto BB133
  }
  BB133 {
    _247 <- _248;
    _246 <- ([#"../option.rs" 64 12 64 44] IsNone0.is_none _247);
    goto BB134
  }
  BB134 {
    _245 <- not _246;
    switch (_245)
      | False -> goto BB136
      | True -> goto BB135
      end
  }
  BB135 {
    absurd
  }
  BB136 {
    _244 <- ();
    _258 <- borrow_mut some_2;
    some_2 <-  ^ _258;
    _257 <- ([#"../option.rs" 65 12 65 25] AsMut0.as_mut _258);
    goto BB137
  }
  BB137 {
    _256 <- ([#"../option.rs" 65 12 65 34] Copied1.copied _257);
    goto BB138
  }
  BB138 {
    _255 <- ([#"../option.rs" 65 12 65 43] Unwrap0.unwrap _256);
    goto BB139
  }
  BB139 {
    _254 <- ([#"../option.rs" 65 12 65 48] _255 = (1 : int32));
    _253 <- not _254;
    switch (_253)
      | False -> goto BB141
      | True -> goto BB140
      end
  }
  BB140 {
    absurd
  }
  BB141 {
    _252 <- ();
    _266 <- none_1;
    _265 <- ([#"../option.rs" 67 12 67 25] AsRef0.as_ref _266);
    goto BB142
  }
  BB142 {
    _264 <- ([#"../option.rs" 67 12 67 34] Cloned0.cloned _265);
    goto BB143
  }
  BB143 {
    _263 <- _264;
    _262 <- ([#"../option.rs" 67 12 67 44] IsNone0.is_none _263);
    goto BB144
  }
  BB144 {
    _261 <- not _262;
    switch (_261)
      | False -> goto BB146
      | True -> goto BB145
      end
  }
  BB145 {
    absurd
  }
  BB146 {
    _260 <- ();
    _274 <- some_2;
    _273 <- ([#"../option.rs" 68 12 68 25] AsRef0.as_ref _274);
    goto BB147
  }
  BB147 {
    _272 <- ([#"../option.rs" 68 12 68 34] Cloned0.cloned _273);
    goto BB148
  }
  BB148 {
    _271 <- ([#"../option.rs" 68 12 68 43] Unwrap0.unwrap _272);
    goto BB149
  }
  BB149 {
    _270 <- ([#"../option.rs" 68 12 68 48] _271 = (1 : int32));
    _269 <- not _270;
    switch (_269)
      | False -> goto BB151
      | True -> goto BB150
      end
  }
  BB150 {
    absurd
  }
  BB151 {
    _268 <- ();
    _282 <- borrow_mut none_1;
    none_1 <-  ^ _282;
    _281 <- ([#"../option.rs" 69 12 69 25] AsMut0.as_mut _282);
    goto BB152
  }
  BB152 {
    _280 <- ([#"../option.rs" 69 12 69 34] Cloned1.cloned _281);
    goto BB153
  }
  BB153 {
    _279 <- _280;
    _278 <- ([#"../option.rs" 69 12 69 44] IsNone0.is_none _279);
    goto BB154
  }
  BB154 {
    _277 <- not _278;
    switch (_277)
      | False -> goto BB156
      | True -> goto BB155
      end
  }
  BB155 {
    absurd
  }
  BB156 {
    _276 <- ();
    _290 <- borrow_mut some_2;
    some_2 <-  ^ _290;
    _289 <- ([#"../option.rs" 70 12 70 25] AsMut0.as_mut _290);
    goto BB157
  }
  BB157 {
    _288 <- ([#"../option.rs" 70 12 70 34] Cloned1.cloned _289);
    goto BB158
  }
  BB158 {
    _287 <- ([#"../option.rs" 70 12 70 43] Unwrap0.unwrap _288);
    goto BB159
  }
  BB159 {
    _286 <- ([#"../option.rs" 70 12 70 48] _287 = (1 : int32));
    _285 <- not _286;
    switch (_285)
      | False -> goto BB161
      | True -> goto BB160
      end
  }
  BB160 {
    absurd
  }
  BB161 {
    _284 <- ();
    opt_292 <- Core_Option_Option_Type.C_None;
    _298 <- opt_292;
    _297 <- ([#"../option.rs" 74 12 74 25] Flatten0.flatten _298);
    goto BB162
  }
  BB162 {
    _296 <- _297;
    _295 <- ([#"../option.rs" 74 12 74 35] IsNone0.is_none _296);
    goto BB163
  }
  BB163 {
    _294 <- not _295;
    switch (_294)
      | False -> goto BB165
      | True -> goto BB164
      end
  }
  BB164 {
    absurd
  }
  BB165 {
    _293 <- ();
    _301 <- Core_Option_Option_Type.C_None;
    opt_300 <- Core_Option_Option_Type.C_Some _301;
    _307 <- opt_300;
    _306 <- ([#"../option.rs" 76 12 76 25] Flatten0.flatten _307);
    goto BB166
  }
  BB166 {
    _305 <- _306;
    _304 <- ([#"../option.rs" 76 12 76 35] IsNone0.is_none _305);
    goto BB167
  }
  BB167 {
    _303 <- not _304;
    switch (_303)
      | False -> goto BB169
      | True -> goto BB168
      end
  }
  BB168 {
    absurd
  }
  BB169 {
    _302 <- ();
    _310 <- Core_Option_Option_Type.C_Some (1 : int32);
    opt_309 <- Core_Option_Option_Type.C_Some _310;
    _316 <- opt_309;
    _315 <- ([#"../option.rs" 78 12 78 25] Flatten0.flatten _316);
    goto BB170
  }
  BB170 {
    _314 <- ([#"../option.rs" 78 12 78 34] Unwrap0.unwrap _315);
    goto BB171
  }
  BB171 {
    _313 <- ([#"../option.rs" 78 12 78 39] _314 = (1 : int32));
    _312 <- not _313;
    switch (_312)
      | False -> goto BB173
      | True -> goto BB172
      end
  }
  BB172 {
    absurd
  }
  BB173 {
    _311 <- ();
    _0 <- ();
    return _0
  }
  
end
