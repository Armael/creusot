module Type
  use Ref
  use mach.int.Int
  use prelude.Int8
  use prelude.Int16
  use mach.int.Int32
  use mach.int.Int64
  use prelude.UInt8
  use prelude.UInt16
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use prelude.Prelude
  type c05pearlite_a  = 
    | C05Pearlite_A bool
    
  let function c05pearlite_a_A_a (self : c05pearlite_a) : bool = 
    match (self) with
      | C05Pearlite_A a -> a
      end
end
module C05Pearlite_Solver_Interface
  use Type
  val solver [@cfg:stackify] (x : Type.c05pearlite_a) : ()
    ensures { [#"../05_pearlite.rs" 12 0 22] Type.c05pearlite_a_A_a x = Type.c05pearlite_a_A_a x }
    
end
module C05Pearlite_Solver
  use Type
  val solver [@cfg:stackify] (x : Type.c05pearlite_a) : ()
    ensures { [#"../05_pearlite.rs" 12 0 22] Type.c05pearlite_a_A_a x = Type.c05pearlite_a_A_a x }
    
end
